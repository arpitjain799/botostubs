{
  "class": null,
  "function": {
    "py/function": "main.get_class_output"
  },
  "module": {
    "py/repr": "main/main"
  },
  "test_cases": [
    {
      "args": {
        "py/tuple": [
          "accessanalyzer"
        ]
      },
      "kwargs": {},
      "return_value": "class AccessAnalyzer(BaseClient):\n    r\"\"\"AWS IAM Access Analyzer helps identify potential resource-access risks by enabling you to identify any policies that grant access to an external principal. It does this by using logic-based reasoning to analyze resource-based policies in your AWS environment. An external principal can be another AWS account, a root user, an IAM user or role, a federated user, an AWS service, or an anonymous user. This guide describes the AWS IAM Access Analyzer operations that you can call programmatically. For general information about Access Analyzer, see the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html\">AWS IAM Access Analyzer section of the IAM User Guide</a>. To start using Access Analyzer, you first need to create an analyzer.\"\"\"\n\n\n\n\n    class CreateAnalyzerRequest(Mapping):\n        pass\n    \n    class CreateAnalyzerResponse(Mapping):\n        pass\n    \n    class InlineArchiveRule(Mapping):\n        pass\n    \n    class TagsMap(object):\n        pass\n    \n    class CreateArchiveRuleRequest(Mapping):\n        pass\n    \n    class FilterCriteriaMap(object):\n        pass\n    \n    class DeleteAnalyzerRequest(Mapping):\n        pass\n    \n    class DeleteArchiveRuleRequest(Mapping):\n        pass\n    \n    class GetAnalyzedResourceRequest(Mapping):\n        pass\n    \n    class GetAnalyzedResourceResponse(Mapping):\n        pass\n    \n    class GetAnalyzerRequest(Mapping):\n        pass\n    \n    class GetAnalyzerResponse(Mapping):\n        pass\n    \n    class GetArchiveRuleRequest(Mapping):\n        pass\n    \n    class GetArchiveRuleResponse(Mapping):\n        pass\n    \n    class GetFindingRequest(Mapping):\n        pass\n    \n    class GetFindingResponse(Mapping):\n        pass\n    \n    class ListAnalyzedResourcesRequest(Mapping):\n        pass\n    \n    class ListAnalyzedResourcesResponse(Mapping):\n        pass\n    \n    class ListAnalyzersRequest(Mapping):\n        pass\n    \n    class ListAnalyzersResponse(Mapping):\n        pass\n    \n    class ListArchiveRulesRequest(Mapping):\n        pass\n    \n    class ListArchiveRulesResponse(Mapping):\n        pass\n    \n    class ListFindingsRequest(Mapping):\n        pass\n    \n    class ListFindingsResponse(Mapping):\n        pass\n    \n    class SortCriteria(Mapping):\n        pass\n    \n    class ListTagsForResourceRequest(Mapping):\n        pass\n    \n    class ListTagsForResourceResponse(Mapping):\n        pass\n    \n    class StartResourceScanRequest(Mapping):\n        pass\n    \n    class TagResourceRequest(Mapping):\n        pass\n    \n    class TagResourceResponse(Mapping):\n        pass\n    \n    class UntagResourceRequest(Mapping):\n        pass\n    \n    class UntagResourceResponse(Mapping):\n        pass\n    \n    class String(object):\n        pass\n    \n    class UpdateArchiveRuleRequest(Mapping):\n        pass\n    \n    class UpdateFindingsRequest(Mapping):\n        pass\n    \n    class FindingId(object):\n        pass\n    \n    def create_analyzer(self, type: str, analyzerName: str, archiveRules: List[InlineArchiveRule]=None, clientToken: str=None, tags: TagsMap=None) -> CreateAnalyzerResponse:\n        r\"\"\"Creates an analyzer for your account.\n\n        :param self:\n        :param type:  The type of analyzer to create. Only ACCOUNT analyzers are supported. You can create only one analyzer per account per Region.<br/>tags:  The tags to apply to the analyzer.<br/>clientToken:  A client token.<br/>archiveRules:  Specifies the archive rules to add for the analyzer. Archive rules automatically archive findings that meet the criteria you define for the rule.<br/>analyzerName:  The name of the analyzer to create.<br/>\n        :return: arn:  The ARN of the analyzer that was created by the request.<br/>        \"\"\"\n        pass\n\n    def create_archive_rule(self, ruleName: str, filter: FilterCriteriaMap, analyzerName: str, clientToken: str=None):\n        r\"\"\"Creates an archive rule for the specified analyzer. Archive rules automatically archive findings that meet the criteria you define when you create the rule.\n\n        :param self:\n        :param ruleName:  The name of the rule to create.<br/>filter:  The criteria for the rule.<br/>clientToken:  A client token.<br/>analyzerName:  The name of the created analyzer.<br/>\n        :return:         \"\"\"\n        pass\n\n    def delete_analyzer(self, analyzerName: str, clientToken: str=None):\n        r\"\"\"Deletes the specified analyzer. When you delete an analyzer, Access Analyzer is disabled for the account in the current or specific Region. All findings that were generated by the analyzer are deleted. You cannot undo this action.\n\n        :param self:\n        :param clientToken:  A client token.<br/>analyzerName:  The name of the analyzer to delete.<br/>\n        :return:         \"\"\"\n        pass\n\n    def delete_archive_rule(self, ruleName: str, analyzerName: str, clientToken: str=None):\n        r\"\"\"Deletes the specified archive rule.\n\n        :param self:\n        :param ruleName:  The name of the rule to delete.<br/>clientToken:  A client token.<br/>analyzerName:  The name of the analyzer that associated with the archive rule to delete.<br/>\n        :return:         \"\"\"\n        pass\n\n    def get_analyzed_resource(self, resourceArn: str, analyzerArn: str) -> GetAnalyzedResourceResponse:\n        r\"\"\"Retrieves information about a resource that was analyzed.\n\n        :param self:\n        :param resourceArn:  The ARN of the resource to retrieve information about.<br/>analyzerArn:  The ARN of the analyzer to retrieve information from.<br/>\n        :return: resource:  An <code>AnalyedResource</code> object that contains information that Access Analyzer found when it analyzed the resource.:<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>updatedAt</i> The time at which the finding was updated.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>status</i> The current status of the finding generated from the analyzed resource.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>sharedVia</i> Indicates how the access that generated the finding is granted.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>resourceType</i> The type of the resource that was analyzed.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>resourceArn</i> The ARN of the resource that was analyzed.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>isPublic</i> Indicates whether the policy that generated the finding grants public access to the resource.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>error</i> An error message.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>createdAt</i> The time at which the finding was created.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>analyzedAt</i> The time at which the resource was analyzed.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>actions</i> The actions that an external principal is granted permission to use by the policy that generated the finding.<br/>        \"\"\"\n        pass\n\n    def get_analyzer(self, analyzerName: str) -> GetAnalyzerResponse:\n        r\"\"\"Retrieves information about the specified analyzer.\n\n        :param self:\n        :param analyzerName:  The name of the analyzer retrieved.<br/>\n        :return: analyzer:  An <code>AnalyzerSummary</code> object that contains information about the analyzer.:<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>type</i> The type of analyzer, which corresponds to the zone of trust chosen for the analyzer.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>tags</i> The tags added to the analyzer.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>name</i> The name of the analyzer.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>lastResourceAnalyzedAt</i> The time at which the most recently analyzed resource was analyzed.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>lastResourceAnalyzed</i> The resource that was most recently analyzed by the analyzer.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>createdAt</i> A timestamp for the time at which the analyzer was created.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>arn</i> The ARN of the analyzer.<br/>        \"\"\"\n        pass\n\n    def get_archive_rule(self, ruleName: str, analyzerName: str) -> GetArchiveRuleResponse:\n        r\"\"\"Retrieves information about an archive rule.\n\n        :param self:\n        :param ruleName:  The name of the rule to retrieve.<br/>analyzerName:  The name of the analyzer to retrieve rules from.<br/>\n        :return: archiveRule:  Contains information about an archive rule.:<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>updatedAt</i> The time at which the archive rule was last updated.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>ruleName</i> The name of the archive rule.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>filter</i> A filter used to define the archive rule.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>createdAt</i> The time at which the archive rule was created.<br/>        \"\"\"\n        pass\n\n    def get_finding(self, id: str, analyzerArn: str) -> GetFindingResponse:\n        r\"\"\"Retrieves information about the specified finding.\n\n        :param self:\n        :param id:  The ID of the finding to retrieve.<br/>analyzerArn:  The ARN of the analyzer that generated the finding.<br/>\n        :return: finding:  A <code>finding</code> object that contains finding details.:<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>updatedAt</i> The time at which the finding was updated.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>status</i> The current status of the finding.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>resourceType</i> The type of the resource reported in the finding.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>resource</i> The resource that an external principal has access to.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>principal</i> The external principal that access to a resource within the zone of trust.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>isPublic</i> Indicates whether the policy that generated the finding allows public access to the resource.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>id</i> The ID of the finding.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>error</i> An error.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>createdAt</i> The time at which the finding was generated.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>condition</i> The condition in the analyzed policy statement that resulted in a finding.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>analyzedAt</i> The time at which the resource was analyzed.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>action</i> The action in the analyzed policy statement that an external principal has permission to use.<br/>        \"\"\"\n        pass\n\n    def list_analyzed_resources(self, analyzerArn: str, maxResults: int=None, nextToken: str=None, resourceType: str=None) -> ListAnalyzedResourcesResponse:\n        r\"\"\"Retrieves a list of resources of the specified type that have been analyzed by the specified analyzer..\n\n        :param self:\n        :param resourceType:  The type of resource.<br/>nextToken:  A token used for pagination of results returned.<br/>maxResults:  The maximum number of results to return in the response.<br/>analyzerArn:  The ARN of the analyzer to retrieve a list of analyzed resources from.<br/>\n        :return: nextToken:  A token used for pagination of results returned.<br/>analyzedResources:  A list of resources that were analyzed.<br/>        \"\"\"\n        pass\n\n    def list_analyzers(self, maxResults: int=None, nextToken: str=None, type: str=None) -> ListAnalyzersResponse:\n        r\"\"\"Retrieves a list of analyzers.\n\n        :param self:\n        :param type:  The type of analyzer.<br/>nextToken:  A token used for pagination of results returned.<br/>maxResults:  The maximum number of results to return in the response.<br/>\n        :return: nextToken:  A token used for pagination of results returned.<br/>analyzers:  The analyzers retrieved.<br/>        \"\"\"\n        pass\n\n    def list_archive_rules(self, analyzerName: str, maxResults: int=None, nextToken: str=None) -> ListArchiveRulesResponse:\n        r\"\"\"Retrieves a list of archive rules created for the specified analyzer.\n\n        :param self:\n        :param nextToken:  A token used for pagination of results returned.<br/>maxResults:  The maximum number of results to return in the request.<br/>analyzerName:  The name of the analyzer to retrieve rules from.<br/>\n        :return: nextToken:  A token used for pagination of results returned.<br/>archiveRules:  A list of archive rules created for the specified analyzer.<br/>        \"\"\"\n        pass\n\n    def list_findings(self, analyzerArn: str, filter: FilterCriteriaMap=None, maxResults: int=None, nextToken: str=None, sort: SortCriteria=None) -> ListFindingsResponse:\n        r\"\"\"Retrieves a list of findings generated by the specified analyzer.\n\n        :param self:\n        :param sort:  The sort order for the findings returned.:<br/>nextToken:  A token used for pagination of results returned.<br/>maxResults:  The maximum number of results to return in the response.<br/>filter:  A filter to match for the findings to return.<br/>analyzerArn:  The ARN of the analyzer to retrieve findings from.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>orderBy</i> The sort order, ascending or descending.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>attributeName</i> The name of the attribute to sort on.<br/>\n        :return: nextToken:  A token used for pagination of results returned.<br/>findings:  A list of findings retrieved from the analyzer that match the filter criteria specified, if any.<br/>        \"\"\"\n        pass\n\n    def list_tags_for_resource(self, resourceArn: str) -> ListTagsForResourceResponse:\n        r\"\"\"Retrieves a list of tags applied to the specified resource.\n\n        :param self:\n        :param resourceArn:  The ARN of the resource to retrieve tags from.<br/>\n        :return: tags:  The tags that are applied to the specified resource.<br/>        \"\"\"\n        pass\n\n    def start_resource_scan(self, resourceArn: str, analyzerArn: str):\n        r\"\"\"Immediately starts a scan of the policies applied to the specified resource.\n\n        :param self:\n        :param resourceArn:  The ARN of the resource to scan.<br/>analyzerArn:  The ARN of the analyzer to use to scan the policies applied to the specified resource.<br/>\n        :return:         \"\"\"\n        pass\n\n    def tag_resource(self, tags: TagsMap, resourceArn: str) -> TagResourceResponse:\n        r\"\"\"Adds a tag to the specified resource.\n\n        :param self:\n        :param tags:  The tags to add to the resource.<br/>resourceArn:  The ARN of the resource to add the tag to.<br/>\n        :return:         \"\"\"\n        pass\n\n    def untag_resource(self, tagKeys: List[String], resourceArn: str) -> UntagResourceResponse:\n        r\"\"\"Removes a tag from the specified resource.\n\n        :param self:\n        :param tagKeys:  The key for the tag to add.<br/>resourceArn:  The ARN of the resource to remove the tag from.<br/>\n        :return:         \"\"\"\n        pass\n\n    def update_archive_rule(self, ruleName: str, filter: FilterCriteriaMap, analyzerName: str, clientToken: str=None):\n        r\"\"\"Updates the criteria and values for the specified archive rule.\n\n        :param self:\n        :param ruleName:  The name of the rule to update.<br/>filter:  A filter to match for the rules to update. Only rules that match the filter are updated.<br/>clientToken:  A client token.<br/>analyzerName:  The name of the analyzer to update the archive rules for.<br/>\n        :return:         \"\"\"\n        pass\n\n    def update_findings(self, status: str, analyzerArn: str, clientToken: str=None, ids: List[FindingId]=None, resourceArn: str=None):\n        r\"\"\"Updates the status for the specified findings.\n\n        :param self:\n        :param status:  The state represents the action to take to update the finding Status. Use <code>ARCHIVE</code> to change an Active finding to an Archived finding. Use <code>ACTIVE</code> to change an Archived finding to an Active finding.<br/>resourceArn:  The ARN of the resource identified in the finding.<br/>ids:  The IDs of the findings to update.<br/>clientToken:  A client token.<br/>analyzerArn:  The ARN of the analyzer that generated the findings to update.<br/>\n        :return:         \"\"\"\n        pass\n\n\n"
    },
    {
      "args": {
        "py/tuple": [
          "acm"
        ]
      },
      "kwargs": {},
      "return_value": "class ACM(BaseClient):\n    r\"\"\"<fullname>AWS Certificate Manager</fullname> Welcome to the AWS Certificate Manager (ACM) API documentation. You can use ACM to manage SSL/TLS certificates for your AWS-based websites and applications. For general information about using ACM, see the <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/\"> <i>AWS Certificate Manager User Guide</i> </a>.\"\"\"\n\n    class CertificateValidatedWaiter(Waiter):\n        def wait(self, **kwargs):\n            r\"\"\"see function `describe_certificate` for valid parameters\"\"\"\n            pass\n\n\n    class ListCertificatesPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `list_certificates` for valid parameters\"\"\"\n            pass\n\n\n    class AddTagsToCertificateRequest(Mapping):\n        pass\n    \n    class Tag(Mapping):\n        pass\n    \n    class DeleteCertificateRequest(Mapping):\n        pass\n    \n    class DescribeCertificateRequest(Mapping):\n        pass\n    \n    class DescribeCertificateResponse(Mapping):\n        pass\n    \n    class ExportCertificateRequest(Mapping):\n        pass\n    \n    class ExportCertificateResponse(Mapping):\n        pass\n    \n    class PassphraseBlob(object):\n        pass\n    \n    class GetCertificateRequest(Mapping):\n        pass\n    \n    class GetCertificateResponse(Mapping):\n        pass\n    \n    class ImportCertificateRequest(Mapping):\n        pass\n    \n    class ImportCertificateResponse(Mapping):\n        pass\n    \n    class CertificateBodyBlob(object):\n        pass\n    \n    class PrivateKeyBlob(object):\n        pass\n    \n    class CertificateChainBlob(object):\n        pass\n    \n    class ListCertificatesRequest(Mapping):\n        pass\n    \n    class ListCertificatesResponse(Mapping):\n        pass\n    \n    class CertificateStatus(object):\n        pass\n    \n    class Filters(Mapping):\n        pass\n    \n    class ListTagsForCertificateRequest(Mapping):\n        pass\n    \n    class ListTagsForCertificateResponse(Mapping):\n        pass\n    \n    class RemoveTagsFromCertificateRequest(Mapping):\n        pass\n    \n    class RenewCertificateRequest(Mapping):\n        pass\n    \n    class RequestCertificateRequest(Mapping):\n        pass\n    \n    class RequestCertificateResponse(Mapping):\n        pass\n    \n    class DomainNameString(object):\n        pass\n    \n    class DomainValidationOption(Mapping):\n        pass\n    \n    class CertificateOptions(Mapping):\n        pass\n    \n    class ResendValidationEmailRequest(Mapping):\n        pass\n    \n    class UpdateCertificateOptionsRequest(Mapping):\n        pass\n    \n    def add_tags_to_certificate(self, Tags: List[Tag], CertificateArn: str):\n        r\"\"\"Adds one or more tags to an ACM certificate. Tags are labels that you can use to identify and organize your AWS resources. Each tag consists of a <code>key</code> and an optional <code>value</code>. You specify the certificate on input by its Amazon Resource Name (ARN). You specify the tag by using a key-value pair.  You can apply a tag to just one certificate if you want to identify a specific characteristic of that certificate, or you can apply the same tag to multiple certificates if you want to filter for a common relationship among those certificates. Similarly, you can apply the same tag to multiple resources if you want to specify a relationship among those resources. For example, you can add the same tag to an ACM certificate and an Elastic Load Balancing load balancer to indicate that they are both used by the same website. For more information, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/tags.html\">Tagging ACM certificates</a>.  To remove one or more tags, use the <a>RemoveTagsFromCertificate</a> action. To view all of the tags that have been applied to the certificate, use the <a>ListTagsForCertificate</a> action. \n\n        :param self:\n        :param Tags:  The key-value pair that defines the tag. The tag value is optional.<br/>CertificateArn:  String that contains the ARN of the ACM certificate to which the tag is to be applied. This must be of the form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>. <br/>\n        :return:         \"\"\"\n        pass\n\n    def delete_certificate(self, CertificateArn: str):\n        r\"\"\"Deletes a certificate and its associated private key. If this action succeeds, the certificate no longer appears in the list that can be displayed by calling the <a>ListCertificates</a> action or be retrieved by calling the <a>GetCertificate</a> action. The certificate will not be available for use by AWS services integrated with ACM.  <note> You cannot delete an ACM certificate that is being used by another AWS service. To delete a certificate that is in use, the certificate association must first be removed. </note>\n\n        :param self:\n        :param CertificateArn:  String that contains the ARN of the ACM certificate to be deleted. This must be of the form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.<br/>\n        :return:         \"\"\"\n        pass\n\n    def describe_certificate(self, CertificateArn: str) -> DescribeCertificateResponse:\n        r\"\"\"Returns detailed metadata about the specified ACM certificate.\n\n        :param self:\n        :param CertificateArn:  The Amazon Resource Name (ARN) of the ACM certificate. The ARN must have the following form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.<br/>\n        :return: Certificate:  Metadata about an ACM certificate.:<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Options</i> Value that specifies whether to add the certificate to a transparency log. Certificate transparency makes it possible to detect SSL certificates that have been mistakenly or maliciously issued. A browser might respond to certificate that has not been logged by showing an error message. The logs are cryptographically secure. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>Options</b>: Value that specifies whether to add the certificate to a transparency log. Certificate transparency makes it possible to detect SSL certificates that have been mistakenly or maliciously issued. A browser might respond to certificate that has not been logged by showing an error message. The logs are cryptographically secure. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>RenewalEligibility</i> Specifies whether the certificate is eligible for renewal. At this time, only exported private certificates can be renewed with the <a>RenewCertificate</a> command.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>CertificateAuthorityArn</i> The Amazon Resource Name (ARN) of the ACM PCA private certificate authority (CA) that issued the certificate. This has the following format:   <code>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012</code> <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>ExtendedKeyUsages</i> Contains a list of Extended Key Usage X.509 v3 extension objects. Each object specifies a purpose for which the certificate public key can be used and consists of a name and an object identifier (OID). <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>KeyUsages</i> A list of Key Usage X.509 v3 extension objects. Each object is a string value that identifies the purpose of the public key contained in the certificate. Possible extension values include DIGITAL_SIGNATURE, KEY_ENCHIPHERMENT, NON_REPUDIATION, and more.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>RenewalSummary</i> Contains information about the status of ACM's <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a> for the certificate. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>RenewalSummary</b>: Contains information about the status of ACM's <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a> for the certificate. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Type</i> The source of the certificate. For certificates provided by ACM, this value is <code>AMAZON_ISSUED</code>. For certificates that you imported with <a>ImportCertificate</a>, this value is <code>IMPORTED</code>. ACM does not provide <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a> for imported certificates. For more information about the differences between certificates that you import and those that ACM provides, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html\">Importing Certificates</a> in the <i>AWS Certificate Manager User Guide</i>. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>FailureReason</i> The reason the certificate request failed. This value exists only when the certificate status is <code>FAILED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/troubleshooting.html#troubleshooting-failed\">Certificate Request Failed</a> in the <i>AWS Certificate Manager User Guide</i>. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>InUseBy</i> A list of ARNs for the AWS resources that are using the certificate. A certificate can be used by multiple AWS resources. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>SignatureAlgorithm</i> The algorithm that was used to sign the certificate.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>KeyAlgorithm</i> The algorithm that was used to generate the public-private key pair.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>NotAfter</i> The time after which the certificate is not valid.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>NotBefore</i> The time before which the certificate is not valid.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>RevocationReason</i> The reason the certificate was revoked. This value exists only when the certificate status is <code>REVOKED</code>. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>RevokedAt</i> The time at which the certificate was revoked. This value exists only when the certificate status is <code>REVOKED</code>. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Status</i> The status of the certificate.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>ImportedAt</i> The date and time at which the certificate was imported. This value exists only when the certificate type is <code>IMPORTED</code>. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>IssuedAt</i> The time at which the certificate was issued. This value exists only when the certificate type is <code>AMAZON_ISSUED</code>. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>CreatedAt</i> The time at which the certificate was requested. This value exists only when the certificate type is <code>AMAZON_ISSUED</code>. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Issuer</i> The name of the certificate authority that issued and signed the certificate.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Subject</i> The name of the entity that is associated with the public key contained in the certificate.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Serial</i> The serial number of the certificate.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>DomainValidationOptions</i> Contains information about the initial validation of each domain name that occurs as a result of the <a>RequestCertificate</a> request. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>SubjectAlternativeNames</i> One or more domain names (subject alternative names) included in the certificate. This list contains the domain names that are bound to the public key that is contained in the certificate. The subject alternative names include the canonical domain name (CN) of the certificate and additional domain names that can be used to connect to the website. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>DomainName</i> The fully qualified domain name for the certificate, such as www.example.com or example.com.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>CertificateArn</i> The Amazon Resource Name (ARN) of the certificate. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>UpdatedAt</i> The time at which the renewal summary was last updated.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>RenewalStatusReason</i> The reason that a renewal request was unsuccessful.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>DomainValidationOptions</i> Contains information about the validation of each domain name in the certificate, as it pertains to ACM's <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a>. This is different from the initial validation that occurs as a result of the <a>RequestCertificate</a> request. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>RenewalStatus</i> The status of ACM's <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a> of the certificate.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>CertificateTransparencyLoggingPreference</i> You can opt out of certificate transparency logging by specifying the <code>DISABLED</code> option. Opt in by specifying <code>ENABLED</code>. <br/>        \"\"\"\n        pass\n\n    def export_certificate(self, Passphrase: PassphraseBlob, CertificateArn: str) -> ExportCertificateResponse:\n        r\"\"\"Exports a private certificate issued by a private certificate authority (CA) for use anywhere. The exported file contains the certificate, the certificate chain, and the encrypted private 2048-bit RSA key associated with the public key that is embedded in the certificate. For security, you must assign a passphrase for the private key when exporting it.  For information about exporting and formatting a certificate using the ACM console or CLI, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-export-private.html\">Export a Private Certificate</a>.\n\n        :param self:\n        :param Passphrase:  Passphrase to associate with the encrypted exported private key. If you want to later decrypt the private key, you must have the passphrase. You can use the following OpenSSL command to decrypt a private key:   <code>openssl rsa -in encrypted_key.pem -out decrypted_key.pem</code> <br/>CertificateArn:  An Amazon Resource Name (ARN) of the issued certificate. This must be of the form:  <code>arn:aws:acm:region:account:certificate/12345678-1234-1234-1234-123456789012</code> <br/>\n        :return: PrivateKey:  The encrypted private key associated with the public key in the certificate. The key is output in PKCS #8 format and is base64 PEM-encoded. <br/>CertificateChain:  The base64 PEM-encoded certificate chain. This does not include the certificate that you are exporting.<br/>Certificate:  The base64 PEM-encoded certificate.<br/>        \"\"\"\n        pass\n\n    def get_certificate(self, CertificateArn: str) -> GetCertificateResponse:\n        r\"\"\"Retrieves a certificate specified by an ARN and its certificate chain . The chain is an ordered list of certificates that contains the end entity certificate, intermediate certificates of subordinate CAs, and the root certificate in that order. The certificate and certificate chain are base64 encoded. If you want to decode the certificate to see the individual fields, you can use OpenSSL.\n\n        :param self:\n        :param CertificateArn:  String that contains a certificate ARN in the following format:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.<br/>\n        :return: CertificateChain:  The certificate chain that contains the root certificate issued by the certificate authority (CA).<br/>Certificate:  String that contains the ACM certificate represented by the ARN specified at input.<br/>        \"\"\"\n        pass\n\n    def import_certificate(self, PrivateKey: PrivateKeyBlob, Certificate: CertificateBodyBlob, CertificateArn: str=None, CertificateChain: CertificateChainBlob=None, Tags: List[Tag]=None) -> ImportCertificateResponse:\n        r\"\"\"Imports a certificate into AWS Certificate Manager (ACM) to use with services that are integrated with ACM. Note that <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/acm-services.html\">integrated services</a> allow only certificate types and keys they support to be associated with their resources. Further, their support differs depending on whether the certificate is imported into IAM or into ACM. For more information, see the documentation for each service. For more information about importing certificates into ACM, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html\">Importing Certificates</a> in the <i>AWS Certificate Manager User Guide</i>.  <note> ACM does not provide <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a> for certificates that you import. </note> Note the following guidelines when importing third party certificates: <ul> <li> You must enter the private key that matches the certificate you are importing. </li> <li> The private key must be unencrypted. You cannot import a private key that is protected by a password or a passphrase. </li> <li> If the certificate you are importing is not self-signed, you must enter its certificate chain. </li> <li> If a certificate chain is included, the issuer must be the subject of one of the certificates in the chain. </li> <li> The certificate, private key, and certificate chain must be PEM-encoded. </li> <li> The current time must be between the <code>Not Before</code> and <code>Not After</code> certificate fields. </li> <li> The <code>Issuer</code> field must not be empty. </li> <li> The OCSP authority URL, if present, must not exceed 1000 characters. </li> <li> To import a new certificate, omit the <code>CertificateArn</code> argument. Include this argument only when you want to replace a previously imported certifica </li> <li> When you import a certificate by using the CLI, you must specify the certificate, the certificate chain, and the private key by their file names preceded by <code>file://</code>. For example, you can specify a certificate saved in the <code>C:\\temp</code> folder as <code>file://C:\\temp\\certificate_to_import.pem</code>. If you are making an HTTP or HTTPS Query request, include these arguments as BLOBs.  </li> <li> When you import a certificate by using an SDK, you must specify the certificate, the certificate chain, and the private key files in the manner required by the programming language you're using.  </li> <li> The cryptographic algorithm of an imported certificate must match the algorithm of the signing CA. For example, if the signing CA key type is RSA, then the certificate key type must also be RSA. </li> </ul> This operation returns the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the imported certificate.\n\n        :param self:\n        :param Tags:  One or more resource tags to associate with the imported certificate.  Note: You cannot apply tags when reimporting a certificate.<br/>CertificateChain:  The PEM encoded certificate chain.<br/>PrivateKey:  The private key that matches the public key in the certificate.<br/>Certificate:  The certificate to import.<br/>CertificateArn:  The <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of an imported certificate to replace. To import a new certificate, omit this field. <br/>\n        :return: CertificateArn:  The <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the imported certificate.<br/>        \"\"\"\n        pass\n\n    def list_certificates(self, CertificateStatuses: List[CertificateStatus]=None, Includes: Filters=None, NextToken: str=None, MaxItems: int=None) -> ListCertificatesResponse:\n        r\"\"\"Retrieves a list of certificate ARNs and domain names. You can request that only certificates that match a specific status be listed. You can also filter by specific attributes of the certificate. Default filtering returns only <code>RSA_2048</code> certificates. For more information, see <a>Filters</a>.\n\n        :param self:\n        :param MaxItems:  Use this parameter when paginating results to specify the maximum number of items to return in the response. If additional items exist beyond the number you specify, the <code>NextToken</code> element is sent in the response. Use this <code>NextToken</code> value in a subsequent request to retrieve additional items.<br/>NextToken:  Use this parameter only when paginating results and only in a subsequent request after you receive a response with truncated results. Set it to the value of <code>NextToken</code> from the response you just received.<br/>Includes:  Filter the certificate list. For more information, see the <a>Filters</a> structure.:<br/>CertificateStatuses:  Filter the certificate list by status value.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>keyTypes</i> Specify one or more algorithms that can be used to generate key pairs. Default filtering returns only <code>RSA_2048</code> certificates. To return other certificate types, provide the desired type signatures in a comma-separated list. For example, <code>\"keyTypes\": [\"RSA_2048,RSA_4096\"]</code> returns both <code>RSA_2048</code> and <code>RSA_4096</code> certificates.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>keyUsage</i> Specify one or more <a>KeyUsage</a> extension values.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>extendedKeyUsage</i> Specify one or more <a>ExtendedKeyUsage</a> extension values.<br/>\n        :return: CertificateSummaryList:  A list of ACM certificates.<br/>NextToken:  When the list is truncated, this value is present and contains the value to use for the <code>NextToken</code> parameter in a subsequent pagination request.<br/>        \"\"\"\n        pass\n\n    def list_tags_for_certificate(self, CertificateArn: str) -> ListTagsForCertificateResponse:\n        r\"\"\"Lists the tags that have been applied to the ACM certificate. Use the certificate's Amazon Resource Name (ARN) to specify the certificate. To add a tag to an ACM certificate, use the <a>AddTagsToCertificate</a> action. To delete a tag, use the <a>RemoveTagsFromCertificate</a> action. \n\n        :param self:\n        :param CertificateArn:  String that contains the ARN of the ACM certificate for which you want to list the tags. This must have the following form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>. <br/>\n        :return: Tags:  The key-value pairs that define the applied tags.<br/>        \"\"\"\n        pass\n\n    def remove_tags_from_certificate(self, Tags: List[Tag], CertificateArn: str):\n        r\"\"\"Remove one or more tags from an ACM certificate. A tag consists of a key-value pair. If you do not specify the value portion of the tag when calling this function, the tag will be removed regardless of value. If you specify a value, the tag is removed only if it is associated with the specified value.  To add tags to a certificate, use the <a>AddTagsToCertificate</a> action. To view all of the tags that have been applied to a specific ACM certificate, use the <a>ListTagsForCertificate</a> action. \n\n        :param self:\n        :param Tags:  The key-value pair that defines the tag to remove.<br/>CertificateArn:  String that contains the ARN of the ACM Certificate with one or more tags that you want to remove. This must be of the form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>. <br/>\n        :return:         \"\"\"\n        pass\n\n    def renew_certificate(self, CertificateArn: str):\n        r\"\"\"Renews an eligable ACM certificate. At this time, only exported private certificates can be renewed with this operation. In order to renew your ACM PCA certificates with ACM, you must first <a href=\"https://docs.aws.amazon.com/acm-pca/latest/userguide/PcaPermissions.html\">grant the ACM service principal permission to do so</a>. For more information, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/manual-renewal.html\">Testing Managed Renewal</a> in the ACM User Guide.\n\n        :param self:\n        :param CertificateArn:  String that contains the ARN of the ACM certificate to be renewed. This must be of the form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.<br/>\n        :return:         \"\"\"\n        pass\n\n    def request_certificate(self, DomainName: str, ValidationMethod: str=None, SubjectAlternativeNames: List[DomainNameString]=None, IdempotencyToken: str=None, DomainValidationOptions: List[DomainValidationOption]=None, Options: CertificateOptions=None, CertificateAuthorityArn: str=None, Tags: List[Tag]=None) -> RequestCertificateResponse:\n        r\"\"\"Requests an ACM certificate for use with other AWS services. To request an ACM certificate, you must specify a fully qualified domain name (FQDN) in the <code>DomainName</code> parameter. You can also specify additional FQDNs in the <code>SubjectAlternativeNames</code> parameter.  If you are requesting a private certificate, domain validation is not required. If you are requesting a public certificate, each domain name that you specify must be validated to verify that you own or control the domain. You can use <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html\">DNS validation</a> or <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-email.html\">email validation</a>. We recommend that you use DNS validation. ACM issues public certificates after receiving approval from the domain owner. \n\n        :param self:\n        :param Tags:  One or more resource tags to associate with the certificate.<br/>CertificateAuthorityArn:  The Amazon Resource Name (ARN) of the private certificate authority (CA) that will be used to issue the certificate. If you do not provide an ARN and you are trying to request a private certificate, ACM will attempt to issue a public certificate. For more information about private CAs, see the <a href=\"https://docs.aws.amazon.com/acm-pca/latest/userguide/PcaWelcome.html\">AWS Certificate Manager Private Certificate Authority (PCA)</a> user guide. The ARN must have the following form:   <code>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012</code> <br/>Options:  Currently, you can use this parameter to specify whether to add the certificate to a certificate transparency log. Certificate transparency makes it possible to detect SSL/TLS certificates that have been mistakenly or maliciously issued. Certificates that have not been logged typically produce an error message in a browser. For more information, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/acm-bestpractices.html#best-practices-transparency\">Opting Out of Certificate Transparency Logging</a>.:<br/>DomainValidationOptions:  The domain name that you want ACM to use to send you emails so that you can validate domain ownership.<br/>IdempotencyToken:  Customer chosen string that can be used to distinguish between calls to <code>RequestCertificate</code>. Idempotency tokens time out after one hour. Therefore, if you call <code>RequestCertificate</code> multiple times with the same idempotency token within one hour, ACM recognizes that you are requesting only one certificate and will issue only one. If you change the idempotency token for each call, ACM recognizes that you are requesting multiple certificates.<br/>SubjectAlternativeNames:  Additional FQDNs to be included in the Subject Alternative Name extension of the ACM certificate. For example, add the name www.example.net to a certificate for which the <code>DomainName</code> field is www.example.com if users can reach your site by using either name. The maximum number of domain names that you can add to an ACM certificate is 100. However, the initial limit is 10 domain names. If you need more than 10 names, you must request a limit increase. For more information, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html\">Limits</a>.  The maximum length of a SAN DNS name is 253 octets. The name is made up of multiple labels separated by periods. No label can be longer than 63 octets. Consider the following examples:  <ul> <li>  <code>(63 octets).(63 octets).(63 octets).(61 octets)</code> is legal because the total length is 253 octets (63+1+63+1+63+1+61) and no label exceeds 63 octets. </li> <li>  <code>(64 octets).(63 octets).(63 octets).(61 octets)</code> is not legal because the total length exceeds 253 octets (64+1+63+1+63+1+61) and the first label exceeds 63 octets. </li> <li>  <code>(63 octets).(63 octets).(63 octets).(62 octets)</code> is not legal because the total length of the DNS name (63+1+63+1+63+1+62) exceeds 253 octets. </li> </ul><br/>ValidationMethod:  The method you want to use if you are requesting a public certificate to validate that you own or control domain. You can <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html\">validate with DNS</a> or <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-email.html\">validate with email</a>. We recommend that you use DNS validation. <br/>DomainName:   Fully qualified domain name (FQDN), such as www.example.com, that you want to secure with an ACM certificate. Use an asterisk (*) to create a wildcard certificate that protects several sites in the same domain. For example, *.example.com protects www.example.com, site.example.com, and images.example.com.   The first domain name you enter cannot exceed 64 octets, including periods. Each subsequent Subject Alternative Name (SAN), however, can be up to 253 octets in length. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>CertificateTransparencyLoggingPreference</i> You can opt out of certificate transparency logging by specifying the <code>DISABLED</code> option. Opt in by specifying <code>ENABLED</code>. <br/>\n        :return: CertificateArn:  String that contains the ARN of the issued certificate. This must be of the form:  <code>arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> <br/>        \"\"\"\n        pass\n\n    def resend_validation_email(self, ValidationDomain: str, Domain: str, CertificateArn: str):\n        r\"\"\"Resends the email that requests domain ownership validation. The domain owner or an authorized representative must approve the ACM certificate before it can be issued. The certificate can be approved by clicking a link in the mail to navigate to the Amazon certificate approval website and then clicking <b>I Approve</b>. However, the validation email can be blocked by spam filters. Therefore, if you do not receive the original mail, you can request that the mail be resent within 72 hours of requesting the ACM certificate. If more than 72 hours have elapsed since your original request or since your last attempt to resend validation mail, you must request a new certificate. For more information about setting up your contact email addresses, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/setup-email.html\">Configure Email for your Domain</a>. \n\n        :param self:\n        :param ValidationDomain:  The base validation domain that will act as the suffix of the email addresses that are used to send the emails. This must be the same as the <code>Domain</code> value or a superdomain of the <code>Domain</code> value. For example, if you requested a certificate for <code>site.subdomain.example.com</code> and specify a <b>ValidationDomain</b> of <code>subdomain.example.com</code>, ACM sends email to the domain registrant, technical contact, and administrative contact in WHOIS and the following five addresses: <ul> <li> admin@subdomain.example.com </li> <li> administrator@subdomain.example.com </li> <li> hostmaster@subdomain.example.com </li> <li> postmaster@subdomain.example.com </li> <li> webmaster@subdomain.example.com </li> </ul><br/>Domain:  The fully qualified domain name (FQDN) of the certificate that needs to be validated.<br/>CertificateArn:  String that contains the ARN of the requested certificate. The certificate ARN is generated and returned by the <a>RequestCertificate</a> action as soon as the request is made. By default, using this parameter causes email to be sent to all top-level domains you specified in the certificate request. The ARN must be of the form:   <code>arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> <br/>\n        :return:         \"\"\"\n        pass\n\n    def update_certificate_options(self, Options: CertificateOptions, CertificateArn: str):\n        r\"\"\"Updates a certificate. Currently, you can use this function to specify whether to opt in to or out of recording your certificate in a certificate transparency log. For more information, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/acm-bestpractices.html#best-practices-transparency\"> Opting Out of Certificate Transparency Logging</a>. \n\n        :param self:\n        :param Options:  Use to update the options for your certificate. Currently, you can specify whether to add your certificate to a transparency log. Certificate transparency makes it possible to detect SSL/TLS certificates that have been mistakenly or maliciously issued. Certificates that have not been logged typically produce an error message in a browser. :<br/>CertificateArn:  ARN of the requested certificate to update. This must be of the form:  <code>arn:aws:acm:us-east-1:<i>account</i>:certificate/<i>12345678-1234-1234-1234-123456789012</i> </code> <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>CertificateTransparencyLoggingPreference</i> You can opt out of certificate transparency logging by specifying the <code>DISABLED</code> option. Opt in by specifying <code>ENABLED</code>. <br/>\n        :return:         \"\"\"\n        pass\n\n\n"
    },
    {
      "args": {
        "py/tuple": [
          "acm-pca"
        ]
      },
      "kwargs": {},
      "return_value": "class ACMPCA(BaseClient):\n    r\"\"\"This is the <i>ACM Private CA API Reference</i>. It provides descriptions, syntax, and usage examples for each of the actions and data types involved in creating and managing private certificate authorities (CA) for your organization. The documentation for each action shows the Query API request parameters and the XML response. Alternatively, you can use one of the AWS SDKs to access an API that's tailored to the programming language or platform that you're using. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>. <note> Each ACM Private CA API action has a throttling limit which determines the number of times the action can be called per second. For more information, see <a href=\"https://docs.aws.amazon.com/acm-pca/latest/userguide/PcaLimits.html#PcaLimits-api\">API Rate Limits in ACM Private CA</a> in the ACM Private CA user guide. </note>\"\"\"\n\n    class AuditReportCreatedWaiter(Waiter):\n        def wait(self, **kwargs):\n            r\"\"\"see function `describe_certificate_authority_audit_report` for valid parameters\"\"\"\n            pass\n    class CertificateAuthorityCSRCreatedWaiter(Waiter):\n        def wait(self, **kwargs):\n            r\"\"\"see function `get_certificate_authority_csr` for valid parameters\"\"\"\n            pass\n    class CertificateIssuedWaiter(Waiter):\n        def wait(self, **kwargs):\n            r\"\"\"see function `get_certificate` for valid parameters\"\"\"\n            pass\n\n\n    class ListCertificateAuthoritiesPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `list_certificate_authorities` for valid parameters\"\"\"\n            pass\n    class ListTagsPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `list_tags` for valid parameters\"\"\"\n            pass\n    class ListPermissionsPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `list_permissions` for valid parameters\"\"\"\n            pass\n\n\n    class CreateCertificateAuthorityRequest(Mapping):\n        pass\n    \n    class CreateCertificateAuthorityResponse(Mapping):\n        pass\n    \n    class CertificateAuthorityConfiguration(Mapping):\n        pass\n    \n    class RevocationConfiguration(Mapping):\n        pass\n    \n    class Tag(Mapping):\n        pass\n    \n    class CreateCertificateAuthorityAuditReportRequest(Mapping):\n        pass\n    \n    class CreateCertificateAuthorityAuditReportResponse(Mapping):\n        pass\n    \n    class CreatePermissionRequest(Mapping):\n        pass\n    \n    class ActionType(object):\n        pass\n    \n    class DeleteCertificateAuthorityRequest(Mapping):\n        pass\n    \n    class DeletePermissionRequest(Mapping):\n        pass\n    \n    class DescribeCertificateAuthorityRequest(Mapping):\n        pass\n    \n    class DescribeCertificateAuthorityResponse(Mapping):\n        pass\n    \n    class DescribeCertificateAuthorityAuditReportRequest(Mapping):\n        pass\n    \n    class DescribeCertificateAuthorityAuditReportResponse(Mapping):\n        pass\n    \n    class GetCertificateRequest(Mapping):\n        pass\n    \n    class GetCertificateResponse(Mapping):\n        pass\n    \n    class GetCertificateAuthorityCertificateRequest(Mapping):\n        pass\n    \n    class GetCertificateAuthorityCertificateResponse(Mapping):\n        pass\n    \n    class GetCertificateAuthorityCsrRequest(Mapping):\n        pass\n    \n    class GetCertificateAuthorityCsrResponse(Mapping):\n        pass\n    \n    class ImportCertificateAuthorityCertificateRequest(Mapping):\n        pass\n    \n    class CertificateBodyBlob(object):\n        pass\n    \n    class CertificateChainBlob(object):\n        pass\n    \n    class IssueCertificateRequest(Mapping):\n        pass\n    \n    class IssueCertificateResponse(Mapping):\n        pass\n    \n    class CsrBlob(object):\n        pass\n    \n    class Validity(Mapping):\n        pass\n    \n    class ListCertificateAuthoritiesRequest(Mapping):\n        pass\n    \n    class ListCertificateAuthoritiesResponse(Mapping):\n        pass\n    \n    class ListPermissionsRequest(Mapping):\n        pass\n    \n    class ListPermissionsResponse(Mapping):\n        pass\n    \n    class ListTagsRequest(Mapping):\n        pass\n    \n    class ListTagsResponse(Mapping):\n        pass\n    \n    class RestoreCertificateAuthorityRequest(Mapping):\n        pass\n    \n    class RevokeCertificateRequest(Mapping):\n        pass\n    \n    class TagCertificateAuthorityRequest(Mapping):\n        pass\n    \n    class UntagCertificateAuthorityRequest(Mapping):\n        pass\n    \n    class UpdateCertificateAuthorityRequest(Mapping):\n        pass\n    \n    def create_certificate_authority(self, CertificateAuthorityType: str, CertificateAuthorityConfiguration: CertificateAuthorityConfiguration, RevocationConfiguration: RevocationConfiguration=None, IdempotencyToken: str=None, Tags: List[Tag]=None) -> CreateCertificateAuthorityResponse:\n        r\"\"\"Creates a root or subordinate private certificate authority (CA). You must specify the CA configuration, the certificate revocation list (CRL) configuration, the CA type, and an optional idempotency token to avoid accidental creation of multiple CAs. The CA configuration specifies the name of the algorithm and key size to be used to create the CA private key, the type of signing algorithm that the CA uses, and X.500 subject information. The CRL configuration specifies the CRL expiration period in days (the validity period of the CRL), the Amazon S3 bucket that will contain the CRL, and a CNAME alias for the S3 bucket that is included in certificates issued by the CA. If successful, this action returns the Amazon Resource Name (ARN) of the CA.\n\n        :param self:\n        :param Tags:  Key-value pairs that will be attached to the new private CA. You can associate up to 50 tags with a private CA. For information using tags with  IAM to manage permissions, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html\">Controlling Access Using IAM Tags</a>.<br/>IdempotencyToken:  Alphanumeric string that can be used to distinguish between calls to <b>CreateCertificateAuthority</b>. Idempotency tokens time out after five minutes. Therefore, if you call <b>CreateCertificateAuthority</b> multiple times with the same idempotency token within a five minute period, ACM Private CA recognizes that you are requesting only one certificate. As a result, ACM Private CA issues only one. If you change the idempotency token for each call, however, ACM Private CA recognizes that you are requesting multiple certificates.<br/>CertificateAuthorityType:  The type of the certificate authority.<br/>RevocationConfiguration:  Contains a Boolean value that you can use to enable a certification revocation list (CRL) for the CA, the name of the S3 bucket to which ACM Private CA will write the CRL, and an optional CNAME alias that you can use to hide the name of your bucket in the <b>CRL Distribution Points</b> extension of your CA certificate. For more information, see the <a>CrlConfiguration</a> structure. :<br/>CertificateAuthorityConfiguration:  Name and bit size of the private key algorithm, the name of the signing algorithm, and X.500 certificate subject information.:<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Subject</i> Structure that contains X.500 distinguished name information for your private CA.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>Subject</b>: Structure that contains X.500 distinguished name information for your private CA.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>SigningAlgorithm</i> Name of the algorithm your private CA uses to sign certificate requests.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>KeyAlgorithm</i> Type of the public key algorithm and size, in bits, of the key pair that your CA creates when it issues a certificate. When you create a subordinate CA, you must use a key algorithm supported by the parent CA.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>GenerationQualifier</i> Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>Pseudonym</i> Typically a shortened version of a longer <b>GivenName</b>. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>Initials</i> Concatenation that typically contains the first letter of the <b>GivenName</b>, the first letter of the middle name if one exists, and the first letter of the <b>SurName</b>.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>GivenName</i> First name.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>Surname</i> Family name. In the US and the UK, for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>Title</i> A title such as Mr. or Ms., which is pre-pended to the name to refer formally to the certificate subject.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>Locality</i> The locality (such as a city or town) in which the certificate subject is located.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>SerialNumber</i> The certificate serial number.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>CommonName</i> Fully qualified domain name (FQDN) associated with the certificate subject.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>State</i> State in which the subject of the certificate is located.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>DistinguishedNameQualifier</i> Disambiguating information for the certificate subject.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>OrganizationalUnit</i> A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>Organization</i> Legal name of the organization with which the certificate subject is affiliated. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>Country</i> Two-digit code that specifies the country in which the certificate subject located.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>CrlConfiguration</i> Configuration of the certificate revocation list (CRL), if any, maintained by your private CA.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>CrlConfiguration</b>: Configuration of the certificate revocation list (CRL), if any, maintained by your private CA.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>S3BucketName</i> Name of the S3 bucket that contains the CRL. If you do not provide a value for the <b>CustomCname</b> argument, the name of your S3 bucket is placed into the <b>CRL Distribution Points</b> extension of the issued certificate. You can change the name of your bucket by calling the <a>UpdateCertificateAuthority</a> action. You must specify a bucket policy that allows ACM Private CA to write the CRL to your bucket.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>CustomCname</i> Name inserted into the certificate <b>CRL Distribution Points</b> extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>ExpirationInDays</i> Number of days until a certificate expires.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>Enabled</i> Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. You can use this value to enable certificate revocation for a new CA when you call the <a>CreateCertificateAuthority</a> action or for an existing CA when you call the <a>UpdateCertificateAuthority</a> action. <br/>\n        :return: CertificateAuthorityArn:  If successful, the Amazon Resource Name (ARN) of the certificate authority (CA). This is of the form:   <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>. <br/>        \"\"\"\n        pass\n\n    def create_certificate_authority_audit_report(self, AuditReportResponseFormat: str, S3BucketName: str, CertificateAuthorityArn: str) -> CreateCertificateAuthorityAuditReportResponse:\n        r\"\"\"Creates an audit report that lists every time that your CA private key is used. The report is saved in the Amazon S3 bucket that you specify on input. The <a>IssueCertificate</a> and <a>RevokeCertificate</a> actions use the private key.\n\n        :param self:\n        :param AuditReportResponseFormat:  The format in which to create the report. This can be either <b>JSON</b> or <b>CSV</b>.<br/>S3BucketName:  The name of the S3 bucket that will contain the audit report.<br/>CertificateAuthorityArn:  The Amazon Resource Name (ARN) of the CA to be audited. This is of the form:  <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>.<br/>\n        :return: S3Key:  The <b>key</b> that uniquely identifies the report file in your S3 bucket.<br/>AuditReportId:  An alphanumeric string that contains a report identifier.<br/>        \"\"\"\n        pass\n\n    def create_permission(self, Actions: List[ActionType], Principal: str, CertificateAuthorityArn: str, SourceAccount: str=None):\n        r\"\"\"Assigns permissions from a private CA to a designated AWS service. Services are specified by their service principals and can be given permission to create and retrieve certificates on a private CA. Services can also be given permission to list the active permissions that the private CA has granted. For ACM to automatically renew your private CA's certificates, you must assign all possible permissions from the CA to the ACM service principal. At this time, you can only assign permissions to ACM (<code>acm.amazonaws.com</code>). Permissions can be revoked with the <a>DeletePermission</a> action and listed with the <a>ListPermissions</a> action.\n\n        :param self:\n        :param Actions:  The actions that the specified AWS service principal can use. These include <code>IssueCertificate</code>, <code>GetCertificate</code>, and <code>ListPermissions</code>.<br/>SourceAccount:  The ID of the calling account.<br/>Principal:  The AWS service or identity that receives the permission. At this time, the only valid principal is <code>acm.amazonaws.com</code>.<br/>CertificateAuthorityArn:  The Amazon Resource Name (ARN) of the CA that grants the permissions. You can find the ARN by calling the <a>ListCertificateAuthorities</a> action. This must have the following form:   <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>. <br/>\n        :return:         \"\"\"\n        pass\n\n    def delete_certificate_authority(self, CertificateAuthorityArn: str, PermanentDeletionTimeInDays: int=None):\n        r\"\"\"Deletes a private certificate authority (CA). You must provide the Amazon Resource Name (ARN) of the private CA that you want to delete. You can find the ARN by calling the <a>ListCertificateAuthorities</a> action.  <note> Deleting a CA will invalidate other CAs and certificates below it in your CA hierarchy. </note> Before you can delete a CA that you have created and activated, you must disable it. To do this, call the <a>UpdateCertificateAuthority</a> action and set the <b>CertificateAuthorityStatus</b> parameter to <code>DISABLED</code>.  Additionally, you can delete a CA if you are waiting for it to be created (that is, the status of the CA is <code>CREATING</code>). You can also delete it if the CA has been created but you haven't yet imported the signed certificate into ACM Private CA (that is, the status of the CA is <code>PENDING_CERTIFICATE</code>).  When you successfully call <a>DeleteCertificateAuthority</a>, the CA's status changes to <code>DELETED</code>. However, the CA won't be permanently deleted until the restoration period has passed. By default, if you do not set the <code>PermanentDeletionTimeInDays</code> parameter, the CA remains restorable for 30 days. You can set the parameter from 7 to 30 days. The <a>DescribeCertificateAuthority</a> action returns the time remaining in the restoration window of a private CA in the <code>DELETED</code> state. To restore an eligible CA, call the <a>RestoreCertificateAuthority</a> action.\n\n        :param self:\n        :param PermanentDeletionTimeInDays:  The number of days to make a CA restorable after it has been deleted. This can be anywhere from 7 to 30 days, with 30 being the default.<br/>CertificateAuthorityArn:  The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must have the following form:   <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>. <br/>\n        :return:         \"\"\"\n        pass\n\n    def delete_permission(self, Principal: str, CertificateAuthorityArn: str, SourceAccount: str=None):\n        r\"\"\"Revokes permissions that a private CA assigned to a designated AWS service. Permissions can be created with the <a>CreatePermission</a> action and listed with the <a>ListPermissions</a> action. \n\n        :param self:\n        :param SourceAccount:  The AWS account that calls this action.<br/>Principal:  The AWS service or identity that will have its CA permissions revoked. At this time, the only valid service principal is <code>acm.amazonaws.com</code> <br/>CertificateAuthorityArn:  The Amazon Resource Number (ARN) of the private CA that issued the permissions. You can find the CA's ARN by calling the <a>ListCertificateAuthorities</a> action. This must have the following form:   <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>. <br/>\n        :return:         \"\"\"\n        pass\n\n    def describe_certificate_authority(self, CertificateAuthorityArn: str) -> DescribeCertificateAuthorityResponse:\n        r\"\"\"Lists information about your private certificate authority (CA). You specify the private CA on input by its ARN (Amazon Resource Name). The output contains the status of your CA. This can be any of the following:  <ul> <li>  <code>CREATING</code> - ACM Private CA is creating your private certificate authority. </li> <li>  <code>PENDING_CERTIFICATE</code> - The certificate is pending. You must use your ACM Private CA-hosted or on-premises root or subordinate CA to sign your private CA CSR and then import it into PCA.  </li> <li>  <code>ACTIVE</code> - Your private CA is active. </li> <li>  <code>DISABLED</code> - Your private CA has been disabled. </li> <li>  <code>EXPIRED</code> - Your private CA certificate has expired. </li> <li>  <code>FAILED</code> - Your private CA has failed. Your CA can fail because of problems such a network outage or backend AWS failure or other errors. A failed CA can never return to the pending state. You must create a new CA.  </li> <li>  <code>DELETED</code> - Your private CA is within the restoration period, after which it is permanently deleted. The length of time remaining in the CA's restoration period is also included in this action's output. </li> </ul>\n\n        :param self:\n        :param CertificateAuthorityArn:  The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must be of the form:   <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>. <br/>\n        :return: CertificateAuthority:  A <a>CertificateAuthority</a> structure that contains information about your private CA.:<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>RestorableUntil</i> The period during which a deleted CA can be restored. For more information, see the <code>PermanentDeletionTimeInDays</code> parameter of the <a>DeleteCertificateAuthorityRequest</a> action. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>RevocationConfiguration</i> Information about the certificate revocation list (CRL) created and maintained by your private CA. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>RevocationConfiguration</b>: Information about the certificate revocation list (CRL) created and maintained by your private CA. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>CertificateAuthorityConfiguration</i> Your private CA configuration.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>CertificateAuthorityConfiguration</b>: Your private CA configuration.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>FailureReason</i> Reason the request to create your private CA failed.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>NotAfter</i> Date and time after which your private CA certificate is not valid.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>NotBefore</i> Date and time before which your private CA certificate is not valid.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Status</i> Status of your private CA.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Serial</i> Serial number of your private CA.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Type</i> Type of your private CA.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>LastStateChangeAt</i> Date and time at which your private CA was last updated.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>CreatedAt</i> Date and time at which your private CA was created.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Arn</i> Amazon Resource Name (ARN) for your private certificate authority (CA). The format is <code> <i>12345678-1234-1234-1234-123456789012</i> </code>.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>SigningAlgorithm</i> Name of the algorithm your private CA uses to sign certificate requests.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>KeyAlgorithm</i> Type of the public key algorithm and size, in bits, of the key pair that your CA creates when it issues a certificate. When you create a subordinate CA, you must use a key algorithm supported by the parent CA.<br/>Structure that contains X.500 distinguished name information for your private CA.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>Subject</b>: Structure that contains X.500 distinguished name information for your private CA.Configuration of the certificate revocation list (CRL), if any, maintained by your private CA.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>CrlConfiguration</b>: Configuration of the certificate revocation list (CRL), if any, maintained by your private CA.        \"\"\"\n        pass\n\n    def describe_certificate_authority_audit_report(self, AuditReportId: str, CertificateAuthorityArn: str) -> DescribeCertificateAuthorityAuditReportResponse:\n        r\"\"\"Lists information about a specific audit report created by calling the <a>CreateCertificateAuthorityAuditReport</a> action. Audit information is created every time the certificate authority (CA) private key is used. The private key is used when you call the <a>IssueCertificate</a> action or the <a>RevokeCertificate</a> action. \n\n        :param self:\n        :param AuditReportId:  The report ID returned by calling the <a>CreateCertificateAuthorityAuditReport</a> action.<br/>CertificateAuthorityArn:  The Amazon Resource Name (ARN) of the private CA. This must be of the form:  <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>. <br/>\n        :return: CreatedAt:  The date and time at which the report was created.<br/>S3Key:  S3 <b>key</b> that uniquely identifies the report file in your S3 bucket.<br/>S3BucketName:  Name of the S3 bucket that contains the report.<br/>AuditReportStatus:  Specifies whether report creation is in progress, has succeeded, or has failed.<br/>        \"\"\"\n        pass\n\n    def get_certificate(self, CertificateArn: str, CertificateAuthorityArn: str) -> GetCertificateResponse:\n        r\"\"\"Retrieves a certificate from your private CA. The ARN of the certificate is returned when you call the <a>IssueCertificate</a> action. You must specify both the ARN of your private CA and the ARN of the issued certificate when calling the <b>GetCertificate</b> action. You can retrieve the certificate if it is in the <b>ISSUED</b> state. You can call the <a>CreateCertificateAuthorityAuditReport</a> action to create a report that contains information about all of the certificates issued and revoked by your private CA. \n\n        :param self:\n        :param CertificateArn:  The ARN of the issued certificate. The ARN contains the certificate serial number and must be in the following form:   <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>/certificate/<i>286535153982981100925020015808220737245</i> </code> <br/>CertificateAuthorityArn:  The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must be of the form:   <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>. <br/>\n        :return: CertificateChain:  The base64 PEM-encoded certificate chain that chains up to the on-premises root CA certificate that you used to sign your private CA certificate. <br/>Certificate:  The base64 PEM-encoded certificate specified by the <code>CertificateArn</code> parameter.<br/>        \"\"\"\n        pass\n\n    def get_certificate_authority_certificate(self, CertificateAuthorityArn: str) -> GetCertificateAuthorityCertificateResponse:\n        r\"\"\"Retrieves the certificate and certificate chain for your private certificate authority (CA). Both the certificate and the chain are base64 PEM-encoded. The chain does not include the CA certificate. Each certificate in the chain signs the one before it. \n\n        :param self:\n        :param CertificateAuthorityArn:  The Amazon Resource Name (ARN) of your private CA. This is of the form:  <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code>. <br/>\n        :return: CertificateChain:  Base64-encoded certificate chain that includes any intermediate certificates and chains up to root on-premises certificate that you used to sign your private CA certificate. The chain does not include your private CA certificate. If this is a root CA, the value will be null.<br/>Certificate:  Base64-encoded certificate authority (CA) certificate.<br/>        \"\"\"\n        pass\n\n    def get_certificate_authority_csr(self, CertificateAuthorityArn: str) -> GetCertificateAuthorityCsrResponse:\n        r\"\"\"Retrieves the certificate signing request (CSR) for your private certificate authority (CA). The CSR is created when you call the <a>CreateCertificateAuthority</a> action. Sign the CSR with your ACM Private CA-hosted or on-premises root or subordinate CA. Then import the signed certificate back into ACM Private CA by calling the <a>ImportCertificateAuthorityCertificate</a> action. The CSR is returned as a base64 PEM-encoded string. \n\n        :param self:\n        :param CertificateAuthorityArn:  The Amazon Resource Name (ARN) that was returned when you called the <a>CreateCertificateAuthority</a> action. This must be of the form:   <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> <br/>\n        :return: Csr:  The base64 PEM-encoded certificate signing request (CSR) for your private CA certificate.<br/>        \"\"\"\n        pass\n\n    def import_certificate_authority_certificate(self, Certificate: CertificateBodyBlob, CertificateAuthorityArn: str, CertificateChain: CertificateChainBlob=None):\n        r\"\"\"Imports a signed private CA certificate into ACM Private CA. This action is used when you are using a chain of trust whose root is located outside ACM Private CA. Before you can call this action, the following preparations must in place: <ol> <li> In ACM Private CA, call the <a>CreateCertificateAuthority</a> action to create the private CA that that you plan to back with the imported certificate. </li> <li> Call the <a>GetCertificateAuthorityCsr</a> action to generate a certificate signing request (CSR). </li> <li> Sign the CSR using a root or intermediate CA hosted either by an on-premises PKI hierarchy or a commercial CA.. </li> <li> Create a certificate chain and copy the signed certificate and the certificate chain to your working directory. </li> </ol> The following requirements apply when you import a CA certificate. <ul> <li> You cannot import a non-self-signed certificate for use as a root CA. </li> <li> You cannot import a self-signed certificate for use as a subordinate CA. </li> <li> Your certificate chain must not include the private CA certificate that you are importing. </li> <li> Your ACM Private CA-hosted or on-premises CA certificate must be the last certificate in your chain. The subordinate certificate, if any, that your root CA signed must be next to last. The subordinate certificate signed by the preceding subordinate CA must come next, and so on until your chain is built.  </li> <li> The chain must be PEM-encoded. </li> </ul>\n\n        :param self:\n        :param CertificateChain:  A PEM-encoded file that contains all of your certificates, other than the certificate you're importing, chaining up to your root CA. Your ACM Private CA-hosted or on-premises root certificate is the last in the chain, and each certificate in the chain signs the one preceding.  This parameter must be supplied when you import a subordinate CA. When you import a root CA, there is no chain.<br/>Certificate:  The PEM-encoded certificate for a private CA. This may be a self-signed certificate in the case of a root CA, or it may be signed by another CA that you control.<br/>CertificateAuthorityArn:  The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must be of the form:   <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> <br/>\n        :return:         \"\"\"\n        pass\n\n    def issue_certificate(self, Validity: Validity, SigningAlgorithm: str, Csr: CsrBlob, CertificateAuthorityArn: str, TemplateArn: str=None, IdempotencyToken: str=None) -> IssueCertificateResponse:\n        r\"\"\"Uses your private certificate authority (CA) to issue a client certificate. This action returns the Amazon Resource Name (ARN) of the certificate. You can retrieve the certificate by calling the <a>GetCertificate</a> action and specifying the ARN.  <note> You cannot use the ACM <b>ListCertificateAuthorities</b> action to retrieve the ARNs of the certificates that you issue by using ACM Private CA. </note>\n\n        :param self:\n        :param IdempotencyToken:  Custom string that can be used to distinguish between calls to the <b>IssueCertificate</b> action. Idempotency tokens time out after one hour. Therefore, if you call <b>IssueCertificate</b> multiple times with the same idempotency token within 5 minutes, ACM Private CA recognizes that you are requesting only one certificate and will issue only one. If you change the idempotency token for each call, PCA recognizes that you are requesting multiple certificates.<br/>Validity:  The type of the validity period.:<br/>TemplateArn:  Specifies a custom configuration template to use when issuing a certificate. If this parameter is not provided, ACM Private CA defaults to the <code>EndEntityCertificate/V1</code> template. The following service-owned <code>TemplateArn</code> values are supported by ACM Private CA:  <ul> <li> arn:aws:acm-pca:::template/EndEntityCertificate/V1 </li> <li> arn:aws:acm-pca:::template/SubordinateCACertificate_PathLen0/V1 </li> <li> arn:aws:acm-pca:::template/SubordinateCACertificate_PathLen1/V1 </li> <li> arn:aws:acm-pca:::template/SubordinateCACertificate_PathLen2/V1 </li> <li> arn:aws:acm-pca:::template/SubordinateCACertificate_PathLen3/V1 </li> <li> arn:aws:acm-pca:::template/RootCACertificate/V1 </li> </ul> For more information, see <a href=\"https://docs.aws.amazon.com/acm-pca/latest/userguide/UsingTemplates.html\">Using Templates</a>.<br/>SigningAlgorithm:  The name of the algorithm that will be used to sign the certificate to be issued.<br/>Csr:  The certificate signing request (CSR) for the certificate you want to issue. You can use the following OpenSSL command to create the CSR and a 2048 bit RSA private key.   <code>openssl req -new -newkey rsa:2048 -days 365 -keyout private/test_cert_priv_key.pem -out csr/test_cert_.csr</code>  If you have a configuration file, you can use the following OpenSSL command. The <code>usr_cert</code> block in the configuration file contains your X509 version 3 extensions.   <code>openssl req -new -config openssl_rsa.cnf -extensions usr_cert -newkey rsa:2048 -days -365 -keyout private/test_cert_priv_key.pem -out csr/test_cert_.csr</code> <br/>CertificateAuthorityArn:  The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must be of the form:  <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Type</i> Specifies whether the <code>Value</code> parameter represents days, months, or years.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Value</i> Time period.<br/>\n        :return: CertificateArn:  The Amazon Resource Name (ARN) of the issued certificate and the certificate serial number. This is of the form:  <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>/certificate/<i>286535153982981100925020015808220737245</i> </code> <br/>        \"\"\"\n        pass\n\n    def list_certificate_authorities(self, NextToken: str=None, MaxResults: int=None) -> ListCertificateAuthoritiesResponse:\n        r\"\"\"Lists the private certificate authorities that you created by using the <a>CreateCertificateAuthority</a> action.\n\n        :param self:\n        :param MaxResults:  Use this parameter when paginating results to specify the maximum number of items to return in the response on each page. If additional items exist beyond the number you specify, the <code>NextToken</code> element is sent in the response. Use this <code>NextToken</code> value in a subsequent request to retrieve additional items.<br/>NextToken:  Use this parameter when paginating results in a subsequent request after you receive a response with truncated results. Set it to the value of the <code>NextToken</code> parameter from the response you just received.<br/>\n        :return: NextToken:  When the list is truncated, this value is present and should be used for the <code>NextToken</code> parameter in a subsequent pagination request.<br/>CertificateAuthorities:  Summary information about each certificate authority you have created.<br/>        \"\"\"\n        pass\n\n    def list_permissions(self, CertificateAuthorityArn: str, NextToken: str=None, MaxResults: int=None) -> ListPermissionsResponse:\n        r\"\"\"Lists all the permissions, if any, that have been assigned by a private CA. Permissions can be granted with the <a>CreatePermission</a> action and revoked with the <a>DeletePermission</a> action.\n\n        :param self:\n        :param MaxResults:  When paginating results, use this parameter to specify the maximum number of items to return in the response. If additional items exist beyond the number you specify, the <b>NextToken</b> element is sent in the response. Use this <b>NextToken</b> value in a subsequent request to retrieve additional items.<br/>NextToken:  When paginating results, use this parameter in a subsequent request after you receive a response with truncated results. Set it to the value of <b>NextToken</b> from the response you just received.<br/>CertificateAuthorityArn:  The Amazon Resource Number (ARN) of the private CA to inspect. You can find the ARN by calling the <a>ListCertificateAuthorities</a> action. This must be of the form: <code>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012</code> You can get a private CA's ARN by running the <a>ListCertificateAuthorities</a> action.<br/>\n        :return: NextToken:  When the list is truncated, this value is present and should be used for the <b>NextToken</b> parameter in a subsequent pagination request. <br/>Permissions:  Summary information about each permission assigned by the specified private CA, including the action enabled, the policy provided, and the time of creation.<br/>        \"\"\"\n        pass\n\n    def list_tags(self, CertificateAuthorityArn: str, NextToken: str=None, MaxResults: int=None) -> ListTagsResponse:\n        r\"\"\"Lists the tags, if any, that are associated with your private CA. Tags are labels that you can use to identify and organize your CAs. Each tag consists of a key and an optional value. Call the <a>TagCertificateAuthority</a> action to add one or more tags to your CA. Call the <a>UntagCertificateAuthority</a> action to remove tags. \n\n        :param self:\n        :param MaxResults:  Use this parameter when paginating results to specify the maximum number of items to return in the response. If additional items exist beyond the number you specify, the <b>NextToken</b> element is sent in the response. Use this <b>NextToken</b> value in a subsequent request to retrieve additional items.<br/>NextToken:  Use this parameter when paginating results in a subsequent request after you receive a response with truncated results. Set it to the value of <b>NextToken</b> from the response you just received.<br/>CertificateAuthorityArn:  The Amazon Resource Name (ARN) that was returned when you called the <a>CreateCertificateAuthority</a> action. This must be of the form:   <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> <br/>\n        :return: NextToken:  When the list is truncated, this value is present and should be used for the <b>NextToken</b> parameter in a subsequent pagination request. <br/>Tags:  The tags associated with your private CA.<br/>        \"\"\"\n        pass\n\n    def restore_certificate_authority(self, CertificateAuthorityArn: str):\n        r\"\"\"Restores a certificate authority (CA) that is in the <code>DELETED</code> state. You can restore a CA during the period that you defined in the <b>PermanentDeletionTimeInDays</b> parameter of the <a>DeleteCertificateAuthority</a> action. Currently, you can specify 7 to 30 days. If you did not specify a <b>PermanentDeletionTimeInDays</b> value, by default you can restore the CA at any time in a 30 day period. You can check the time remaining in the restoration period of a private CA in the <code>DELETED</code> state by calling the <a>DescribeCertificateAuthority</a> or <a>ListCertificateAuthorities</a> actions. The status of a restored CA is set to its pre-deletion status when the <b>RestoreCertificateAuthority</b> action returns. To change its status to <code>ACTIVE</code>, call the <a>UpdateCertificateAuthority</a> action. If the private CA was in the <code>PENDING_CERTIFICATE</code> state at deletion, you must use the <a>ImportCertificateAuthorityCertificate</a> action to import a certificate authority into the private CA before it can be activated. You cannot restore a CA after the restoration period has ended.\n\n        :param self:\n        :param CertificateAuthorityArn:  The Amazon Resource Name (ARN) that was returned when you called the <a>CreateCertificateAuthority</a> action. This must be of the form:   <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> <br/>\n        :return:         \"\"\"\n        pass\n\n    def revoke_certificate(self, RevocationReason: str, CertificateSerial: str, CertificateAuthorityArn: str):\n        r\"\"\"Revokes a certificate that was issued inside ACM Private CA. If you enable a certificate revocation list (CRL) when you create or update your private CA, information about the revoked certificates will be included in the CRL. ACM Private CA writes the CRL to an S3 bucket that you specify. For more information about revocation, see the <a>CrlConfiguration</a> structure. ACM Private CA also writes revocation information to the audit report. For more information, see <a>CreateCertificateAuthorityAuditReport</a>.  <note> You cannot revoke a root CA self-signed certificate. </note>\n\n        :param self:\n        :param RevocationReason:  Specifies why you revoked the certificate.<br/>CertificateSerial:  Serial number of the certificate to be revoked. This must be in hexadecimal format. You can retrieve the serial number by calling <a>GetCertificate</a> with the Amazon Resource Name (ARN) of the certificate you want and the ARN of your private CA. The <b>GetCertificate</b> action retrieves the certificate in the PEM format. You can use the following OpenSSL command to list the certificate in text format and copy the hexadecimal serial number.   <code>openssl x509 -in <i>file_path</i> -text -noout</code>  You can also copy the serial number from the console or use the <a href=\"https://docs.aws.amazon.com/acm/latest/APIReference/API_DescribeCertificate.html\">DescribeCertificate</a> action in the <i>AWS Certificate Manager API Reference</i>. <br/>CertificateAuthorityArn:  Amazon Resource Name (ARN) of the private CA that issued the certificate to be revoked. This must be of the form:  <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> <br/>\n        :return:         \"\"\"\n        pass\n\n    def tag_certificate_authority(self, Tags: List[Tag], CertificateAuthorityArn: str):\n        r\"\"\"Adds one or more tags to your private CA. Tags are labels that you can use to identify and organize your AWS resources. Each tag consists of a key and an optional value. You specify the private CA on input by its Amazon Resource Name (ARN). You specify the tag by using a key-value pair. You can apply a tag to just one private CA if you want to identify a specific characteristic of that CA, or you can apply the same tag to multiple private CAs if you want to filter for a common relationship among those CAs. To remove one or more tags, use the <a>UntagCertificateAuthority</a> action. Call the <a>ListTags</a> action to see what tags are associated with your CA. \n\n        :param self:\n        :param Tags:  List of tags to be associated with the CA.<br/>CertificateAuthorityArn:  The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must be of the form:   <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> <br/>\n        :return:         \"\"\"\n        pass\n\n    def untag_certificate_authority(self, Tags: List[Tag], CertificateAuthorityArn: str):\n        r\"\"\"Remove one or more tags from your private CA. A tag consists of a key-value pair. If you do not specify the value portion of the tag when calling this action, the tag will be removed regardless of value. If you specify a value, the tag is removed only if it is associated with the specified value. To add tags to a private CA, use the <a>TagCertificateAuthority</a>. Call the <a>ListTags</a> action to see what tags are associated with your CA. \n\n        :param self:\n        :param Tags:  List of tags to be removed from the CA.<br/>CertificateAuthorityArn:  The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>. This must be of the form:   <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> <br/>\n        :return:         \"\"\"\n        pass\n\n    def update_certificate_authority(self, CertificateAuthorityArn: str, RevocationConfiguration: RevocationConfiguration=None, Status: str=None):\n        r\"\"\"Updates the status or configuration of a private certificate authority (CA). Your private CA must be in the <code>ACTIVE</code> or <code>DISABLED</code> state before you can update it. You can disable a private CA that is in the <code>ACTIVE</code> state or make a CA that is in the <code>DISABLED</code> state active again.\n\n        :param self:\n        :param Status:  Status of your private CA.<br/>RevocationConfiguration:  Revocation information for your private CA.:<br/>CertificateAuthorityArn:  Amazon Resource Name (ARN) of the private CA that issued the certificate to be revoked. This must be of the form:  <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>CrlConfiguration</i> Configuration of the certificate revocation list (CRL), if any, maintained by your private CA.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>CrlConfiguration</b>: Configuration of the certificate revocation list (CRL), if any, maintained by your private CA.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>S3BucketName</i> Name of the S3 bucket that contains the CRL. If you do not provide a value for the <b>CustomCname</b> argument, the name of your S3 bucket is placed into the <b>CRL Distribution Points</b> extension of the issued certificate. You can change the name of your bucket by calling the <a>UpdateCertificateAuthority</a> action. You must specify a bucket policy that allows ACM Private CA to write the CRL to your bucket.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>CustomCname</i> Name inserted into the certificate <b>CRL Distribution Points</b> extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>ExpirationInDays</i> Number of days until a certificate expires.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>Enabled</i> Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. You can use this value to enable certificate revocation for a new CA when you call the <a>CreateCertificateAuthority</a> action or for an existing CA when you call the <a>UpdateCertificateAuthority</a> action. <br/>\n        :return:         \"\"\"\n        pass\n\n\n"
    },
    {
      "args": {
        "py/tuple": [
          "alexaforbusiness"
        ]
      },
      "kwargs": {},
      "return_value": "class AlexaForBusiness(BaseClient):\n    r\"\"\"Alexa for Business helps you use Alexa in your organization. Alexa for Business provides you with the tools to manage Alexa devices, enroll your users, and assign skills, at scale. You can build your own context-aware voice skills using the Alexa Skills Kit and the Alexa for Business API operations. You can also make these available as private skills for your organization. Alexa for Business makes it efficient to voice-enable your products and services, thus providing context-aware voice experiences for your customers. Device makers building with the Alexa Voice Service (AVS) can create fully integrated solutions, register their products with Alexa for Business, and manage them as shared devices in their organization. \"\"\"\n\n\n    class ListSkillsPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `list_skills` for valid parameters\"\"\"\n            pass\n    class SearchUsersPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `search_users` for valid parameters\"\"\"\n            pass\n    class ListTagsPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `list_tags` for valid parameters\"\"\"\n            pass\n    class SearchProfilesPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `search_profiles` for valid parameters\"\"\"\n            pass\n    class SearchSkillGroupsPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `search_skill_groups` for valid parameters\"\"\"\n            pass\n    class SearchDevicesPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `search_devices` for valid parameters\"\"\"\n            pass\n    class SearchRoomsPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `search_rooms` for valid parameters\"\"\"\n            pass\n    class ListBusinessReportSchedulesPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `list_business_report_schedules` for valid parameters\"\"\"\n            pass\n    class ListConferenceProvidersPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `list_conference_providers` for valid parameters\"\"\"\n            pass\n    class ListDeviceEventsPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `list_device_events` for valid parameters\"\"\"\n            pass\n    class ListSkillsStoreCategoriesPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `list_skills_store_categories` for valid parameters\"\"\"\n            pass\n    class ListSkillsStoreSkillsByCategoryPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `list_skills_store_skills_by_category` for valid parameters\"\"\"\n            pass\n    class ListSmartHomeAppliancesPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `list_smart_home_appliances` for valid parameters\"\"\"\n            pass\n\n\n    class ApproveSkillRequest(Mapping):\n        pass\n    \n    class ApproveSkillResponse(Mapping):\n        pass\n    \n    class AssociateContactWithAddressBookRequest(Mapping):\n        pass\n    \n    class AssociateContactWithAddressBookResponse(Mapping):\n        pass\n    \n    class AssociateDeviceWithNetworkProfileRequest(Mapping):\n        pass\n    \n    class AssociateDeviceWithNetworkProfileResponse(Mapping):\n        pass\n    \n    class AssociateDeviceWithRoomRequest(Mapping):\n        pass\n    \n    class AssociateDeviceWithRoomResponse(Mapping):\n        pass\n    \n    class AssociateSkillGroupWithRoomRequest(Mapping):\n        pass\n    \n    class AssociateSkillGroupWithRoomResponse(Mapping):\n        pass\n    \n    class AssociateSkillWithSkillGroupRequest(Mapping):\n        pass\n    \n    class AssociateSkillWithSkillGroupResponse(Mapping):\n        pass\n    \n    class AssociateSkillWithUsersRequest(Mapping):\n        pass\n    \n    class AssociateSkillWithUsersResponse(Mapping):\n        pass\n    \n    class CreateAddressBookRequest(Mapping):\n        pass\n    \n    class CreateAddressBookResponse(Mapping):\n        pass\n    \n    class CreateBusinessReportScheduleRequest(Mapping):\n        pass\n    \n    class CreateBusinessReportScheduleResponse(Mapping):\n        pass\n    \n    class BusinessReportContentRange(Mapping):\n        pass\n    \n    class BusinessReportRecurrence(Mapping):\n        pass\n    \n    class CreateConferenceProviderRequest(Mapping):\n        pass\n    \n    class CreateConferenceProviderResponse(Mapping):\n        pass\n    \n    class IPDialIn(Mapping):\n        pass\n    \n    class PSTNDialIn(Mapping):\n        pass\n    \n    class MeetingSetting(Mapping):\n        pass\n    \n    class CreateContactRequest(Mapping):\n        pass\n    \n    class CreateContactResponse(Mapping):\n        pass\n    \n    class PhoneNumber(Mapping):\n        pass\n    \n    class SipAddress(Mapping):\n        pass\n    \n    class CreateGatewayGroupRequest(Mapping):\n        pass\n    \n    class CreateGatewayGroupResponse(Mapping):\n        pass\n    \n    class CreateNetworkProfileRequest(Mapping):\n        pass\n    \n    class CreateNetworkProfileResponse(Mapping):\n        pass\n    \n    class TrustAnchor(object):\n        pass\n    \n    class CreateProfileRequest(Mapping):\n        pass\n    \n    class CreateProfileResponse(Mapping):\n        pass\n    \n    class Boolean(object):\n        pass\n    \n    class CreateMeetingRoomConfiguration(Mapping):\n        pass\n    \n    class CreateRoomRequest(Mapping):\n        pass\n    \n    class CreateRoomResponse(Mapping):\n        pass\n    \n    class Tag(Mapping):\n        pass\n    \n    class CreateSkillGroupRequest(Mapping):\n        pass\n    \n    class CreateSkillGroupResponse(Mapping):\n        pass\n    \n    class CreateUserRequest(Mapping):\n        pass\n    \n    class CreateUserResponse(Mapping):\n        pass\n    \n    class DeleteAddressBookRequest(Mapping):\n        pass\n    \n    class DeleteAddressBookResponse(Mapping):\n        pass\n    \n    class DeleteBusinessReportScheduleRequest(Mapping):\n        pass\n    \n    class DeleteBusinessReportScheduleResponse(Mapping):\n        pass\n    \n    class DeleteConferenceProviderRequest(Mapping):\n        pass\n    \n    class DeleteConferenceProviderResponse(Mapping):\n        pass\n    \n    class DeleteContactRequest(Mapping):\n        pass\n    \n    class DeleteContactResponse(Mapping):\n        pass\n    \n    class DeleteDeviceRequest(Mapping):\n        pass\n    \n    class DeleteDeviceResponse(Mapping):\n        pass\n    \n    class DeleteDeviceUsageDataRequest(Mapping):\n        pass\n    \n    class DeleteDeviceUsageDataResponse(Mapping):\n        pass\n    \n    class DeleteGatewayGroupRequest(Mapping):\n        pass\n    \n    class DeleteGatewayGroupResponse(Mapping):\n        pass\n    \n    class DeleteNetworkProfileRequest(Mapping):\n        pass\n    \n    class DeleteNetworkProfileResponse(Mapping):\n        pass\n    \n    class DeleteProfileRequest(Mapping):\n        pass\n    \n    class DeleteProfileResponse(Mapping):\n        pass\n    \n    class DeleteRoomRequest(Mapping):\n        pass\n    \n    class DeleteRoomResponse(Mapping):\n        pass\n    \n    class DeleteRoomSkillParameterRequest(Mapping):\n        pass\n    \n    class DeleteRoomSkillParameterResponse(Mapping):\n        pass\n    \n    class DeleteSkillAuthorizationRequest(Mapping):\n        pass\n    \n    class DeleteSkillAuthorizationResponse(Mapping):\n        pass\n    \n    class DeleteSkillGroupRequest(Mapping):\n        pass\n    \n    class DeleteSkillGroupResponse(Mapping):\n        pass\n    \n    class DeleteUserRequest(Mapping):\n        pass\n    \n    class DeleteUserResponse(Mapping):\n        pass\n    \n    class DisassociateContactFromAddressBookRequest(Mapping):\n        pass\n    \n    class DisassociateContactFromAddressBookResponse(Mapping):\n        pass\n    \n    class DisassociateDeviceFromRoomRequest(Mapping):\n        pass\n    \n    class DisassociateDeviceFromRoomResponse(Mapping):\n        pass\n    \n    class DisassociateSkillFromSkillGroupRequest(Mapping):\n        pass\n    \n    class DisassociateSkillFromSkillGroupResponse(Mapping):\n        pass\n    \n    class DisassociateSkillFromUsersRequest(Mapping):\n        pass\n    \n    class DisassociateSkillFromUsersResponse(Mapping):\n        pass\n    \n    class DisassociateSkillGroupFromRoomRequest(Mapping):\n        pass\n    \n    class DisassociateSkillGroupFromRoomResponse(Mapping):\n        pass\n    \n    class ForgetSmartHomeAppliancesRequest(Mapping):\n        pass\n    \n    class ForgetSmartHomeAppliancesResponse(Mapping):\n        pass\n    \n    class GetAddressBookRequest(Mapping):\n        pass\n    \n    class GetAddressBookResponse(Mapping):\n        pass\n    \n    class GetConferencePreferenceRequest(Mapping):\n        pass\n    \n    class GetConferencePreferenceResponse(Mapping):\n        pass\n    \n    class GetConferenceProviderRequest(Mapping):\n        pass\n    \n    class GetConferenceProviderResponse(Mapping):\n        pass\n    \n    class GetContactRequest(Mapping):\n        pass\n    \n    class GetContactResponse(Mapping):\n        pass\n    \n    class GetDeviceRequest(Mapping):\n        pass\n    \n    class GetDeviceResponse(Mapping):\n        pass\n    \n    class GetGatewayRequest(Mapping):\n        pass\n    \n    class GetGatewayResponse(Mapping):\n        pass\n    \n    class GetGatewayGroupRequest(Mapping):\n        pass\n    \n    class GetGatewayGroupResponse(Mapping):\n        pass\n    \n    class GetInvitationConfigurationRequest(Mapping):\n        pass\n    \n    class GetInvitationConfigurationResponse(Mapping):\n        pass\n    \n    class GetNetworkProfileRequest(Mapping):\n        pass\n    \n    class GetNetworkProfileResponse(Mapping):\n        pass\n    \n    class GetProfileRequest(Mapping):\n        pass\n    \n    class GetProfileResponse(Mapping):\n        pass\n    \n    class GetRoomRequest(Mapping):\n        pass\n    \n    class GetRoomResponse(Mapping):\n        pass\n    \n    class GetRoomSkillParameterRequest(Mapping):\n        pass\n    \n    class GetRoomSkillParameterResponse(Mapping):\n        pass\n    \n    class GetSkillGroupRequest(Mapping):\n        pass\n    \n    class GetSkillGroupResponse(Mapping):\n        pass\n    \n    class ListBusinessReportSchedulesRequest(Mapping):\n        pass\n    \n    class ListBusinessReportSchedulesResponse(Mapping):\n        pass\n    \n    class ListConferenceProvidersRequest(Mapping):\n        pass\n    \n    class ListConferenceProvidersResponse(Mapping):\n        pass\n    \n    class ListDeviceEventsRequest(Mapping):\n        pass\n    \n    class ListDeviceEventsResponse(Mapping):\n        pass\n    \n    class ListGatewayGroupsRequest(Mapping):\n        pass\n    \n    class ListGatewayGroupsResponse(Mapping):\n        pass\n    \n    class ListGatewaysRequest(Mapping):\n        pass\n    \n    class ListGatewaysResponse(Mapping):\n        pass\n    \n    class ListSkillsRequest(Mapping):\n        pass\n    \n    class ListSkillsResponse(Mapping):\n        pass\n    \n    class ListSkillsStoreCategoriesRequest(Mapping):\n        pass\n    \n    class ListSkillsStoreCategoriesResponse(Mapping):\n        pass\n    \n    class ListSkillsStoreSkillsByCategoryRequest(Mapping):\n        pass\n    \n    class ListSkillsStoreSkillsByCategoryResponse(Mapping):\n        pass\n    \n    class CategoryId(object):\n        pass\n    \n    class ListSmartHomeAppliancesRequest(Mapping):\n        pass\n    \n    class ListSmartHomeAppliancesResponse(Mapping):\n        pass\n    \n    class ListTagsRequest(Mapping):\n        pass\n    \n    class ListTagsResponse(Mapping):\n        pass\n    \n    class PutConferencePreferenceRequest(Mapping):\n        pass\n    \n    class PutConferencePreferenceResponse(Mapping):\n        pass\n    \n    class ConferencePreference(Mapping):\n        pass\n    \n    class PutInvitationConfigurationRequest(Mapping):\n        pass\n    \n    class PutInvitationConfigurationResponse(Mapping):\n        pass\n    \n    class SkillId(object):\n        pass\n    \n    class PutRoomSkillParameterRequest(Mapping):\n        pass\n    \n    class PutRoomSkillParameterResponse(Mapping):\n        pass\n    \n    class RoomSkillParameter(Mapping):\n        pass\n    \n    class PutSkillAuthorizationRequest(Mapping):\n        pass\n    \n    class PutSkillAuthorizationResponse(Mapping):\n        pass\n    \n    class AuthorizationResult(object):\n        pass\n    \n    class RegisterAVSDeviceRequest(Mapping):\n        pass\n    \n    class RegisterAVSDeviceResponse(Mapping):\n        pass\n    \n    class RejectSkillRequest(Mapping):\n        pass\n    \n    class RejectSkillResponse(Mapping):\n        pass\n    \n    class ResolveRoomRequest(Mapping):\n        pass\n    \n    class ResolveRoomResponse(Mapping):\n        pass\n    \n    class RevokeInvitationRequest(Mapping):\n        pass\n    \n    class RevokeInvitationResponse(Mapping):\n        pass\n    \n    class SearchAddressBooksRequest(Mapping):\n        pass\n    \n    class SearchAddressBooksResponse(Mapping):\n        pass\n    \n    class Filter(Mapping):\n        pass\n    \n    class Sort(Mapping):\n        pass\n    \n    class SearchContactsRequest(Mapping):\n        pass\n    \n    class SearchContactsResponse(Mapping):\n        pass\n    \n    class SearchDevicesRequest(Mapping):\n        pass\n    \n    class SearchDevicesResponse(Mapping):\n        pass\n    \n    class SearchNetworkProfilesRequest(Mapping):\n        pass\n    \n    class SearchNetworkProfilesResponse(Mapping):\n        pass\n    \n    class SearchProfilesRequest(Mapping):\n        pass\n    \n    class SearchProfilesResponse(Mapping):\n        pass\n    \n    class SearchRoomsRequest(Mapping):\n        pass\n    \n    class SearchRoomsResponse(Mapping):\n        pass\n    \n    class SearchSkillGroupsRequest(Mapping):\n        pass\n    \n    class SearchSkillGroupsResponse(Mapping):\n        pass\n    \n    class SearchUsersRequest(Mapping):\n        pass\n    \n    class SearchUsersResponse(Mapping):\n        pass\n    \n    class SendAnnouncementRequest(Mapping):\n        pass\n    \n    class SendAnnouncementResponse(Mapping):\n        pass\n    \n    class Content(Mapping):\n        pass\n    \n    class SendInvitationRequest(Mapping):\n        pass\n    \n    class SendInvitationResponse(Mapping):\n        pass\n    \n    class StartDeviceSyncRequest(Mapping):\n        pass\n    \n    class StartDeviceSyncResponse(Mapping):\n        pass\n    \n    class Feature(object):\n        pass\n    \n    class StartSmartHomeApplianceDiscoveryRequest(Mapping):\n        pass\n    \n    class StartSmartHomeApplianceDiscoveryResponse(Mapping):\n        pass\n    \n    class TagResourceRequest(Mapping):\n        pass\n    \n    class TagResourceResponse(Mapping):\n        pass\n    \n    class UntagResourceRequest(Mapping):\n        pass\n    \n    class UntagResourceResponse(Mapping):\n        pass\n    \n    class TagKey(object):\n        pass\n    \n    class UpdateAddressBookRequest(Mapping):\n        pass\n    \n    class UpdateAddressBookResponse(Mapping):\n        pass\n    \n    class UpdateBusinessReportScheduleRequest(Mapping):\n        pass\n    \n    class UpdateBusinessReportScheduleResponse(Mapping):\n        pass\n    \n    class UpdateConferenceProviderRequest(Mapping):\n        pass\n    \n    class UpdateConferenceProviderResponse(Mapping):\n        pass\n    \n    class UpdateContactRequest(Mapping):\n        pass\n    \n    class UpdateContactResponse(Mapping):\n        pass\n    \n    class UpdateDeviceRequest(Mapping):\n        pass\n    \n    class UpdateDeviceResponse(Mapping):\n        pass\n    \n    class UpdateGatewayRequest(Mapping):\n        pass\n    \n    class UpdateGatewayResponse(Mapping):\n        pass\n    \n    class UpdateGatewayGroupRequest(Mapping):\n        pass\n    \n    class UpdateGatewayGroupResponse(Mapping):\n        pass\n    \n    class UpdateNetworkProfileRequest(Mapping):\n        pass\n    \n    class UpdateNetworkProfileResponse(Mapping):\n        pass\n    \n    class UpdateProfileRequest(Mapping):\n        pass\n    \n    class UpdateProfileResponse(Mapping):\n        pass\n    \n    class UpdateMeetingRoomConfiguration(Mapping):\n        pass\n    \n    class UpdateRoomRequest(Mapping):\n        pass\n    \n    class UpdateRoomResponse(Mapping):\n        pass\n    \n    class UpdateSkillGroupRequest(Mapping):\n        pass\n    \n    class UpdateSkillGroupResponse(Mapping):\n        pass\n    \n    def approve_skill(self, SkillId: str) -> ApproveSkillResponse:\n        r\"\"\"Associates a skill with the organization under the customer's AWS account. If a skill is private, the user implicitly accepts access to this skill during enablement.\n\n        :param self:\n        :param SkillId:  The unique identifier of the skill.<br/>\n        :return:         \"\"\"\n        pass\n\n    def associate_contact_with_address_book(self, AddressBookArn: str, ContactArn: str) -> AssociateContactWithAddressBookResponse:\n        r\"\"\"Associates a contact with a given address book.\n\n        :param self:\n        :param AddressBookArn:  The ARN of the address book with which to associate the contact.<br/>ContactArn:  The ARN of the contact to associate with an address book.<br/>\n        :return:         \"\"\"\n        pass\n\n    def associate_device_with_network_profile(self, NetworkProfileArn: str, DeviceArn: str) -> AssociateDeviceWithNetworkProfileResponse:\n        r\"\"\"Associates a device with the specified network profile.\n\n        :param self:\n        :param NetworkProfileArn:  The ARN of the network profile to associate with a device.<br/>DeviceArn:  The device ARN.<br/>\n        :return:         \"\"\"\n        pass\n\n    def associate_device_with_room(self, DeviceArn: str=None, RoomArn: str=None) -> AssociateDeviceWithRoomResponse:\n        r\"\"\"Associates a device with a given room. This applies all the settings from the room profile to the device, and all the skills in any skill groups added to that room. This operation requires the device to be online, or else a manual sync is required. \n\n        :param self:\n        :param RoomArn:  The ARN of the room with which to associate the device. Required.<br/>DeviceArn:  The ARN of the device to associate to a room. Required.<br/>\n        :return:         \"\"\"\n        pass\n\n    def associate_skill_group_with_room(self, SkillGroupArn: str=None, RoomArn: str=None) -> AssociateSkillGroupWithRoomResponse:\n        r\"\"\"Associates a skill group with a given room. This enables all skills in the associated skill group on all devices in the room.\n\n        :param self:\n        :param RoomArn:  The ARN of the room with which to associate the skill group. Required.<br/>SkillGroupArn:  The ARN of the skill group to associate with a room. Required.<br/>\n        :return:         \"\"\"\n        pass\n\n    def associate_skill_with_skill_group(self, SkillId: str, SkillGroupArn: str=None) -> AssociateSkillWithSkillGroupResponse:\n        r\"\"\"Associates a skill with a skill group.\n\n        :param self:\n        :param SkillId:  The unique identifier of the skill.<br/>SkillGroupArn:  The ARN of the skill group to associate the skill to. Required.<br/>\n        :return:         \"\"\"\n        pass\n\n    def associate_skill_with_users(self, SkillId: str) -> AssociateSkillWithUsersResponse:\n        r\"\"\"Makes a private skill available for enrolled users to enable on their devices.\n\n        :param self:\n        :param SkillId:  The private skill ID you want to make available to enrolled users.<br/>\n        :return:         \"\"\"\n        pass\n\n    def create_address_book(self, Name: str, Description: str=None, ClientRequestToken: str=None) -> CreateAddressBookResponse:\n        r\"\"\"Creates an address book with the specified details.\n\n        :param self:\n        :param ClientRequestToken:  A unique, user-specified identifier for the request that ensures idempotency.<br/>Description:  The description of the address book.<br/>Name:  The name of the address book.<br/>\n        :return: AddressBookArn:  The ARN of the newly created address book.<br/>        \"\"\"\n        pass\n\n    def create_business_report_schedule(self, ContentRange: BusinessReportContentRange, Format: str, ScheduleName: str=None, S3BucketName: str=None, S3KeyPrefix: str=None, Recurrence: BusinessReportRecurrence=None, ClientRequestToken: str=None) -> CreateBusinessReportScheduleResponse:\n        r\"\"\"Creates a recurring schedule for usage reports to deliver to the specified S3 location with a specified daily or weekly interval.\n\n        :param self:\n        :param ClientRequestToken:  The client request token.<br/>Recurrence:  The recurrence of the reports. If this isn't specified, the report will only be delivered one time when the API is called. :<br/>ContentRange:  The content range of the reports.:<br/>Format:  The format of the generated report (individual CSV files or zipped files of individual files).<br/>S3KeyPrefix:  The S3 key where the report is delivered.<br/>S3BucketName:  The S3 bucket name of the output reports. If this isn't specified, the report can be retrieved from a download link by calling ListBusinessReportSchedule. <br/>ScheduleName:  The name identifier of the schedule.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Interval</i> The interval of the content range.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>StartDate</i> The start date.<br/>\n        :return: ScheduleArn:  The ARN of the business report schedule.<br/>        \"\"\"\n        pass\n\n    def create_conference_provider(self, MeetingSetting: MeetingSetting, ConferenceProviderType: str, ConferenceProviderName: str, IPDialIn: IPDialIn=None, PSTNDialIn: PSTNDialIn=None, ClientRequestToken: str=None) -> CreateConferenceProviderResponse:\n        r\"\"\"Adds a new conference provider under the user's AWS account.\n\n        :param self:\n        :param ClientRequestToken:  The request token of the client.<br/>MeetingSetting:  The meeting settings for the conference provider.:<br/>PSTNDialIn:  The information for PSTN conferencing.:<br/>IPDialIn:  The IP endpoint and protocol for calling.:<br/>ConferenceProviderType:  Represents a type within a list of predefined types.<br/>ConferenceProviderName:  The name of the conference provider.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>CommsProtocol</i> The protocol, including SIP, SIPS, and H323.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Endpoint</i> The IP address.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>OneClickPinDelay</i> The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>OneClickIdDelay</i> The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>PhoneNumber</i> The phone number to call to join the conference.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>CountryCode</i> The zip code.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>RequirePin</i> The values that indicate whether the pin is always required.<br/>\n        :return: ConferenceProviderArn:  The ARN of the newly-created conference provider.<br/>        \"\"\"\n        pass\n\n    def create_contact(self, FirstName: str, DisplayName: str=None, LastName: str=None, PhoneNumber: str=None, PhoneNumbers: List[PhoneNumber]=None, SipAddresses: List[SipAddress]=None, ClientRequestToken: str=None) -> CreateContactResponse:\n        r\"\"\"Creates a contact with the specified details.\n\n        :param self:\n        :param ClientRequestToken:  A unique, user-specified identifier for this request that ensures idempotency.<br/>SipAddresses:  The list of SIP addresses for the contact.<br/>PhoneNumbers:  The list of phone numbers for the contact.<br/>PhoneNumber:  The phone number of the contact in E.164 format. The phone number type defaults to WORK. You can specify PhoneNumber or PhoneNumbers. We recommend that you use PhoneNumbers, which lets you specify the phone number type and multiple numbers.<br/>LastName:  The last name of the contact that is used to call the contact on the device.<br/>FirstName:  The first name of the contact that is used to call the contact on the device.<br/>DisplayName:  The name of the contact to display on the console.<br/>\n        :return: ContactArn:  The ARN of the newly created address book.<br/>        \"\"\"\n        pass\n\n    def create_gateway_group(self, ClientRequestToken: str, Name: str, Description: str=None) -> CreateGatewayGroupResponse:\n        r\"\"\"Creates a gateway group with the specified details.\n\n        :param self:\n        :param ClientRequestToken:   A unique, user-specified identifier for the request that ensures idempotency.<br/>Description:  The description of the gateway group.<br/>Name:  The name of the gateway group.<br/>\n        :return: GatewayGroupArn:  The ARN of the created gateway group.<br/>        \"\"\"\n        pass\n\n    def create_network_profile(self, ClientRequestToken: str, SecurityType: str, Ssid: str, NetworkProfileName: str, Description: str=None, EapMethod: str=None, CurrentPassword: str=None, NextPassword: str=None, CertificateAuthorityArn: str=None, TrustAnchors: List[TrustAnchor]=None) -> CreateNetworkProfileResponse:\n        r\"\"\"Creates a network profile with the specified details.\n\n        :param self:\n        :param ClientRequestToken:  A unique, user-specified identifier for the request that ensures idempotency.<br/>TrustAnchors:  The root certificates of your authentication server that is installed on your devices and used to trust your authentication server during EAP negotiation. <br/>CertificateAuthorityArn:  The ARN of the Private Certificate Authority (PCA) created in AWS Certificate Manager (ACM). This is used to issue certificates to the devices. <br/>NextPassword:  The next, or subsequent, password of the Wi-Fi network. This password is asynchronously transmitted to the device and is used when the password of the network changes to NextPassword. <br/>CurrentPassword:  The current password of the Wi-Fi network.<br/>EapMethod:  The authentication standard that is used in the EAP framework. Currently, EAP_TLS is supported.<br/>SecurityType:  The security type of the Wi-Fi network. This can be WPA2_ENTERPRISE, WPA2_PSK, WPA_PSK, WEP, or OPEN.<br/>Ssid:  The SSID of the Wi-Fi network.<br/>Description:  Detailed information about a device's network profile.<br/>NetworkProfileName:  The name of the network profile associated with a device.<br/>\n        :return: NetworkProfileArn:  The ARN of the network profile associated with a device.<br/>        \"\"\"\n        pass\n\n    def create_profile(self, WakeWord: str, TemperatureUnit: str, DistanceUnit: str, Address: str, Timezone: str, ProfileName: str, Locale: str=None, ClientRequestToken: str=None, SetupModeDisabled: Boolean=None, MaxVolumeLimit: int=None, PSTNEnabled: Boolean=None, MeetingRoomConfiguration: CreateMeetingRoomConfiguration=None) -> CreateProfileResponse:\n        r\"\"\"Creates a new room profile with the specified details.\n\n        :param self:\n        :param MeetingRoomConfiguration:  The meeting room settings of a room profile.:<br/>PSTNEnabled:  Whether PSTN calling is enabled.<br/>MaxVolumeLimit:  The maximum volume limit for a room profile.<br/>SetupModeDisabled:  Whether room profile setup is enabled.<br/>ClientRequestToken:  The user-specified token that is used during the creation of a profile.<br/>Locale:  The locale of the room profile. (This is currently only available to a limited preview audience.)<br/>WakeWord:  A wake word for Alexa, Echo, Amazon, or a computer.<br/>TemperatureUnit:  The temperature unit to be used by devices in the profile.<br/>DistanceUnit:  The distance unit to be used by devices in the profile.<br/>Address:  The valid address for the room.<br/>Timezone:  The time zone used by a room profile.<br/>ProfileName:  The name of a room profile.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>RequireCheckIn</i> Settings for requiring a check in when a room is reserved. Alexa can cancel a room reservation if it's not checked into to make the room available for others. Users can check in by joining the meeting with Alexa or an AVS device, or by saying \u201cAlexa, check in.\u201d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>RequireCheckIn</b>: Settings for requiring a check in when a room is reserved. Alexa can cancel a room reservation if it's not checked into to make the room available for others. Users can check in by joining the meeting with Alexa or an AVS device, or by saying \u201cAlexa, check in.\u201d<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>InstantBooking</i> Settings to automatically book a room for a configured duration if it's free when joining a meeting with Alexa.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>InstantBooking</b>: Settings to automatically book a room for a configured duration if it's free when joining a meeting with Alexa.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>EndOfMeetingReminder</i> Creates settings for the end of meeting reminder feature that are applied to a room profile. The end of meeting reminder enables Alexa to remind users when a meeting is ending.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>EndOfMeetingReminder</b>: Creates settings for the end of meeting reminder feature that are applied to a room profile. The end of meeting reminder enables Alexa to remind users when a meeting is ending.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>RoomUtilizationMetricsEnabled</i> Whether room utilization metrics are enabled or not.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>Enabled</i> Whether an end of meeting reminder is enabled or not.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>ReminderType</i> The type of sound that users hear during the end of meeting reminder. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>ReminderAtMinutes</i>  A range of 3 to 15 minutes that determines when the reminder begins.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>Enabled</i> Whether instant booking is enabled or not.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>DurationInMinutes</i> Duration between 15 and 240 minutes at increments of 15 that determines how long to book an available room when a meeting is started with Alexa.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>Enabled</i> Whether require check in is enabled or not.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>ReleaseAfterMinutes</i> Duration between 5 and 20 minutes to determine when to release the room if it's not checked into.<br/>\n        :return: ProfileArn:  The ARN of the newly created room profile in the response.<br/>        \"\"\"\n        pass\n\n    def create_room(self, RoomName: str, Description: str=None, ProfileArn: str=None, ProviderCalendarId: str=None, ClientRequestToken: str=None, Tags: List[Tag]=None) -> CreateRoomResponse:\n        r\"\"\"Creates a room with the specified details.\n\n        :param self:\n        :param Tags:  The tags for the room.<br/>ClientRequestToken:  A unique, user-specified identifier for this request that ensures idempotency. <br/>ProviderCalendarId:  The calendar ARN for the room.<br/>ProfileArn:  The profile ARN for the room.<br/>Description:  The description for the room.<br/>RoomName:  The name for the room.<br/>\n        :return: RoomArn:  The ARN of the newly created room in the response.<br/>        \"\"\"\n        pass\n\n    def create_skill_group(self, SkillGroupName: str, Description: str=None, ClientRequestToken: str=None) -> CreateSkillGroupResponse:\n        r\"\"\"Creates a skill group with a specified name and description.\n\n        :param self:\n        :param ClientRequestToken:  A unique, user-specified identifier for this request that ensures idempotency. <br/>Description:  The description for the skill group.<br/>SkillGroupName:  The name for the skill group.<br/>\n        :return: SkillGroupArn:  The ARN of the newly created skill group in the response.<br/>        \"\"\"\n        pass\n\n    def create_user(self, UserId: str, FirstName: str=None, LastName: str=None, Email: str=None, ClientRequestToken: str=None, Tags: List[Tag]=None) -> CreateUserResponse:\n        r\"\"\"Creates a user.\n\n        :param self:\n        :param Tags:  The tags for the user.<br/>ClientRequestToken:  A unique, user-specified identifier for this request that ensures idempotency. <br/>Email:  The email address for the user.<br/>LastName:  The last name for the user.<br/>FirstName:  The first name for the user.<br/>UserId:  The ARN for the user.<br/>\n        :return: UserArn:  The ARN of the newly created user in the response.<br/>        \"\"\"\n        pass\n\n    def delete_address_book(self, AddressBookArn: str) -> DeleteAddressBookResponse:\n        r\"\"\"Deletes an address book by the address book ARN.\n\n        :param self:\n        :param AddressBookArn:  The ARN of the address book to delete.<br/>\n        :return:         \"\"\"\n        pass\n\n    def delete_business_report_schedule(self, ScheduleArn: str) -> DeleteBusinessReportScheduleResponse:\n        r\"\"\"Deletes the recurring report delivery schedule with the specified schedule ARN.\n\n        :param self:\n        :param ScheduleArn:  The ARN of the business report schedule.<br/>\n        :return:         \"\"\"\n        pass\n\n    def delete_conference_provider(self, ConferenceProviderArn: str) -> DeleteConferenceProviderResponse:\n        r\"\"\"Deletes a conference provider.\n\n        :param self:\n        :param ConferenceProviderArn:  The ARN of the conference provider.<br/>\n        :return:         \"\"\"\n        pass\n\n    def delete_contact(self, ContactArn: str) -> DeleteContactResponse:\n        r\"\"\"Deletes a contact by the contact ARN.\n\n        :param self:\n        :param ContactArn:  The ARN of the contact to delete.<br/>\n        :return:         \"\"\"\n        pass\n\n    def delete_device(self, DeviceArn: str) -> DeleteDeviceResponse:\n        r\"\"\"Removes a device from Alexa For Business.\n\n        :param self:\n        :param DeviceArn:  The ARN of the device for which to request details.<br/>\n        :return:         \"\"\"\n        pass\n\n    def delete_device_usage_data(self, DeviceUsageType: str, DeviceArn: str) -> DeleteDeviceUsageDataResponse:\n        r\"\"\"When this action is called for a specified shared device, it allows authorized users to delete the device's entire previous history of voice input data and associated response data. This action can be called once every 24 hours for a specific shared device.\n\n        :param self:\n        :param DeviceUsageType:  The type of usage data to delete.<br/>DeviceArn:  The ARN of the device.<br/>\n        :return:         \"\"\"\n        pass\n\n    def delete_gateway_group(self, GatewayGroupArn: str) -> DeleteGatewayGroupResponse:\n        r\"\"\"Deletes a gateway group.\n\n        :param self:\n        :param GatewayGroupArn:  The ARN of the gateway group to delete.<br/>\n        :return:         \"\"\"\n        pass\n\n    def delete_network_profile(self, NetworkProfileArn: str) -> DeleteNetworkProfileResponse:\n        r\"\"\"Deletes a network profile by the network profile ARN.\n\n        :param self:\n        :param NetworkProfileArn:  The ARN of the network profile associated with a device.<br/>\n        :return:         \"\"\"\n        pass\n\n    def delete_profile(self, ProfileArn: str=None) -> DeleteProfileResponse:\n        r\"\"\"Deletes a room profile by the profile ARN.\n\n        :param self:\n        :param ProfileArn:  The ARN of the room profile to delete. Required.<br/>\n        :return:         \"\"\"\n        pass\n\n    def delete_room(self, RoomArn: str=None) -> DeleteRoomResponse:\n        r\"\"\"Deletes a room by the room ARN.\n\n        :param self:\n        :param RoomArn:  The ARN of the room to delete. Required.<br/>\n        :return:         \"\"\"\n        pass\n\n    def delete_room_skill_parameter(self, ParameterKey: str, SkillId: str, RoomArn: str=None) -> DeleteRoomSkillParameterResponse:\n        r\"\"\"Deletes room skill parameter details by room, skill, and parameter key ID.\n\n        :param self:\n        :param ParameterKey:  The room skill parameter key for which to remove details.<br/>SkillId:  The ID of the skill from which to remove the room skill parameter details.<br/>RoomArn:  The ARN of the room from which to remove the room skill parameter details.<br/>\n        :return:         \"\"\"\n        pass\n\n    def delete_skill_authorization(self, SkillId: str, RoomArn: str=None) -> DeleteSkillAuthorizationResponse:\n        r\"\"\"Unlinks a third-party account from a skill.\n\n        :param self:\n        :param RoomArn:  The room that the skill is authorized for.<br/>SkillId:  The unique identifier of a skill.<br/>\n        :return:         \"\"\"\n        pass\n\n    def delete_skill_group(self, SkillGroupArn: str=None) -> DeleteSkillGroupResponse:\n        r\"\"\"Deletes a skill group by skill group ARN.\n\n        :param self:\n        :param SkillGroupArn:  The ARN of the skill group to delete. Required.<br/>\n        :return:         \"\"\"\n        pass\n\n    def delete_user(self, EnrollmentId: str, UserArn: str=None) -> DeleteUserResponse:\n        r\"\"\"Deletes a specified user by user ARN and enrollment ARN.\n\n        :param self:\n        :param EnrollmentId:  The ARN of the user's enrollment in the organization. Required.<br/>UserArn:  The ARN of the user to delete in the organization. Required.<br/>\n        :return:         \"\"\"\n        pass\n\n    def disassociate_contact_from_address_book(self, AddressBookArn: str, ContactArn: str) -> DisassociateContactFromAddressBookResponse:\n        r\"\"\"Disassociates a contact from a given address book.\n\n        :param self:\n        :param AddressBookArn:  The ARN of the address from which to disassociate the contact.<br/>ContactArn:  The ARN of the contact to disassociate from an address book.<br/>\n        :return:         \"\"\"\n        pass\n\n    def disassociate_device_from_room(self, DeviceArn: str=None) -> DisassociateDeviceFromRoomResponse:\n        r\"\"\"Disassociates a device from its current room. The device continues to be connected to the Wi-Fi network and is still registered to the account. The device settings and skills are removed from the room.\n\n        :param self:\n        :param DeviceArn:  The ARN of the device to disassociate from a room. Required.<br/>\n        :return:         \"\"\"\n        pass\n\n    def disassociate_skill_from_skill_group(self, SkillId: str, SkillGroupArn: str=None) -> DisassociateSkillFromSkillGroupResponse:\n        r\"\"\"Disassociates a skill from a skill group.\n\n        :param self:\n        :param SkillId:  The ARN of a skill group to associate to a skill.<br/>SkillGroupArn:  The unique identifier of a skill. Required.<br/>\n        :return:         \"\"\"\n        pass\n\n    def disassociate_skill_from_users(self, SkillId: str) -> DisassociateSkillFromUsersResponse:\n        r\"\"\"Makes a private skill unavailable for enrolled users and prevents them from enabling it on their devices.\n\n        :param self:\n        :param SkillId:   The private skill ID you want to make unavailable for enrolled users.<br/>\n        :return:         \"\"\"\n        pass\n\n    def disassociate_skill_group_from_room(self, SkillGroupArn: str=None, RoomArn: str=None) -> DisassociateSkillGroupFromRoomResponse:\n        r\"\"\"Disassociates a skill group from a specified room. This disables all skills in the skill group on all devices in the room.\n\n        :param self:\n        :param RoomArn:  The ARN of the room from which the skill group is to be disassociated. Required.<br/>SkillGroupArn:  The ARN of the skill group to disassociate from a room. Required.<br/>\n        :return:         \"\"\"\n        pass\n\n    def forget_smart_home_appliances(self, RoomArn: str) -> ForgetSmartHomeAppliancesResponse:\n        r\"\"\"Forgets smart home appliances associated to a room.\n\n        :param self:\n        :param RoomArn:  The room that the appliances are associated with.<br/>\n        :return:         \"\"\"\n        pass\n\n    def get_address_book(self, AddressBookArn: str) -> GetAddressBookResponse:\n        r\"\"\"Gets address the book details by the address book ARN.\n\n        :param self:\n        :param AddressBookArn:  The ARN of the address book for which to request details.<br/>\n        :return: AddressBook:  The details of the requested address book.:<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Description</i> The description of the address book.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Name</i> The name of the address book.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>AddressBookArn</i> The ARN of the address book.<br/>        \"\"\"\n        pass\n\n    def get_conference_preference(self) -> GetConferencePreferenceResponse:\n        r\"\"\"Retrieves the existing conference preferences.\n\n        :param self:\n        :param \n        :return: Preference:  The conference preference.:<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>DefaultConferenceProviderArn</i> The ARN of the default conference provider.<br/>        \"\"\"\n        pass\n\n    def get_conference_provider(self, ConferenceProviderArn: str) -> GetConferenceProviderResponse:\n        r\"\"\"Gets details about a specific conference provider.\n\n        :param self:\n        :param ConferenceProviderArn:  The ARN of the newly created conference provider.<br/>\n        :return: ConferenceProvider:  The conference provider.:<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>MeetingSetting</i> The meeting settings for the conference provider.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>MeetingSetting</b>: The meeting settings for the conference provider.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>PSTNDialIn</i> The information for PSTN conferencing.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>PSTNDialIn</b>: The information for PSTN conferencing.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>IPDialIn</i> The IP endpoint and protocol for calling.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>IPDialIn</b>: The IP endpoint and protocol for calling.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Type</i> The type of conference providers.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Name</i> The name of the conference provider.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Arn</i> The ARN of the newly created conference provider.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>CommsProtocol</i> The protocol, including SIP, SIPS, and H323.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>Endpoint</i> The IP address.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>OneClickPinDelay</i> The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>OneClickIdDelay</i> The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>PhoneNumber</i> The phone number to call to join the conference.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>CountryCode</i> The zip code.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>RequirePin</i> The values that indicate whether the pin is always required.<br/>        \"\"\"\n        pass\n\n    def get_contact(self, ContactArn: str) -> GetContactResponse:\n        r\"\"\"Gets the contact details by the contact ARN.\n\n        :param self:\n        :param ContactArn:  The ARN of the contact for which to request details.<br/>\n        :return: Contact:  The details of the requested contact.:<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>SipAddresses</i> The list of SIP addresses for the contact.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>PhoneNumbers</i> The list of phone numbers for the contact.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>PhoneNumber</i> The phone number of the contact. The phone number type defaults to WORK. You can either specify PhoneNumber or PhoneNumbers. We recommend that you use PhoneNumbers, which lets you specify the phone number type and multiple numbers.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>LastName</i> The last name of the contact, used to call the contact on the device.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>FirstName</i> The first name of the contact, used to call the contact on the device.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>DisplayName</i> The name of the contact to display on the console.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>ContactArn</i> The ARN of the contact.<br/>        \"\"\"\n        pass\n\n    def get_device(self, DeviceArn: str=None) -> GetDeviceResponse:\n        r\"\"\"Gets the details of a device by device ARN.\n\n        :param self:\n        :param DeviceArn:  The ARN of the device for which to request details. Required.<br/>\n        :return: Device:  The details of the device requested. Required.:<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>NetworkProfileInfo</i> Detailed information about a device's network profile.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>NetworkProfileInfo</b>: Detailed information about a device's network profile.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>DeviceStatusInfo</i> Detailed information about a device's status.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>DeviceStatusInfo</b>: Detailed information about a device's status.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>DeviceStatus</i> The status of a device. If the status is not READY, check the DeviceStatusInfo value for details.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>RoomArn</i> The room ARN of a device.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>MacAddress</i> The MAC address of a device.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>SoftwareVersion</i> The software version of a device.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>DeviceName</i> The name of a device.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>DeviceType</i> The type of a device.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>DeviceSerialNumber</i> The serial number of a device.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>DeviceArn</i> The ARN of a device.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>ConnectionStatusUpdatedTime</i> The time (in epoch) when the device connection status changed.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>ConnectionStatus</i> The latest available information about the connection status of a device. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>DeviceStatusDetails</i> One or more device status detail descriptions.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>CertificateExpirationTime</i> The time (in epoch) when the certificate expires.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>CertificateArn</i> The ARN of the certificate associated with a device.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>NetworkProfileArn</i> The ARN of the network profile associated with a device.<br/>        \"\"\"\n        pass\n\n    def get_gateway(self, GatewayArn: str) -> GetGatewayResponse:\n        r\"\"\"Retrieves the details of a gateway.\n\n        :param self:\n        :param GatewayArn:  The ARN of the gateway to get.<br/>\n        :return: Gateway:  The details of the gateway.:<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>SoftwareVersion</i> The software version of the gateway. The gateway automatically updates its software version during normal operation.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>GatewayGroupArn</i> The ARN of the gateway group that the gateway is associated to.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Description</i> The description of the gateway.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Name</i> The name of the gateway.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Arn</i> The ARN of the gateway.<br/>        \"\"\"\n        pass\n\n    def get_gateway_group(self, GatewayGroupArn: str) -> GetGatewayGroupResponse:\n        r\"\"\"Retrieves the details of a gateway group.\n\n        :param self:\n        :param GatewayGroupArn:  The ARN of the gateway group to get.<br/>\n        :return: GatewayGroup:  The details of the gateway group.:<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Description</i> The description of the gateway group.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Name</i> The name of the gateway group.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Arn</i> The ARN of the gateway group.<br/>        \"\"\"\n        pass\n\n    def get_invitation_configuration(self) -> GetInvitationConfigurationResponse:\n        r\"\"\"Retrieves the configured values for the user enrollment invitation email template.\n\n        :param self:\n        :param \n        :return: PrivateSkillIds:  The list of private skill IDs that you want to recommend to the user to enable in the invitation.<br/>ContactEmail:  The email ID of the organization or individual contact that the enrolled user can use. <br/>OrganizationName:  The name of the organization sending the enrollment invite to a user.<br/>        \"\"\"\n        pass\n\n    def get_network_profile(self, NetworkProfileArn: str) -> GetNetworkProfileResponse:\n        r\"\"\"Gets the network profile details by the network profile ARN.\n\n        :param self:\n        :param NetworkProfileArn:  The ARN of the network profile associated with a device.<br/>\n        :return: NetworkProfile:  The network profile associated with a device.:<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>TrustAnchors</i> The root certificates of your authentication server, which is installed on your devices and used to trust your authentication server during EAP negotiation.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>CertificateAuthorityArn</i> The ARN of the Private Certificate Authority (PCA) created in AWS Certificate Manager (ACM). This is used to issue certificates to the devices. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>NextPassword</i> The next, or subsequent, password of the Wi-Fi network. This password is asynchronously transmitted to the device and is used when the password of the network changes to NextPassword. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>CurrentPassword</i> The current password of the Wi-Fi network.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>EapMethod</i> The authentication standard that is used in the EAP framework. Currently, EAP_TLS is supported. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>SecurityType</i> The security type of the Wi-Fi network. This can be WPA2_ENTERPRISE, WPA2_PSK, WPA_PSK, WEP, or OPEN.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Ssid</i> The SSID of the Wi-Fi network.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Description</i> Detailed information about a device's network profile.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>NetworkProfileName</i> The name of the network profile associated with a device.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>NetworkProfileArn</i> The ARN of the network profile associated with a device.<br/>        \"\"\"\n        pass\n\n    def get_profile(self, ProfileArn: str=None) -> GetProfileResponse:\n        r\"\"\"Gets the details of a room profile by profile ARN.\n\n        :param self:\n        :param ProfileArn:  The ARN of the room profile for which to request details. Required.<br/>\n        :return: Profile:  The details of the room profile requested. Required.:<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>MeetingRoomConfiguration</i> Meeting room settings of a room profile.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>MeetingRoomConfiguration</b>: Meeting room settings of a room profile.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>AddressBookArn</i> The ARN of the address book.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>PSTNEnabled</i> The PSTN setting of a room profile.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>MaxVolumeLimit</i> The max volume limit of a room profile.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>SetupModeDisabled</i> The setup mode of a room profile.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Locale</i> The locale of a room profile. (This is currently available only to a limited preview audience.)<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>WakeWord</i> The wake word of a room profile.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>TemperatureUnit</i> The temperature unit of a room profile.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>DistanceUnit</i> The distance unit of a room profile.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Timezone</i> The time zone of a room profile.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Address</i> The address of a room profile.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>IsDefault</i> Retrieves if the profile is default or not.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>ProfileName</i> The name of a room profile.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>ProfileArn</i> The ARN of a room profile.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>RoomUtilizationMetricsEnabled</i> Whether room utilization metrics are enabled or not.<br/>Settings for the end of meeting reminder feature that are applied to a room profile. The end of meeting reminder enables Alexa to remind users when a meeting is ending. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>EndOfMeetingReminder</b>: Settings for the end of meeting reminder feature that are applied to a room profile. The end of meeting reminder enables Alexa to remind users when a meeting is ending.         \"\"\"\n        pass\n\n    def get_room(self, RoomArn: str=None) -> GetRoomResponse:\n        r\"\"\"Gets room details by room ARN.\n\n        :param self:\n        :param RoomArn:  The ARN of the room for which to request details. Required.<br/>\n        :return: Room:  The details of the room requested.:<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>ProfileArn</i> The profile ARN of a room.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>ProviderCalendarId</i> The provider calendar ARN of a room.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Description</i> The description of a room.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>RoomName</i> The name of a room.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>RoomArn</i> The ARN of a room.<br/>        \"\"\"\n        pass\n\n    def get_room_skill_parameter(self, ParameterKey: str, SkillId: str, RoomArn: str=None) -> GetRoomSkillParameterResponse:\n        r\"\"\"Gets room skill parameter details by room, skill, and parameter key ARN.\n\n        :param self:\n        :param ParameterKey:  The room skill parameter key for which to get details. Required.<br/>SkillId:  The ARN of the skill from which to get the room skill parameter details. Required.<br/>RoomArn:  The ARN of the room from which to get the room skill parameter details. <br/>\n        :return: RoomSkillParameter:  The details of the room skill parameter requested. Required.:<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>ParameterValue</i> The parameter value of a room skill parameter.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>ParameterKey</i> The parameter key of a room skill parameter. ParameterKey is an enumerated type that only takes \u201cDEFAULT\u201d or \u201cSCOPE\u201d as valid values.<br/>        \"\"\"\n        pass\n\n    def get_skill_group(self, SkillGroupArn: str=None) -> GetSkillGroupResponse:\n        r\"\"\"Gets skill group details by skill group ARN.\n\n        :param self:\n        :param SkillGroupArn:  The ARN of the skill group for which to get details. Required.<br/>\n        :return: SkillGroup:  The details of the skill group requested. Required.:<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Description</i> The description of a skill group.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>SkillGroupName</i> The name of a skill group.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>SkillGroupArn</i> The ARN of a skill group.<br/>        \"\"\"\n        pass\n\n    def list_business_report_schedules(self, NextToken: str=None, MaxResults: int=None) -> ListBusinessReportSchedulesResponse:\n        r\"\"\"Lists the details of the schedules that a user configured. A download URL of the report associated with each schedule is returned every time this action is called. A new download URL is returned each time, and is valid for 24 hours.\n\n        :param self:\n        :param MaxResults:  The maximum number of schedules listed in the call.<br/>NextToken:  The token used to list the remaining schedules from the previous API call.<br/>\n        :return: NextToken:  The token used to list the remaining schedules from the previous API call.<br/>BusinessReportSchedules:  The schedule of the reports.<br/>        \"\"\"\n        pass\n\n    def list_conference_providers(self, NextToken: str=None, MaxResults: int=None) -> ListConferenceProvidersResponse:\n        r\"\"\"Lists conference providers under a specific AWS account.\n\n        :param self:\n        :param MaxResults:  The maximum number of conference providers to be returned, per paginated calls.<br/>NextToken:  The tokens used for pagination.<br/>\n        :return: NextToken:  The tokens used for pagination.<br/>ConferenceProviders:  The conference providers.<br/>        \"\"\"\n        pass\n\n    def list_device_events(self, DeviceArn: str, EventType: str=None, NextToken: str=None, MaxResults: int=None) -> ListDeviceEventsResponse:\n        r\"\"\"Lists the device event history, including device connection status, for up to 30 days.\n\n        :param self:\n        :param MaxResults:  The maximum number of results to include in the response. The default value is 50. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved. <br/>NextToken:  An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response only includes results beyond the token, up to the value specified by MaxResults. When the end of results is reached, the response has a value of null.<br/>EventType:  The event type to filter device events. If EventType isn't specified, this returns a list of all device events in reverse chronological order. If EventType is specified, this returns a list of device events for that EventType in reverse chronological order. <br/>DeviceArn:  The ARN of a device.<br/>\n        :return: NextToken:  The token returned to indicate that there is more data available.<br/>DeviceEvents:  The device events requested for the device ARN.<br/>        \"\"\"\n        pass\n\n    def list_gateway_groups(self, NextToken: str=None, MaxResults: int=None) -> ListGatewayGroupsResponse:\n        r\"\"\"Retrieves a list of gateway group summaries. Use GetGatewayGroup to retrieve details of a specific gateway group.\n\n        :param self:\n        :param MaxResults:  The maximum number of gateway group summaries to return. The default is 50.<br/>NextToken:  The token used to paginate though multiple pages of gateway group summaries.<br/>\n        :return: NextToken:  The token used to paginate though multiple pages of gateway group summaries.<br/>GatewayGroups:  The gateway groups in the list.<br/>        \"\"\"\n        pass\n\n    def list_gateways(self, GatewayGroupArn: str=None, NextToken: str=None, MaxResults: int=None) -> ListGatewaysResponse:\n        r\"\"\"Retrieves a list of gateway summaries. Use GetGateway to retrieve details of a specific gateway. An optional gateway group ARN can be provided to only retrieve gateway summaries of gateways that are associated with that gateway group ARN.\n\n        :param self:\n        :param MaxResults:  The maximum number of gateway summaries to return. The default is 50.<br/>NextToken:  The token used to paginate though multiple pages of gateway summaries.<br/>GatewayGroupArn:  The gateway group ARN for which to list gateways.<br/>\n        :return: NextToken:  The token used to paginate though multiple pages of gateway summaries.<br/>Gateways:  The gateways in the list.<br/>        \"\"\"\n        pass\n\n    def list_skills(self, SkillGroupArn: str=None, EnablementType: str=None, SkillType: str=None, NextToken: str=None, MaxResults: int=None) -> ListSkillsResponse:\n        r\"\"\"Lists all enabled skills in a specific skill group.\n\n        :param self:\n        :param MaxResults:  The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.<br/>NextToken:  An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>.<br/>SkillType:  Whether the skill is publicly available or is a private skill.<br/>EnablementType:  Whether the skill is enabled under the user's account.<br/>SkillGroupArn:  The ARN of the skill group for which to list enabled skills.<br/>\n        :return: NextToken:  The token returned to indicate that there is more data available.<br/>SkillSummaries:  The list of enabled skills requested. Required.<br/>        \"\"\"\n        pass\n\n    def list_skills_store_categories(self, NextToken: str=None, MaxResults: int=None) -> ListSkillsStoreCategoriesResponse:\n        r\"\"\"Lists all categories in the Alexa skill store.\n\n        :param self:\n        :param MaxResults:  The maximum number of categories returned, per paginated calls.<br/>NextToken:  The tokens used for pagination.<br/>\n        :return: NextToken:  The tokens used for pagination.<br/>CategoryList:  The list of categories.<br/>        \"\"\"\n        pass\n\n    def list_skills_store_skills_by_category(self, CategoryId: CategoryId, NextToken: str=None, MaxResults: int=None) -> ListSkillsStoreSkillsByCategoryResponse:\n        r\"\"\"Lists all skills in the Alexa skill store by category.\n\n        :param self:\n        :param MaxResults:  The maximum number of skills returned per paginated calls.<br/>NextToken:  The tokens used for pagination.<br/>CategoryId:  The category ID for which the skills are being retrieved from the skill store.<br/>\n        :return: NextToken:  The tokens used for pagination.<br/>SkillsStoreSkills:  The skill store skills.<br/>        \"\"\"\n        pass\n\n    def list_smart_home_appliances(self, RoomArn: str, MaxResults: int=None, NextToken: str=None) -> ListSmartHomeAppliancesResponse:\n        r\"\"\"Lists all of the smart home appliances associated with a room.\n\n        :param self:\n        :param NextToken:  The tokens used for pagination.<br/>MaxResults:  The maximum number of appliances to be returned, per paginated calls.<br/>RoomArn:  The room that the appliances are associated with.<br/>\n        :return: NextToken:  The tokens used for pagination.<br/>SmartHomeAppliances:  The smart home appliances.<br/>        \"\"\"\n        pass\n\n    def list_tags(self, Arn: str, NextToken: str=None, MaxResults: int=None) -> ListTagsResponse:\n        r\"\"\"Lists all tags for the specified resource.\n\n        :param self:\n        :param MaxResults:  The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.<br/>NextToken:  An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>. <br/>Arn:  The ARN of the specified resource for which to list tags.<br/>\n        :return: NextToken:  The token returned to indicate that there is more data available.<br/>Tags:  The tags requested for the specified resource.<br/>        \"\"\"\n        pass\n\n    def put_conference_preference(self, ConferencePreference: ConferencePreference) -> PutConferencePreferenceResponse:\n        r\"\"\"Sets the conference preferences on a specific conference provider at the account level.\n\n        :param self:\n        :param ConferencePreference:  The conference preference of a specific conference provider.:<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>DefaultConferenceProviderArn</i> The ARN of the default conference provider.<br/>\n        :return:         \"\"\"\n        pass\n\n    def put_invitation_configuration(self, OrganizationName: str, ContactEmail: str=None, PrivateSkillIds: List[SkillId]=None) -> PutInvitationConfigurationResponse:\n        r\"\"\"Configures the email template for the user enrollment invitation with the specified attributes.\n\n        :param self:\n        :param PrivateSkillIds:  The list of private skill IDs that you want to recommend to the user to enable in the invitation.<br/>ContactEmail:  The email ID of the organization or individual contact that the enrolled user can use. <br/>OrganizationName:  The name of the organization sending the enrollment invite to a user.<br/>\n        :return:         \"\"\"\n        pass\n\n    def put_room_skill_parameter(self, RoomSkillParameter: RoomSkillParameter, SkillId: str, RoomArn: str=None) -> PutRoomSkillParameterResponse:\n        r\"\"\"Updates room skill parameter details by room, skill, and parameter key ID. Not all skills have a room skill parameter.\n\n        :param self:\n        :param RoomSkillParameter:  The updated room skill parameter. Required.:<br/>SkillId:  The ARN of the skill associated with the room skill parameter. Required.<br/>RoomArn:  The ARN of the room associated with the room skill parameter. Required.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>ParameterValue</i> The parameter value of a room skill parameter.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>ParameterKey</i> The parameter key of a room skill parameter. ParameterKey is an enumerated type that only takes \u201cDEFAULT\u201d or \u201cSCOPE\u201d as valid values.<br/>\n        :return:         \"\"\"\n        pass\n\n    def put_skill_authorization(self, SkillId: str, AuthorizationResult: AuthorizationResult, RoomArn: str=None) -> PutSkillAuthorizationResponse:\n        r\"\"\"Links a user's account to a third-party skill provider. If this API operation is called by an assumed IAM role, the skill being linked must be a private skill. Also, the skill must be owned by the AWS account that assumed the IAM role.\n\n        :param self:\n        :param RoomArn:  The room that the skill is authorized for.<br/>SkillId:  The unique identifier of a skill.<br/>AuthorizationResult:  The authorization result specific to OAUTH code grant output. \"Code\u201d must be populated in the AuthorizationResult map to establish the authorization.<br/>\n        :return:         \"\"\"\n        pass\n\n    def register_avs_device(self, AmazonId: str, DeviceSerialNumber: str, ProductId: str, UserCode: str, ClientId: str) -> RegisterAVSDeviceResponse:\n        r\"\"\"Registers an Alexa-enabled device built by an Original Equipment Manufacturer (OEM) using Alexa Voice Service (AVS).\n\n        :param self:\n        :param AmazonId:  The device type ID for your AVS device generated by Amazon when the OEM creates a new product on Amazon's Developer Console.<br/>DeviceSerialNumber:  The key generated by the OEM that uniquely identifies a specified instance of your AVS device.<br/>ProductId:  The product ID used to identify your AVS device during authorization.<br/>UserCode:  The code that is obtained after your AVS device has made a POST request to LWA as a part of the Device Authorization Request component of the OAuth code-based linking specification.<br/>ClientId:  The client ID of the OEM used for code-based linking authorization on an AVS device.<br/>\n        :return: DeviceArn:  The ARN of the device.<br/>        \"\"\"\n        pass\n\n    def reject_skill(self, SkillId: str) -> RejectSkillResponse:\n        r\"\"\"Disassociates a skill from the organization under a user's AWS account. If the skill is a private skill, it moves to an AcceptStatus of PENDING. Any private or public skill that is rejected can be added later by calling the ApproveSkill API. \n\n        :param self:\n        :param SkillId:  The unique identifier of the skill.<br/>\n        :return:         \"\"\"\n        pass\n\n    def resolve_room(self, SkillId: str, UserId: str) -> ResolveRoomResponse:\n        r\"\"\"Determines the details for the room from which a skill request was invoked. This operation is used by skill developers.\n\n        :param self:\n        :param SkillId:  The ARN of the skill that was requested. Required.<br/>UserId:  The ARN of the user. Required.<br/>\n        :return: RoomSkillParameters:  Response to get the room profile request. Required.<br/>RoomName:  The name of the room from which the skill request was invoked.<br/>RoomArn:  The ARN of the room from which the skill request was invoked.<br/>        \"\"\"\n        pass\n\n    def revoke_invitation(self, UserArn: str=None, EnrollmentId: str=None) -> RevokeInvitationResponse:\n        r\"\"\"Revokes an invitation and invalidates the enrollment URL.\n\n        :param self:\n        :param EnrollmentId:  The ARN of the enrollment invitation to revoke. Required.<br/>UserArn:  The ARN of the user for whom to revoke an enrollment invitation. Required.<br/>\n        :return:         \"\"\"\n        pass\n\n    def search_address_books(self, Filters: List[Filter]=None, SortCriteria: List[Sort]=None, NextToken: str=None, MaxResults: int=None) -> SearchAddressBooksResponse:\n        r\"\"\"Searches address books and lists the ones that meet a set of filter and sort criteria.\n\n        :param self:\n        :param MaxResults:  The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.<br/>NextToken:  An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response only includes results beyond the token, up to the value specified by MaxResults.<br/>SortCriteria:  The sort order to use in listing the specified set of address books. The supported sort key is AddressBookName.<br/>Filters:  The filters to use to list a specified set of address books. The supported filter key is AddressBookName.<br/>\n        :return: TotalCount:  The total number of address books returned.<br/>NextToken:  The token returned to indicate that there is more data available.<br/>AddressBooks:  The address books that meet the specified set of filter criteria, in sort order.<br/>        \"\"\"\n        pass\n\n    def search_contacts(self, Filters: List[Filter]=None, SortCriteria: List[Sort]=None, NextToken: str=None, MaxResults: int=None) -> SearchContactsResponse:\n        r\"\"\"Searches contacts and lists the ones that meet a set of filter and sort criteria.\n\n        :param self:\n        :param MaxResults:  The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.<br/>NextToken:  An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response only includes results beyond the token, up to the value specified by MaxResults.<br/>SortCriteria:  The sort order to use in listing the specified set of contacts. The supported sort keys are DisplayName, FirstName, and LastName.<br/>Filters:  The filters to use to list a specified set of address books. The supported filter keys are DisplayName, FirstName, LastName, and AddressBookArns.<br/>\n        :return: TotalCount:  The total number of contacts returned.<br/>NextToken:  The token returned to indicate that there is more data available.<br/>Contacts:  The contacts that meet the specified set of filter criteria, in sort order.<br/>        \"\"\"\n        pass\n\n    def search_devices(self, NextToken: str=None, MaxResults: int=None, Filters: List[Filter]=None, SortCriteria: List[Sort]=None) -> SearchDevicesResponse:\n        r\"\"\"Searches devices and lists the ones that meet a set of filter criteria.\n\n        :param self:\n        :param SortCriteria:  The sort order to use in listing the specified set of devices. Supported sort keys are DeviceName, DeviceStatus, RoomName, DeviceType, DeviceSerialNumber, ConnectionStatus, NetworkProfileName, NetworkProfileArn, Feature, and FailureCode.<br/>Filters:  The filters to use to list a specified set of devices. Supported filter keys are DeviceName, DeviceStatus, DeviceStatusDetailCode, RoomName, DeviceType, DeviceSerialNumber, UnassociatedOnly, ConnectionStatus (ONLINE and OFFLINE), NetworkProfileName, NetworkProfileArn, Feature, and FailureCode.<br/>MaxResults:  The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.<br/>NextToken:  An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>.<br/>\n        :return: TotalCount:  The total number of devices returned.<br/>NextToken:  The token returned to indicate that there is more data available.<br/>Devices:  The devices that meet the specified set of filter criteria, in sort order.<br/>        \"\"\"\n        pass\n\n    def search_network_profiles(self, NextToken: str=None, MaxResults: int=None, Filters: List[Filter]=None, SortCriteria: List[Sort]=None) -> SearchNetworkProfilesResponse:\n        r\"\"\"Searches network profiles and lists the ones that meet a set of filter and sort criteria.\n\n        :param self:\n        :param SortCriteria:  The sort order to use to list the specified set of network profiles. Valid sort criteria includes NetworkProfileName, Ssid, and SecurityType.<br/>Filters:  The filters to use to list a specified set of network profiles. Valid filters are NetworkProfileName, Ssid, and SecurityType.<br/>MaxResults:  The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved. <br/>NextToken:  An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults. <br/>\n        :return: TotalCount:  The total number of network profiles returned.<br/>NextToken:  An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.<br/>NetworkProfiles:  The network profiles that meet the specified set of filter criteria, in sort order. It is a list of NetworkProfileData objects. <br/>        \"\"\"\n        pass\n\n    def search_profiles(self, NextToken: str=None, MaxResults: int=None, Filters: List[Filter]=None, SortCriteria: List[Sort]=None) -> SearchProfilesResponse:\n        r\"\"\"Searches room profiles and lists the ones that meet a set of filter criteria.\n\n        :param self:\n        :param SortCriteria:  The sort order to use in listing the specified set of room profiles. Supported sort keys are ProfileName and Address.<br/>Filters:  The filters to use to list a specified set of room profiles. Supported filter keys are ProfileName and Address. Required. <br/>MaxResults:  The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.<br/>NextToken:  An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>.<br/>\n        :return: TotalCount:  The total number of room profiles returned.<br/>NextToken:  The token returned to indicate that there is more data available.<br/>Profiles:  The profiles that meet the specified set of filter criteria, in sort order.<br/>        \"\"\"\n        pass\n\n    def search_rooms(self, NextToken: str=None, MaxResults: int=None, Filters: List[Filter]=None, SortCriteria: List[Sort]=None) -> SearchRoomsResponse:\n        r\"\"\"Searches rooms and lists the ones that meet a set of filter and sort criteria.\n\n        :param self:\n        :param SortCriteria:  The sort order to use in listing the specified set of rooms. The supported sort keys are RoomName and ProfileName.<br/>Filters:  The filters to use to list a specified set of rooms. The supported filter keys are RoomName and ProfileName.<br/>MaxResults:  The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved. <br/>NextToken:  An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>.<br/>\n        :return: TotalCount:  The total number of rooms returned.<br/>NextToken:  The token returned to indicate that there is more data available.<br/>Rooms:  The rooms that meet the specified set of filter criteria, in sort order.<br/>        \"\"\"\n        pass\n\n    def search_skill_groups(self, NextToken: str=None, MaxResults: int=None, Filters: List[Filter]=None, SortCriteria: List[Sort]=None) -> SearchSkillGroupsResponse:\n        r\"\"\"Searches skill groups and lists the ones that meet a set of filter and sort criteria.\n\n        :param self:\n        :param SortCriteria:  The sort order to use in listing the specified set of skill groups. The supported sort key is SkillGroupName. <br/>Filters:  The filters to use to list a specified set of skill groups. The supported filter key is SkillGroupName. <br/>MaxResults:  The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved. <br/>NextToken:  An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>. Required.<br/>\n        :return: TotalCount:  The total number of skill groups returned.<br/>NextToken:  The token returned to indicate that there is more data available.<br/>SkillGroups:  The skill groups that meet the filter criteria, in sort order.<br/>        \"\"\"\n        pass\n\n    def search_users(self, NextToken: str=None, MaxResults: int=None, Filters: List[Filter]=None, SortCriteria: List[Sort]=None) -> SearchUsersResponse:\n        r\"\"\"Searches users and lists the ones that meet a set of filter and sort criteria.\n\n        :param self:\n        :param SortCriteria:  The sort order to use in listing the filtered set of users. Required. Supported sort keys are UserId, FirstName, LastName, Email, and EnrollmentStatus.<br/>Filters:  The filters to use for listing a specific set of users. Required. Supported filter keys are UserId, FirstName, LastName, Email, and EnrollmentStatus.<br/>MaxResults:  The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved. Required.<br/>NextToken:  An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>. Required.<br/>\n        :return: TotalCount:  The total number of users returned.<br/>NextToken:  The token returned to indicate that there is more data available.<br/>Users:  The users that meet the specified set of filter criteria, in sort order.<br/>        \"\"\"\n        pass\n\n    def send_announcement(self, ClientRequestToken: str, Content: Content, RoomFilters: List[Filter], TimeToLiveInSeconds: int=None) -> SendAnnouncementResponse:\n        r\"\"\"Triggers an asynchronous flow to send text, SSML, or audio announcements to rooms that are identified by a search or filter. \n\n        :param self:\n        :param ClientRequestToken:  The unique, user-specified identifier for the request that ensures idempotency.<br/>TimeToLiveInSeconds:  The time to live for an announcement. Default is 300. If delivery doesn't occur within this time, the announcement is not delivered.<br/>Content:  The announcement content. This can contain only one of the three possible announcement types (text, SSML or audio).:<br/>RoomFilters:  The filters to use to send an announcement to a specified list of rooms. The supported filter keys are RoomName, ProfileName, RoomArn, and ProfileArn. To send to all rooms, specify an empty RoomFilters list.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>AudioList</i> The list of audio messages.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>SsmlList</i> The list of SSML messages.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>TextList</i> The list of text messages.<br/>\n        :return: AnnouncementArn:  The identifier of the announcement.<br/>        \"\"\"\n        pass\n\n    def send_invitation(self, UserArn: str=None) -> SendInvitationResponse:\n        r\"\"\"Sends an enrollment invitation email with a URL to a user. The URL is valid for 30 days or until you call this operation again, whichever comes first. \n\n        :param self:\n        :param UserArn:  The ARN of the user to whom to send an invitation. Required.<br/>\n        :return:         \"\"\"\n        pass\n\n    def start_device_sync(self, Features: List[Feature], RoomArn: str=None, DeviceArn: str=None) -> StartDeviceSyncResponse:\n        r\"\"\"Resets a device and its account to the known default settings. This clears all information and settings set by previous users in the following ways: <ul> <li> Bluetooth - This unpairs all bluetooth devices paired with your echo device. </li> <li> Volume - This resets the echo device's volume to the default value. </li> <li> Notifications - This clears all notifications from your echo device. </li> <li> Lists - This clears all to-do items from your echo device. </li> <li> Settings - This internally syncs the room's profile (if the device is assigned to a room), contacts, address books, delegation access for account linking, and communications (if enabled on the room profile). </li> </ul>\n\n        :param self:\n        :param Features:  Request structure to start the device sync. Required.<br/>DeviceArn:  The ARN of the device to sync. Required.<br/>RoomArn:  The ARN of the room with which the device to sync is associated. Required.<br/>\n        :return:         \"\"\"\n        pass\n\n    def start_smart_home_appliance_discovery(self, RoomArn: str) -> StartSmartHomeApplianceDiscoveryResponse:\n        r\"\"\"Initiates the discovery of any smart home appliances associated with the room.\n\n        :param self:\n        :param RoomArn:  The room where smart home appliance discovery was initiated.<br/>\n        :return:         \"\"\"\n        pass\n\n    def tag_resource(self, Tags: List[Tag], Arn: str) -> TagResourceResponse:\n        r\"\"\"Adds metadata tags to a specified resource.\n\n        :param self:\n        :param Tags:  The tags to be added to the specified resource. Do not provide system tags. Required. <br/>Arn:  The ARN of the resource to which to add metadata tags. Required. <br/>\n        :return:         \"\"\"\n        pass\n\n    def untag_resource(self, TagKeys: List[TagKey], Arn: str) -> UntagResourceResponse:\n        r\"\"\"Removes metadata tags from a specified resource.\n\n        :param self:\n        :param TagKeys:  The tags to be removed from the specified resource. Do not provide system tags. Required. <br/>Arn:  The ARN of the resource from which to remove metadata tags. Required. <br/>\n        :return:         \"\"\"\n        pass\n\n    def update_address_book(self, AddressBookArn: str, Name: str=None, Description: str=None) -> UpdateAddressBookResponse:\n        r\"\"\"Updates address book details by the address book ARN.\n\n        :param self:\n        :param Description:  The updated description of the room.<br/>Name:  The updated name of the room.<br/>AddressBookArn:  The ARN of the room to update.<br/>\n        :return:         \"\"\"\n        pass\n\n    def update_business_report_schedule(self, ScheduleArn: str, S3BucketName: str=None, S3KeyPrefix: str=None, Format: str=None, ScheduleName: str=None, Recurrence: BusinessReportRecurrence=None) -> UpdateBusinessReportScheduleResponse:\n        r\"\"\"Updates the configuration of the report delivery schedule with the specified schedule ARN.\n\n        :param self:\n        :param Recurrence:  The recurrence of the reports.:<br/>ScheduleName:  The name identifier of the schedule.<br/>Format:  The format of the generated report (individual CSV files or zipped files of individual files).<br/>S3KeyPrefix:  The S3 key where the report is delivered.<br/>S3BucketName:  The S3 location of the output reports.<br/>ScheduleArn:  The ARN of the business report schedule.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>StartDate</i> The start date.<br/>\n        :return:         \"\"\"\n        pass\n\n    def update_conference_provider(self, MeetingSetting: MeetingSetting, ConferenceProviderType: str, ConferenceProviderArn: str, IPDialIn: IPDialIn=None, PSTNDialIn: PSTNDialIn=None) -> UpdateConferenceProviderResponse:\n        r\"\"\"Updates an existing conference provider's settings.\n\n        :param self:\n        :param MeetingSetting:  The meeting settings for the conference provider.:<br/>PSTNDialIn:  The information for PSTN conferencing.:<br/>IPDialIn:  The IP endpoint and protocol for calling.:<br/>ConferenceProviderType:  The type of the conference provider.<br/>ConferenceProviderArn:  The ARN of the conference provider.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>CommsProtocol</i> The protocol, including SIP, SIPS, and H323.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>Endpoint</i> The IP address.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>OneClickPinDelay</i> The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>OneClickIdDelay</i> The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>PhoneNumber</i> The phone number to call to join the conference.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>CountryCode</i> The zip code.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>RequirePin</i> The values that indicate whether the pin is always required.<br/>\n        :return:         \"\"\"\n        pass\n\n    def update_contact(self, ContactArn: str, DisplayName: str=None, FirstName: str=None, LastName: str=None, PhoneNumber: str=None, PhoneNumbers: List[PhoneNumber]=None, SipAddresses: List[SipAddress]=None) -> UpdateContactResponse:\n        r\"\"\"Updates the contact details by the contact ARN.\n\n        :param self:\n        :param SipAddresses:  The list of SIP addresses for the contact.<br/>PhoneNumbers:  The list of phone numbers for the contact.<br/>PhoneNumber:  The updated phone number of the contact. The phone number type defaults to WORK. You can either specify PhoneNumber or PhoneNumbers. We recommend that you use PhoneNumbers, which lets you specify the phone number type and multiple numbers.<br/>LastName:  The updated last name of the contact.<br/>FirstName:  The updated first name of the contact.<br/>DisplayName:  The updated display name of the contact.<br/>ContactArn:  The ARN of the contact to update.<br/>\n        :return:         \"\"\"\n        pass\n\n    def update_device(self, DeviceArn: str=None, DeviceName: str=None) -> UpdateDeviceResponse:\n        r\"\"\"Updates the device name by device ARN.\n\n        :param self:\n        :param DeviceName:  The updated device name. Required.<br/>DeviceArn:  The ARN of the device to update. Required.<br/>\n        :return:         \"\"\"\n        pass\n\n    def update_gateway(self, GatewayArn: str, Name: str=None, Description: str=None, SoftwareVersion: str=None) -> UpdateGatewayResponse:\n        r\"\"\"Updates the details of a gateway. If any optional field is not provided, the existing corresponding value is left unmodified.\n\n        :param self:\n        :param SoftwareVersion:  The updated software version of the gateway. The gateway automatically updates its software version during normal operation.<br/>Description:  The updated description of the gateway.<br/>Name:  The updated name of the gateway.<br/>GatewayArn:  The ARN of the gateway to update.<br/>\n        :return:         \"\"\"\n        pass\n\n    def update_gateway_group(self, GatewayGroupArn: str, Name: str=None, Description: str=None) -> UpdateGatewayGroupResponse:\n        r\"\"\"Updates the details of a gateway group. If any optional field is not provided, the existing corresponding value is left unmodified.\n\n        :param self:\n        :param Description:  The updated description of the gateway group.<br/>Name:  The updated name of the gateway group.<br/>GatewayGroupArn:  The ARN of the gateway group to update.<br/>\n        :return:         \"\"\"\n        pass\n\n    def update_network_profile(self, NetworkProfileArn: str, NetworkProfileName: str=None, Description: str=None, CurrentPassword: str=None, NextPassword: str=None, CertificateAuthorityArn: str=None, TrustAnchors: List[TrustAnchor]=None) -> UpdateNetworkProfileResponse:\n        r\"\"\"Updates a network profile by the network profile ARN.\n\n        :param self:\n        :param TrustAnchors:  The root certificate(s) of your authentication server that will be installed on your devices and used to trust your authentication server during EAP negotiation. <br/>CertificateAuthorityArn:  The ARN of the Private Certificate Authority (PCA) created in AWS Certificate Manager (ACM). This is used to issue certificates to the devices. <br/>NextPassword:  The next, or subsequent, password of the Wi-Fi network. This password is asynchronously transmitted to the device and is used when the password of the network changes to NextPassword. <br/>CurrentPassword:  The current password of the Wi-Fi network.<br/>Description:  Detailed information about a device's network profile.<br/>NetworkProfileName:  The name of the network profile associated with a device.<br/>NetworkProfileArn:  The ARN of the network profile associated with a device.<br/>\n        :return:         \"\"\"\n        pass\n\n    def update_profile(self, ProfileArn: str=None, ProfileName: str=None, IsDefault: Boolean=None, Timezone: str=None, Address: str=None, DistanceUnit: str=None, TemperatureUnit: str=None, WakeWord: str=None, Locale: str=None, SetupModeDisabled: Boolean=None, MaxVolumeLimit: int=None, PSTNEnabled: Boolean=None, MeetingRoomConfiguration: UpdateMeetingRoomConfiguration=None) -> UpdateProfileResponse:\n        r\"\"\"Updates an existing room profile by room profile ARN.\n\n        :param self:\n        :param MeetingRoomConfiguration:  The updated meeting room settings of a room profile.:<br/>PSTNEnabled:  Whether the PSTN setting of the room profile is enabled.<br/>MaxVolumeLimit:  The updated maximum volume limit for the room profile.<br/>SetupModeDisabled:  Whether the setup mode of the profile is enabled.<br/>Locale:  The updated locale for the room profile. (This is currently only available to a limited preview audience.)<br/>WakeWord:  The updated wake word for the room profile.<br/>TemperatureUnit:  The updated temperature unit for the room profile.<br/>DistanceUnit:  The updated distance unit for the room profile.<br/>Address:  The updated address for the room profile.<br/>Timezone:  The updated timezone for the room profile.<br/>IsDefault:  Sets the profile as default if selected. If this is missing, no update is done to the default status.<br/>ProfileName:  The updated name for the room profile.<br/>ProfileArn:  The ARN of the room profile to update. Required.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>RequireCheckIn</i> Settings for requiring a check in when a room is reserved. Alexa can cancel a room reservation if it's not checked into to make the room available for others. Users can check in by joining the meeting with Alexa or an AVS device, or by saying \u201cAlexa, check in.\u201d &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>RequireCheckIn</b>: Settings for requiring a check in when a room is reserved. Alexa can cancel a room reservation if it's not checked into to make the room available for others. Users can check in by joining the meeting with Alexa or an AVS device, or by saying \u201cAlexa, check in.\u201d <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>InstantBooking</i> Settings to automatically book an available room available for a configured duration when joining a meeting with Alexa.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>InstantBooking</b>: Settings to automatically book an available room available for a configured duration when joining a meeting with Alexa.<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>EndOfMeetingReminder</i> Settings for the end of meeting reminder feature that are applied to a room profile. The end of meeting reminder enables Alexa to remind users when a meeting is ending. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>EndOfMeetingReminder</b>: Settings for the end of meeting reminder feature that are applied to a room profile. The end of meeting reminder enables Alexa to remind users when a meeting is ending. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>RoomUtilizationMetricsEnabled</i> Whether room utilization metrics are enabled or not.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>Enabled</i> Whether an end of meeting reminder is enabled or not.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>ReminderType</i> The type of sound that users hear during the end of meeting reminder. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>ReminderAtMinutes</i> Updates settings for the end of meeting reminder feature that are applied to a room profile. The end of meeting reminder enables Alexa to remind users when a meeting is ending. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>Enabled</i> Whether instant booking is enabled or not.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>DurationInMinutes</i> Duration between 15 and 240 minutes at increments of 15 that determines how long to book an available room when a meeting is started with Alexa.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>Enabled</i> Whether require check in is enabled or not.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>ReleaseAfterMinutes</i> Duration between 5 and 20 minutes to determine when to release the room if it's not checked into. <br/>\n        :return:         \"\"\"\n        pass\n\n    def update_room(self, RoomArn: str=None, RoomName: str=None, Description: str=None, ProviderCalendarId: str=None, ProfileArn: str=None) -> UpdateRoomResponse:\n        r\"\"\"Updates room details by room ARN.\n\n        :param self:\n        :param ProfileArn:  The updated profile ARN for the room.<br/>ProviderCalendarId:  The updated provider calendar ARN for the room.<br/>Description:  The updated description for the room.<br/>RoomName:  The updated name for the room.<br/>RoomArn:  The ARN of the room to update. <br/>\n        :return:         \"\"\"\n        pass\n\n    def update_skill_group(self, SkillGroupArn: str=None, SkillGroupName: str=None, Description: str=None) -> UpdateSkillGroupResponse:\n        r\"\"\"Updates skill group details by skill group ARN.\n\n        :param self:\n        :param Description:  The updated description for the skill group.<br/>SkillGroupName:  The updated name for the skill group.<br/>SkillGroupArn:  The ARN of the skill group to update. <br/>\n        :return:         \"\"\"\n        pass\n\n\n"
    },
    {
      "args": {
        "py/tuple": [
          "amplify"
        ]
      },
      "kwargs": {},
      "return_value": "class Amplify(BaseClient):\n    r\"\"\" Amplify is a fully managed continuous deployment and hosting service for modern web apps. \"\"\"\n\n\n    class ListAppsPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `list_apps` for valid parameters\"\"\"\n            pass\n    class ListBranchesPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `list_branches` for valid parameters\"\"\"\n            pass\n    class ListDomainAssociationsPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `list_domain_associations` for valid parameters\"\"\"\n            pass\n    class ListJobsPaginator(Paginator):\n        def wait(self, **kwargs):\n            r\"\"\"see function `list_jobs` for valid parameters\"\"\"\n            pass\n\n\n    class CreateAppRequest(Mapping):\n        pass\n    \n    class CreateAppResult(Mapping):\n        pass\n    \n    class EnvironmentVariables(object):\n        pass\n    \n    class EnableBranchAutoBuild(object):\n        pass\n    \n    class EnableBasicAuth(object):\n        pass\n    \n    class CustomRule(Mapping):\n        pass\n    \n    class TagMap(object):\n        pass\n    \n    class EnableAutoBranchCreation(object):\n        pass\n    \n    class AutoBranchCreationPattern(object):\n        pass\n    \n    class AutoBranchCreationConfig(Mapping):\n        pass\n    \n    class CreateBackendEnvironmentRequest(Mapping):\n        pass\n    \n    class CreateBackendEnvironmentResult(Mapping):\n        pass\n    \n    class CreateBranchRequest(Mapping):\n        pass\n    \n    class CreateBranchResult(Mapping):\n        pass\n    \n    class EnableNotification(object):\n        pass\n    \n    class EnableAutoBuild(object):\n        pass\n    \n    class EnablePullRequestPreview(object):\n        pass\n    \n    class CreateDeploymentRequest(Mapping):\n        pass\n    \n    class CreateDeploymentResult(Mapping):\n        pass\n    \n    class FileMap(object):\n        pass\n    \n    class CreateDomainAssociationRequest(Mapping):\n        pass\n    \n    class CreateDomainAssociationResult(Mapping):\n        pass\n    \n    class EnableAutoSubDomain(object):\n        pass\n    \n    class SubDomainSetting(Mapping):\n        pass\n    \n    class CreateWebhookRequest(Mapping):\n        pass\n    \n    class CreateWebhookResult(Mapping):\n        pass\n    \n    class DeleteAppRequest(Mapping):\n        pass\n    \n    class DeleteAppResult(Mapping):\n        pass\n    \n    class DeleteBackendEnvironmentRequest(Mapping):\n        pass\n    \n    class DeleteBackendEnvironmentResult(Mapping):\n        pass\n    \n    class DeleteBranchRequest(Mapping):\n        pass\n    \n    class DeleteBranchResult(Mapping):\n        pass\n    \n    class DeleteDomainAssociationRequest(Mapping):\n        pass\n    \n    class DeleteDomainAssociationResult(Mapping):\n        pass\n    \n    class DeleteJobRequest(Mapping):\n        pass\n    \n    class DeleteJobResult(Mapping):\n        pass\n    \n    class DeleteWebhookRequest(Mapping):\n        pass\n    \n    class DeleteWebhookResult(Mapping):\n        pass\n    \n    class GenerateAccessLogsRequest(Mapping):\n        pass\n    \n    class GenerateAccessLogsResult(Mapping):\n        pass\n    \n    class StartTime(object):\n        pass\n    \n    class EndTime(object):\n        pass\n    \n    class GetAppRequest(Mapping):\n        pass\n    \n    class GetAppResult(Mapping):\n        pass\n    \n    class GetArtifactUrlRequest(Mapping):\n        pass\n    \n    class GetArtifactUrlResult(Mapping):\n        pass\n    \n    class GetBackendEnvironmentRequest(Mapping):\n        pass\n    \n    class GetBackendEnvironmentResult(Mapping):\n        pass\n    \n    class GetBranchRequest(Mapping):\n        pass\n    \n    class GetBranchResult(Mapping):\n        pass\n    \n    class GetDomainAssociationRequest(Mapping):\n        pass\n    \n    class GetDomainAssociationResult(Mapping):\n        pass\n    \n    class GetJobRequest(Mapping):\n        pass\n    \n    class GetJobResult(Mapping):\n        pass\n    \n    class GetWebhookRequest(Mapping):\n        pass\n    \n    class GetWebhookResult(Mapping):\n        pass\n    \n    class ListAppsRequest(Mapping):\n        pass\n    \n    class ListAppsResult(Mapping):\n        pass\n    \n    class ListArtifactsRequest(Mapping):\n        pass\n    \n    class ListArtifactsResult(Mapping):\n        pass\n    \n    class ListBackendEnvironmentsRequest(Mapping):\n        pass\n    \n    class ListBackendEnvironmentsResult(Mapping):\n        pass\n    \n    class ListBranchesRequest(Mapping):\n        pass\n    \n    class ListBranchesResult(Mapping):\n        pass\n    \n    class ListDomainAssociationsRequest(Mapping):\n        pass\n    \n    class ListDomainAssociationsResult(Mapping):\n        pass\n    \n    class ListJobsRequest(Mapping):\n        pass\n    \n    class ListJobsResult(Mapping):\n        pass\n    \n    class ListTagsForResourceRequest(Mapping):\n        pass\n    \n    class ListTagsForResourceResponse(Mapping):\n        pass\n    \n    class ListWebhooksRequest(Mapping):\n        pass\n    \n    class ListWebhooksResult(Mapping):\n        pass\n    \n    class StartDeploymentRequest(Mapping):\n        pass\n    \n    class StartDeploymentResult(Mapping):\n        pass\n    \n    class StartJobRequest(Mapping):\n        pass\n    \n    class StartJobResult(Mapping):\n        pass\n    \n    class CommitTime(object):\n        pass\n    \n    class StopJobRequest(Mapping):\n        pass\n    \n    class StopJobResult(Mapping):\n        pass\n    \n    class TagResourceRequest(Mapping):\n        pass\n    \n    class TagResourceResponse(Mapping):\n        pass\n    \n    class UntagResourceRequest(Mapping):\n        pass\n    \n    class UntagResourceResponse(Mapping):\n        pass\n    \n    class TagKey(object):\n        pass\n    \n    class UpdateAppRequest(Mapping):\n        pass\n    \n    class UpdateAppResult(Mapping):\n        pass\n    \n    class UpdateBranchRequest(Mapping):\n        pass\n    \n    class UpdateBranchResult(Mapping):\n        pass\n    \n    class UpdateDomainAssociationRequest(Mapping):\n        pass\n    \n    class UpdateDomainAssociationResult(Mapping):\n        pass\n    \n    class UpdateWebhookRequest(Mapping):\n        pass\n    \n    class UpdateWebhookResult(Mapping):\n        pass\n    \n    def create_app(self, name: str, description: str=None, repository: str=None, platform: str=None, iamServiceRoleArn: str=None, oauthToken: str=None, accessToken: str=None, environmentVariables: EnvironmentVariables=None, enableBranchAutoBuild: EnableBranchAutoBuild=None, enableBasicAuth: EnableBasicAuth=None, basicAuthCredentials: str=None, customRules: List[CustomRule]=None, tags: TagMap=None, buildSpec: str=None, enableAutoBranchCreation: EnableAutoBranchCreation=None, autoBranchCreationPatterns: List[AutoBranchCreationPattern]=None, autoBranchCreationConfig: AutoBranchCreationConfig=None) -> CreateAppResult:\n        r\"\"\" Creates a new Amplify App. \n\n        :param self:\n        :param autoBranchCreationConfig:   Automated branch creation config for the Amplify App. :<br/>autoBranchCreationPatterns:   Automated branch creation glob patterns for the Amplify App. <br/>enableAutoBranchCreation:   Enables automated branch creation for the Amplify App. <br/>buildSpec:   BuildSpec for an Amplify App <br/>tags:   Tag for an Amplify App <br/>customRules:   Custom rewrite / redirect rules for an Amplify App. <br/>basicAuthCredentials:   Credentials for Basic Authorization for an Amplify App. <br/>enableBasicAuth:   Enable Basic Authorization for an Amplify App, this will apply to all branches part of this App. <br/>enableBranchAutoBuild:   Enable the auto building of branches for an Amplify App. <br/>environmentVariables:   Environment variables map for an Amplify App. <br/>accessToken:   Personal Access token for 3rd party source control system for an Amplify App, used to create webhook and read-only deploy key. Token is not stored. <br/>oauthToken:   OAuth token for 3rd party source control system for an Amplify App, used to create webhook and read-only deploy key. OAuth token is not stored. <br/>iamServiceRoleArn:   AWS IAM service role for an Amplify App <br/>platform:   Platform / framework for an Amplify App <br/>repository:   Repository for an Amplify App <br/>description:   Description for an Amplify App <br/>name:   Name for the Amplify App <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>pullRequestEnvironmentName</i>  The Amplify Environment name for the pull request. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enablePullRequestPreview</i>  Enables Pull Request Preview for auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>buildSpec</i>  BuildSpec for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableBasicAuth</i>  Enables Basic Auth for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>basicAuthCredentials</i>  Basic Authorization credentials for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>environmentVariables</i>  Environment Variables for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableAutoBuild</i>  Enables auto building for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>framework</i>  Framework for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>stage</i>  Stage for the auto created branch. <br/>\n        :return: app:   Amplify App represents different branches of a repository for building, deploying, and hosting. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>autoBranchCreationConfig</i>  Automated branch creation config for the Amplify App. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>autoBranchCreationConfig</b>:  Automated branch creation config for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>autoBranchCreationPatterns</i>  Automated branch creation glob patterns for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableAutoBranchCreation</i>  Enables automated branch creation for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>buildSpec</i>  BuildSpec content for Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>productionBranch</i>  Structure with Production Branch information. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>productionBranch</b>:  Structure with Production Branch information. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>customRules</i>  Custom redirect / rewrite rules for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>basicAuthCredentials</i>  Basic Authorization credentials for branches for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableBasicAuth</i>  Enables Basic Authorization for branches for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableBranchAutoBuild</i>  Enables auto-building of branches for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>defaultDomain</i>  Default domain for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>environmentVariables</i>  Environment Variables for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>iamServiceRoleArn</i>  IAM service role ARN for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>updateTime</i>  Update date / time for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>createTime</i>  Create date / time for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>platform</i>  Platform for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>repository</i>  Repository for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>description</i>  Description for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>tags</i>  Tag for Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>name</i>  Name for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>appArn</i>  ARN for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>appId</i>  Unique Id for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>branchName</i>  Branch Name for Production Branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>thumbnailUrl</i>  Thumbnail URL for Production Branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>status</i>  Status of Production Branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>lastDeployTime</i>  Last Deploy Time of Production Branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>pullRequestEnvironmentName</i>  The Amplify Environment name for the pull request. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>enablePullRequestPreview</i>  Enables Pull Request Preview for auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>buildSpec</i>  BuildSpec for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>enableBasicAuth</i>  Enables Basic Auth for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>basicAuthCredentials</i>  Basic Authorization credentials for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>environmentVariables</i>  Environment Variables for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>enableAutoBuild</i>  Enables auto building for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>framework</i>  Framework for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>stage</i>  Stage for the auto created branch. <br/>        \"\"\"\n        pass\n\n    def create_backend_environment(self, environmentName: str, appId: str, stackName: str=None, deploymentArtifacts: str=None) -> CreateBackendEnvironmentResult:\n        r\"\"\" Creates a new backend environment for an Amplify App. \n\n        :param self:\n        :param deploymentArtifacts:   Name of deployment artifacts. <br/>stackName:   CloudFormation stack name of backend environment. <br/>environmentName:   Name for the backend environment. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: backendEnvironment:   Backend environment structure for an amplify App. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>updateTime</i>  Last updated date and time for a backend environment, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>createTime</i>  Creation date and time for a backend environment, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>deploymentArtifacts</i>  Name of deployment artifacts. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>stackName</i>  CloudFormation stack name of backend environment. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>environmentName</i>  Name for a backend environment, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>backendEnvironmentArn</i>  Arn for a backend environment, part of an Amplify App. <br/>        \"\"\"\n        pass\n\n    def create_branch(self, branchName: str, appId: str, description: str=None, stage: str=None, framework: str=None, enableNotification: EnableNotification=None, enableAutoBuild: EnableAutoBuild=None, environmentVariables: EnvironmentVariables=None, basicAuthCredentials: str=None, enableBasicAuth: EnableBasicAuth=None, tags: TagMap=None, buildSpec: str=None, ttl: str=None, displayName: str=None, enablePullRequestPreview: EnablePullRequestPreview=None, pullRequestEnvironmentName: str=None, backendEnvironmentArn: str=None) -> CreateBranchResult:\n        r\"\"\" Creates a new Branch for an Amplify App. \n\n        :param self:\n        :param backendEnvironmentArn:   ARN for a Backend Environment, part of an Amplify App. <br/>pullRequestEnvironmentName:   The Amplify Environment name for the pull request. <br/>enablePullRequestPreview:   Enables Pull Request Preview for this branch. <br/>displayName:   Display name for a branch, will use as the default domain prefix. <br/>ttl:   The content TTL for the website in seconds. <br/>buildSpec:   BuildSpec for the branch. <br/>tags:   Tag for the branch. <br/>enableBasicAuth:   Enables Basic Auth for the branch. <br/>basicAuthCredentials:   Basic Authorization credentials for the branch. <br/>environmentVariables:   Environment Variables for the branch. <br/>enableAutoBuild:   Enables auto building for the branch. <br/>enableNotification:   Enables notifications for the branch. <br/>framework:   Framework for the branch. <br/>stage:   Stage for the branch. <br/>description:   Description for the branch. <br/>branchName:   Name for the branch. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: branch:   Branch structure for an Amplify App. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>backendEnvironmentArn</i>  ARN for a Backend Environment, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>sourceBranch</i>  The source branch if the branch is a pull request branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>destinationBranch</i>  The destination branch if the branch is a pull request branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>pullRequestEnvironmentName</i>  The Amplify Environment name for the pull request. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enablePullRequestPreview</i>  Enables Pull Request Preview for this branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>associatedResources</i>  List of custom resources that are linked to this branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>ttl</i>  The content TTL for the website in seconds. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>buildSpec</i>  BuildSpec content for branch for Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>basicAuthCredentials</i>  Basic Authorization credentials for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>thumbnailUrl</i>  Thumbnail URL for the branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableBasicAuth</i>  Enables Basic Authorization for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>totalNumberOfJobs</i>  Total number of Jobs part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>activeJobId</i>  Id of the active job for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>framework</i>  Framework for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>customDomains</i>  Custom domains for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableAutoBuild</i>  Enables auto-building on push for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>environmentVariables</i>  Environment Variables specific to a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>updateTime</i>  Last updated date and time for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>createTime</i>  Creation date and time for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableNotification</i>  Enables notifications for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>displayName</i>  Display name for a branch, will use as the default domain prefix. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>stage</i>  Stage for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>tags</i>  Tag for branch for Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>description</i>  Description for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>branchName</i>  Name for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>branchArn</i>  ARN for a branch, part of an Amplify App. <br/>        \"\"\"\n        pass\n\n    def create_deployment(self, branchName: str, appId: str, fileMap: FileMap=None) -> CreateDeploymentResult:\n        r\"\"\" Create a deployment for manual deploy apps. (Apps are not connected to repository) \n\n        :param self:\n        :param fileMap:   Optional file map that contains file name as the key and file content md5 hash as the value. If this argument is provided, the service will generate different upload url per file. Otherwise, the service will only generate a single upload url for the zipped files. <br/>branchName:   Name for the branch, for the Job. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: zipUploadUrl:   When the fileMap argument is NOT provided. This zipUploadUrl will be returned. <br/>fileUploadUrls:   When the fileMap argument is provided in the request, the fileUploadUrls will contain a map of file names to upload url. <br/>jobId:   The jobId for this deployment, will supply to start deployment api. <br/>        \"\"\"\n        pass\n\n    def create_domain_association(self, subDomainSettings: List[SubDomainSetting], domainName: str, appId: str, enableAutoSubDomain: EnableAutoSubDomain=None) -> CreateDomainAssociationResult:\n        r\"\"\" Create a new DomainAssociation on an App \n\n        :param self:\n        :param subDomainSettings:   Setting structure for the Subdomain. <br/>enableAutoSubDomain:   Enables automated creation of Subdomains for branches. (Currently not supported) <br/>domainName:   Domain name for the Domain Association. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: domainAssociation:   Domain Association structure. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>subDomains</i>  Subdomains for the Domain Association. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>certificateVerificationDNSRecord</i>  DNS Record for certificate verification. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>statusReason</i>  Reason for the current status of the Domain Association. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>domainStatus</i>  Status fo the Domain Association. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableAutoSubDomain</i>  Enables automated creation of Subdomains for branches. (Currently not supported) <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>domainName</i>  Name of the domain. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>domainAssociationArn</i>  ARN for the Domain Association. <br/>        \"\"\"\n        pass\n\n    def create_webhook(self, branchName: str, appId: str, description: str=None) -> CreateWebhookResult:\n        r\"\"\" Create a new webhook on an App. \n\n        :param self:\n        :param description:   Description for a webhook. <br/>branchName:   Name for a branch, part of an Amplify App. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: webhook:   Webhook structure. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>updateTime</i>  Update date / time for a webhook. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>createTime</i>  Create date / time for a webhook. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>description</i>  Description for a webhook. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>branchName</i>  Name for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>webhookUrl</i>  Url of the webhook. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>webhookId</i>  Id of the webhook. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>webhookArn</i>  ARN for the webhook. <br/>        \"\"\"\n        pass\n\n    def delete_app(self, appId: str) -> DeleteAppResult:\n        r\"\"\" Delete an existing Amplify App by appId. \n\n        :param self:\n        :param appId:   Unique Id for an Amplify App. <br/>\n        :return: app:   Amplify App represents different branches of a repository for building, deploying, and hosting. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>autoBranchCreationConfig</i>  Automated branch creation config for the Amplify App. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>autoBranchCreationConfig</b>:  Automated branch creation config for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>autoBranchCreationPatterns</i>  Automated branch creation glob patterns for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableAutoBranchCreation</i>  Enables automated branch creation for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>buildSpec</i>  BuildSpec content for Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>productionBranch</i>  Structure with Production Branch information. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>productionBranch</b>:  Structure with Production Branch information. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>customRules</i>  Custom redirect / rewrite rules for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>basicAuthCredentials</i>  Basic Authorization credentials for branches for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableBasicAuth</i>  Enables Basic Authorization for branches for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableBranchAutoBuild</i>  Enables auto-building of branches for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>defaultDomain</i>  Default domain for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>environmentVariables</i>  Environment Variables for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>iamServiceRoleArn</i>  IAM service role ARN for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>updateTime</i>  Update date / time for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>createTime</i>  Create date / time for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>platform</i>  Platform for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>repository</i>  Repository for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>description</i>  Description for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>tags</i>  Tag for Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>name</i>  Name for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>appArn</i>  ARN for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>appId</i>  Unique Id for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>branchName</i>  Branch Name for Production Branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>thumbnailUrl</i>  Thumbnail URL for Production Branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>status</i>  Status of Production Branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>lastDeployTime</i>  Last Deploy Time of Production Branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>pullRequestEnvironmentName</i>  The Amplify Environment name for the pull request. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>enablePullRequestPreview</i>  Enables Pull Request Preview for auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>buildSpec</i>  BuildSpec for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>enableBasicAuth</i>  Enables Basic Auth for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>basicAuthCredentials</i>  Basic Authorization credentials for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>environmentVariables</i>  Environment Variables for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>enableAutoBuild</i>  Enables auto building for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>framework</i>  Framework for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>stage</i>  Stage for the auto created branch. <br/>        \"\"\"\n        pass\n\n    def delete_backend_environment(self, environmentName: str, appId: str) -> DeleteBackendEnvironmentResult:\n        r\"\"\" Delete backend environment for an Amplify App. \n\n        :param self:\n        :param environmentName:   Name of a backend environment of an Amplify App. <br/>appId:   Unique Id of an Amplify App. <br/>\n        :return: backendEnvironment:   Backend environment structure for an Amplify App. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>updateTime</i>  Last updated date and time for a backend environment, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>createTime</i>  Creation date and time for a backend environment, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>deploymentArtifacts</i>  Name of deployment artifacts. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>stackName</i>  CloudFormation stack name of backend environment. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>environmentName</i>  Name for a backend environment, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>backendEnvironmentArn</i>  Arn for a backend environment, part of an Amplify App. <br/>        \"\"\"\n        pass\n\n    def delete_branch(self, branchName: str, appId: str) -> DeleteBranchResult:\n        r\"\"\" Deletes a branch for an Amplify App. \n\n        :param self:\n        :param branchName:   Name for the branch. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: branch:   Branch structure for an Amplify App. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>backendEnvironmentArn</i>  ARN for a Backend Environment, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>sourceBranch</i>  The source branch if the branch is a pull request branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>destinationBranch</i>  The destination branch if the branch is a pull request branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>pullRequestEnvironmentName</i>  The Amplify Environment name for the pull request. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enablePullRequestPreview</i>  Enables Pull Request Preview for this branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>associatedResources</i>  List of custom resources that are linked to this branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>ttl</i>  The content TTL for the website in seconds. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>buildSpec</i>  BuildSpec content for branch for Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>basicAuthCredentials</i>  Basic Authorization credentials for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>thumbnailUrl</i>  Thumbnail URL for the branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableBasicAuth</i>  Enables Basic Authorization for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>totalNumberOfJobs</i>  Total number of Jobs part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>activeJobId</i>  Id of the active job for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>framework</i>  Framework for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>customDomains</i>  Custom domains for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableAutoBuild</i>  Enables auto-building on push for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>environmentVariables</i>  Environment Variables specific to a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>updateTime</i>  Last updated date and time for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>createTime</i>  Creation date and time for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableNotification</i>  Enables notifications for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>displayName</i>  Display name for a branch, will use as the default domain prefix. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>stage</i>  Stage for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>tags</i>  Tag for branch for Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>description</i>  Description for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>branchName</i>  Name for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>branchArn</i>  ARN for a branch, part of an Amplify App. <br/>        \"\"\"\n        pass\n\n    def delete_domain_association(self, domainName: str, appId: str) -> DeleteDomainAssociationResult:\n        r\"\"\" Deletes a DomainAssociation. \n\n        :param self:\n        :param domainName:   Name of the domain. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: domainAssociation:   Structure for Domain Association, which associates a custom domain with an Amplify App. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>subDomains</i>  Subdomains for the Domain Association. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>certificateVerificationDNSRecord</i>  DNS Record for certificate verification. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>statusReason</i>  Reason for the current status of the Domain Association. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>domainStatus</i>  Status fo the Domain Association. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableAutoSubDomain</i>  Enables automated creation of Subdomains for branches. (Currently not supported) <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>domainName</i>  Name of the domain. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>domainAssociationArn</i>  ARN for the Domain Association. <br/>        \"\"\"\n        pass\n\n    def delete_job(self, jobId: str, branchName: str, appId: str) -> DeleteJobResult:\n        r\"\"\" Delete a job, for an Amplify branch, part of Amplify App. \n\n        :param self:\n        :param jobId:   Unique Id for the Job. <br/>branchName:   Name for the branch, for the Job. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: jobSummary:   Structure for the summary of a Job. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>jobType</i>  Type for the Job. \\n \"RELEASE\": Manually released from source by using StartJob API. \"RETRY\": Manually retried by using StartJob API. \"WEB_HOOK\": Automatically triggered by WebHooks. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>endTime</i>  End date / time for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>status</i>  Status for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>startTime</i>  Start date / time for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>commitTime</i>  Commit date / time for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>commitMessage</i>  Commit message from 3rd party repository provider for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>commitId</i>  Commit Id from 3rd party repository provider for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>jobId</i>  Unique Id for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>jobArn</i>  Arn for the Job. <br/>        \"\"\"\n        pass\n\n    def delete_webhook(self, webhookId: str) -> DeleteWebhookResult:\n        r\"\"\" Deletes a webhook. \n\n        :param self:\n        :param webhookId:   Unique Id for a webhook. <br/>\n        :return: webhook:   Webhook structure. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>updateTime</i>  Update date / time for a webhook. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>createTime</i>  Create date / time for a webhook. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>description</i>  Description for a webhook. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>branchName</i>  Name for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>webhookUrl</i>  Url of the webhook. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>webhookId</i>  Id of the webhook. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>webhookArn</i>  ARN for the webhook. <br/>        \"\"\"\n        pass\n\n    def generate_access_logs(self, appId: str, domainName: str, startTime: StartTime=None, endTime: EndTime=None) -> GenerateAccessLogsResult:\n        r\"\"\" Retrieve website access logs for a specific time range via a pre-signed URL. \n\n        :param self:\n        :param appId:   Unique Id for an Amplify App. <br/>domainName:   Name of the domain. <br/>endTime:   The time at which the logs should end, inclusive. <br/>startTime:   The time at which the logs should start, inclusive. <br/>\n        :return: logUrl:   Pre-signed URL for the requested access logs. <br/>        \"\"\"\n        pass\n\n    def get_app(self, appId: str) -> GetAppResult:\n        r\"\"\" Retrieves an existing Amplify App by appId. \n\n        :param self:\n        :param appId:   Unique Id for an Amplify App. <br/>\n        :return: app:   Amplify App represents different branches of a repository for building, deploying, and hosting. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>autoBranchCreationConfig</i>  Automated branch creation config for the Amplify App. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>autoBranchCreationConfig</b>:  Automated branch creation config for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>autoBranchCreationPatterns</i>  Automated branch creation glob patterns for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableAutoBranchCreation</i>  Enables automated branch creation for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>buildSpec</i>  BuildSpec content for Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>productionBranch</i>  Structure with Production Branch information. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>productionBranch</b>:  Structure with Production Branch information. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>customRules</i>  Custom redirect / rewrite rules for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>basicAuthCredentials</i>  Basic Authorization credentials for branches for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableBasicAuth</i>  Enables Basic Authorization for branches for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableBranchAutoBuild</i>  Enables auto-building of branches for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>defaultDomain</i>  Default domain for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>environmentVariables</i>  Environment Variables for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>iamServiceRoleArn</i>  IAM service role ARN for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>updateTime</i>  Update date / time for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>createTime</i>  Create date / time for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>platform</i>  Platform for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>repository</i>  Repository for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>description</i>  Description for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>tags</i>  Tag for Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>name</i>  Name for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>appArn</i>  ARN for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>appId</i>  Unique Id for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>branchName</i>  Branch Name for Production Branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>thumbnailUrl</i>  Thumbnail URL for Production Branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>status</i>  Status of Production Branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>lastDeployTime</i>  Last Deploy Time of Production Branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>pullRequestEnvironmentName</i>  The Amplify Environment name for the pull request. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>enablePullRequestPreview</i>  Enables Pull Request Preview for auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>buildSpec</i>  BuildSpec for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>enableBasicAuth</i>  Enables Basic Auth for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>basicAuthCredentials</i>  Basic Authorization credentials for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>environmentVariables</i>  Environment Variables for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>enableAutoBuild</i>  Enables auto building for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>framework</i>  Framework for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>stage</i>  Stage for the auto created branch. <br/>        \"\"\"\n        pass\n\n    def get_artifact_url(self, artifactId: str) -> GetArtifactUrlResult:\n        r\"\"\" Retrieves artifact info that corresponds to a artifactId. \n\n        :param self:\n        :param artifactId:   Unique Id for a artifact. <br/>\n        :return: artifactUrl:   Presigned url for the artifact. <br/>artifactId:   Unique Id for a artifact. <br/>        \"\"\"\n        pass\n\n    def get_backend_environment(self, environmentName: str, appId: str) -> GetBackendEnvironmentResult:\n        r\"\"\" Retrieves a backend environment for an Amplify App. \n\n        :param self:\n        :param environmentName:   Name for the backend environment. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: backendEnvironment:   Backend environment structure for an an Amplify App. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>updateTime</i>  Last updated date and time for a backend environment, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>createTime</i>  Creation date and time for a backend environment, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>deploymentArtifacts</i>  Name of deployment artifacts. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>stackName</i>  CloudFormation stack name of backend environment. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>environmentName</i>  Name for a backend environment, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>backendEnvironmentArn</i>  Arn for a backend environment, part of an Amplify App. <br/>        \"\"\"\n        pass\n\n    def get_branch(self, branchName: str, appId: str) -> GetBranchResult:\n        r\"\"\" Retrieves a branch for an Amplify App. \n\n        :param self:\n        :param branchName:   Name for the branch. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: branch:   Branch for an Amplify App, which maps to a 3rd party repository branch. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>backendEnvironmentArn</i>  ARN for a Backend Environment, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>sourceBranch</i>  The source branch if the branch is a pull request branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>destinationBranch</i>  The destination branch if the branch is a pull request branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>pullRequestEnvironmentName</i>  The Amplify Environment name for the pull request. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enablePullRequestPreview</i>  Enables Pull Request Preview for this branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>associatedResources</i>  List of custom resources that are linked to this branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>ttl</i>  The content TTL for the website in seconds. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>buildSpec</i>  BuildSpec content for branch for Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>basicAuthCredentials</i>  Basic Authorization credentials for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>thumbnailUrl</i>  Thumbnail URL for the branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableBasicAuth</i>  Enables Basic Authorization for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>totalNumberOfJobs</i>  Total number of Jobs part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>activeJobId</i>  Id of the active job for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>framework</i>  Framework for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>customDomains</i>  Custom domains for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableAutoBuild</i>  Enables auto-building on push for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>environmentVariables</i>  Environment Variables specific to a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>updateTime</i>  Last updated date and time for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>createTime</i>  Creation date and time for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableNotification</i>  Enables notifications for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>displayName</i>  Display name for a branch, will use as the default domain prefix. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>stage</i>  Stage for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>tags</i>  Tag for branch for Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>description</i>  Description for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>branchName</i>  Name for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>branchArn</i>  ARN for a branch, part of an Amplify App. <br/>        \"\"\"\n        pass\n\n    def get_domain_association(self, domainName: str, appId: str) -> GetDomainAssociationResult:\n        r\"\"\" Retrieves domain info that corresponds to an appId and domainName. \n\n        :param self:\n        :param domainName:   Name of the domain. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: domainAssociation:   Domain Association structure. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>subDomains</i>  Subdomains for the Domain Association. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>certificateVerificationDNSRecord</i>  DNS Record for certificate verification. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>statusReason</i>  Reason for the current status of the Domain Association. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>domainStatus</i>  Status fo the Domain Association. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableAutoSubDomain</i>  Enables automated creation of Subdomains for branches. (Currently not supported) <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>domainName</i>  Name of the domain. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>domainAssociationArn</i>  ARN for the Domain Association. <br/>        \"\"\"\n        pass\n\n    def get_job(self, jobId: str, branchName: str, appId: str) -> GetJobResult:\n        r\"\"\" Get a job for a branch, part of an Amplify App. \n\n        :param self:\n        :param jobId:   Unique Id for the Job. <br/>branchName:   Name for the branch, for the Job. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: job:   Structure for an execution job for an Amplify App. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>steps</i>  Execution steps for an execution job, for an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>summary</i>  Summary for an execution job for an Amplify App. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>summary</b>:  Summary for an execution job for an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>jobType</i>  Type for the Job. \\n \"RELEASE\": Manually released from source by using StartJob API. \"RETRY\": Manually retried by using StartJob API. \"WEB_HOOK\": Automatically triggered by WebHooks. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>endTime</i>  End date / time for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>status</i>  Status for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>startTime</i>  Start date / time for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>commitTime</i>  Commit date / time for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>commitMessage</i>  Commit message from 3rd party repository provider for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>commitId</i>  Commit Id from 3rd party repository provider for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>jobId</i>  Unique Id for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>jobArn</i>  Arn for the Job. <br/>        \"\"\"\n        pass\n\n    def get_webhook(self, webhookId: str) -> GetWebhookResult:\n        r\"\"\" Retrieves webhook info that corresponds to a webhookId. \n\n        :param self:\n        :param webhookId:   Unique Id for a webhook. <br/>\n        :return: webhook:   Webhook structure. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>updateTime</i>  Update date / time for a webhook. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>createTime</i>  Create date / time for a webhook. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>description</i>  Description for a webhook. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>branchName</i>  Name for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>webhookUrl</i>  Url of the webhook. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>webhookId</i>  Id of the webhook. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>webhookArn</i>  ARN for the webhook. <br/>        \"\"\"\n        pass\n\n    def list_apps(self, nextToken: str=None, maxResults: int=None) -> ListAppsResult:\n        r\"\"\" Lists existing Amplify Apps. \n\n        :param self:\n        :param maxResults:   Maximum number of records to list in a single response. <br/>nextToken:   Pagination token. If non-null pagination token is returned in a result, then pass its value in another request to fetch more entries. <br/>\n        :return: nextToken:   Pagination token. Set to null to start listing Apps from start. If non-null pagination token is returned in a result, then pass its value in here to list more projects. <br/>apps:   List of Amplify Apps. <br/>        \"\"\"\n        pass\n\n    def list_artifacts(self, jobId: str, branchName: str, appId: str, nextToken: str=None, maxResults: int=None) -> ListArtifactsResult:\n        r\"\"\" List artifacts with an app, a branch, a job and an artifact type. \n\n        :param self:\n        :param maxResults:   Maximum number of records to list in a single response. <br/>nextToken:   Pagination token. Set to null to start listing artifacts from start. If non-null pagination token is returned in a result, then pass its value in here to list more artifacts. <br/>jobId:   Unique Id for an Job. <br/>branchName:   Name for a branch, part of an Amplify App. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: nextToken:   Pagination token. If non-null pagination token is returned in a result, then pass its value in another request to fetch more entries. <br/>artifacts:   List of artifacts. <br/>        \"\"\"\n        pass\n\n    def list_backend_environments(self, appId: str, environmentName: str=None, nextToken: str=None, maxResults: int=None) -> ListBackendEnvironmentsResult:\n        r\"\"\" Lists backend environments for an Amplify App. \n\n        :param self:\n        :param maxResults:   Maximum number of records to list in a single response. <br/>nextToken:   Pagination token. Set to null to start listing backen environments from start. If a non-null pagination token is returned in a result, then pass its value in here to list more backend environments. <br/>environmentName:   Name of the backend environment <br/>appId:   Unique Id for an amplify App. <br/>\n        :return: nextToken:   Pagination token. If non-null pagination token is returned in a result, then pass its value in another request to fetch more entries. <br/>backendEnvironments:   List of backend environments for an Amplify App. <br/>        \"\"\"\n        pass\n\n    def list_branches(self, appId: str, nextToken: str=None, maxResults: int=None) -> ListBranchesResult:\n        r\"\"\" Lists branches for an Amplify App. \n\n        :param self:\n        :param maxResults:   Maximum number of records to list in a single response. <br/>nextToken:   Pagination token. Set to null to start listing branches from start. If a non-null pagination token is returned in a result, then pass its value in here to list more branches. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: nextToken:   Pagination token. If non-null pagination token is returned in a result, then pass its value in another request to fetch more entries. <br/>branches:   List of branches for an Amplify App. <br/>        \"\"\"\n        pass\n\n    def list_domain_associations(self, appId: str, nextToken: str=None, maxResults: int=None) -> ListDomainAssociationsResult:\n        r\"\"\" List domains with an app \n\n        :param self:\n        :param maxResults:   Maximum number of records to list in a single response. <br/>nextToken:   Pagination token. Set to null to start listing Apps from start. If non-null pagination token is returned in a result, then pass its value in here to list more projects. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: nextToken:   Pagination token. If non-null pagination token is returned in a result, then pass its value in another request to fetch more entries. <br/>domainAssociations:   List of Domain Associations. <br/>        \"\"\"\n        pass\n\n    def list_jobs(self, branchName: str, appId: str, nextToken: str=None, maxResults: int=None) -> ListJobsResult:\n        r\"\"\" List Jobs for a branch, part of an Amplify App. \n\n        :param self:\n        :param maxResults:   Maximum number of records to list in a single response. <br/>nextToken:   Pagination token. Set to null to start listing steps from start. If a non-null pagination token is returned in a result, then pass its value in here to list more steps. <br/>branchName:   Name for a branch. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: nextToken:   Pagination token. If non-null pagination token is returned in a result, then pass its value in another request to fetch more entries. <br/>jobSummaries:   Result structure for list job result request. <br/>        \"\"\"\n        pass\n\n    def list_tags_for_resource(self, resourceArn: str) -> ListTagsForResourceResponse:\n        r\"\"\" List tags for resource. \n\n        :param self:\n        :param resourceArn:   Resource arn used to list tags. <br/>\n        :return: tags:   Tags result for response. <br/>        \"\"\"\n        pass\n\n    def list_webhooks(self, appId: str, nextToken: str=None, maxResults: int=None) -> ListWebhooksResult:\n        r\"\"\" List webhooks with an app. \n\n        :param self:\n        :param maxResults:   Maximum number of records to list in a single response. <br/>nextToken:   Pagination token. Set to null to start listing webhooks from start. If non-null pagination token is returned in a result, then pass its value in here to list more webhooks. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: nextToken:   Pagination token. If non-null pagination token is returned in a result, then pass its value in another request to fetch more entries. <br/>webhooks:   List of webhooks. <br/>        \"\"\"\n        pass\n\n    def start_deployment(self, branchName: str, appId: str, jobId: str=None, sourceUrl: str=None) -> StartDeploymentResult:\n        r\"\"\" Start a deployment for manual deploy apps. (Apps are not connected to repository) \n\n        :param self:\n        :param sourceUrl:   The sourceUrl for this deployment, used when calling start deployment without create deployment. SourceUrl can be any HTTP GET url that is public accessible and downloads a single zip. <br/>jobId:   The job id for this deployment, generated by create deployment request. <br/>branchName:   Name for the branch, for the Job. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: jobSummary:   Summary for the Job. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>jobType</i>  Type for the Job. \\n \"RELEASE\": Manually released from source by using StartJob API. \"RETRY\": Manually retried by using StartJob API. \"WEB_HOOK\": Automatically triggered by WebHooks. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>endTime</i>  End date / time for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>status</i>  Status for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>startTime</i>  Start date / time for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>commitTime</i>  Commit date / time for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>commitMessage</i>  Commit message from 3rd party repository provider for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>commitId</i>  Commit Id from 3rd party repository provider for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>jobId</i>  Unique Id for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>jobArn</i>  Arn for the Job. <br/>        \"\"\"\n        pass\n\n    def start_job(self, jobType: str, branchName: str, appId: str, jobId: str=None, jobReason: str=None, commitId: str=None, commitMessage: str=None, commitTime: CommitTime=None) -> StartJobResult:\n        r\"\"\" Starts a new job for a branch, part of an Amplify App. \n\n        :param self:\n        :param commitTime:   Commit date / time for the Job. <br/>commitMessage:   Commit message from 3rd party repository provider for the Job. <br/>commitId:   Commit Id from 3rd party repository provider for the Job. <br/>jobReason:   Descriptive reason for starting this job. <br/>jobType:   Type for the Job. Available JobTypes are: \\n \"RELEASE\": Start a new job with the latest change from the specified branch. Only available for apps that have connected to a repository. \"RETRY\": Retry an existing job. JobId is required for this type of job. <br/>jobId:   Unique Id for an existing job. Required for \"RETRY\" JobType. <br/>branchName:   Name for the branch, for the Job. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: jobSummary:   Summary for the Job. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>jobType</i>  Type for the Job. \\n \"RELEASE\": Manually released from source by using StartJob API. \"RETRY\": Manually retried by using StartJob API. \"WEB_HOOK\": Automatically triggered by WebHooks. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>endTime</i>  End date / time for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>status</i>  Status for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>startTime</i>  Start date / time for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>commitTime</i>  Commit date / time for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>commitMessage</i>  Commit message from 3rd party repository provider for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>commitId</i>  Commit Id from 3rd party repository provider for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>jobId</i>  Unique Id for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>jobArn</i>  Arn for the Job. <br/>        \"\"\"\n        pass\n\n    def stop_job(self, jobId: str, branchName: str, appId: str) -> StopJobResult:\n        r\"\"\" Stop a job that is in progress, for an Amplify branch, part of Amplify App. \n\n        :param self:\n        :param jobId:   Unique Id for the Job. <br/>branchName:   Name for the branch, for the Job. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: jobSummary:   Summary for the Job. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>jobType</i>  Type for the Job. \\n \"RELEASE\": Manually released from source by using StartJob API. \"RETRY\": Manually retried by using StartJob API. \"WEB_HOOK\": Automatically triggered by WebHooks. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>endTime</i>  End date / time for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>status</i>  Status for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>startTime</i>  Start date / time for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>commitTime</i>  Commit date / time for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>commitMessage</i>  Commit message from 3rd party repository provider for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>commitId</i>  Commit Id from 3rd party repository provider for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>jobId</i>  Unique Id for the Job. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>jobArn</i>  Arn for the Job. <br/>        \"\"\"\n        pass\n\n    def tag_resource(self, tags: TagMap, resourceArn: str) -> TagResourceResponse:\n        r\"\"\" Tag resource with tag key and value. \n\n        :param self:\n        :param tags:   Tags used to tag resource. <br/>resourceArn:   Resource arn used to tag resource. <br/>\n        :return:         \"\"\"\n        pass\n\n    def untag_resource(self, tagKeys: List[TagKey], resourceArn: str) -> UntagResourceResponse:\n        r\"\"\" Untag resource with resourceArn. \n\n        :param self:\n        :param tagKeys:   Tag keys used to untag resource. <br/>resourceArn:   Resource arn used to untag resource. <br/>\n        :return:         \"\"\"\n        pass\n\n    def update_app(self, appId: str, name: str=None, description: str=None, platform: str=None, iamServiceRoleArn: str=None, environmentVariables: EnvironmentVariables=None, enableBranchAutoBuild: EnableAutoBuild=None, enableBasicAuth: EnableBasicAuth=None, basicAuthCredentials: str=None, customRules: List[CustomRule]=None, buildSpec: str=None, enableAutoBranchCreation: EnableAutoBranchCreation=None, autoBranchCreationPatterns: List[AutoBranchCreationPattern]=None, autoBranchCreationConfig: AutoBranchCreationConfig=None, repository: str=None, oauthToken: str=None, accessToken: str=None) -> UpdateAppResult:\n        r\"\"\" Updates an existing Amplify App. \n\n        :param self:\n        :param accessToken:   Personal Access token for 3rd party source control system for an Amplify App, used to create webhook and read-only deploy key. Token is not stored. <br/>oauthToken:   OAuth token for 3rd party source control system for an Amplify App, used to create webhook and read-only deploy key. OAuth token is not stored. <br/>repository:   Repository for an Amplify App <br/>autoBranchCreationConfig:   Automated branch creation branchConfig for the Amplify App. :<br/>autoBranchCreationPatterns:   Automated branch creation glob patterns for the Amplify App. <br/>enableAutoBranchCreation:   Enables automated branch creation for the Amplify App. <br/>buildSpec:   BuildSpec for an Amplify App. <br/>customRules:   Custom redirect / rewrite rules for an Amplify App. <br/>basicAuthCredentials:   Basic Authorization credentials for an Amplify App. <br/>enableBasicAuth:   Enables Basic Authorization for an Amplify App. <br/>enableBranchAutoBuild:   Enables branch auto-building for an Amplify App. <br/>environmentVariables:   Environment Variables for an Amplify App. <br/>iamServiceRoleArn:   IAM service role for an Amplify App. <br/>platform:   Platform for an Amplify App. <br/>description:   Description for an Amplify App. <br/>name:   Name for an Amplify App. <br/>appId:   Unique Id for an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>pullRequestEnvironmentName</i>  The Amplify Environment name for the pull request. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enablePullRequestPreview</i>  Enables Pull Request Preview for auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>buildSpec</i>  BuildSpec for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableBasicAuth</i>  Enables Basic Auth for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>basicAuthCredentials</i>  Basic Authorization credentials for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>environmentVariables</i>  Environment Variables for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableAutoBuild</i>  Enables auto building for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>framework</i>  Framework for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>stage</i>  Stage for the auto created branch. <br/>\n        :return: app:   App structure for the updated App. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>autoBranchCreationConfig</i>  Automated branch creation config for the Amplify App. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>autoBranchCreationConfig</b>:  Automated branch creation config for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>autoBranchCreationPatterns</i>  Automated branch creation glob patterns for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableAutoBranchCreation</i>  Enables automated branch creation for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>buildSpec</i>  BuildSpec content for Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>productionBranch</i>  Structure with Production Branch information. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>productionBranch</b>:  Structure with Production Branch information. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>customRules</i>  Custom redirect / rewrite rules for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>basicAuthCredentials</i>  Basic Authorization credentials for branches for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableBasicAuth</i>  Enables Basic Authorization for branches for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableBranchAutoBuild</i>  Enables auto-building of branches for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>defaultDomain</i>  Default domain for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>environmentVariables</i>  Environment Variables for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>iamServiceRoleArn</i>  IAM service role ARN for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>updateTime</i>  Update date / time for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>createTime</i>  Create date / time for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>platform</i>  Platform for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>repository</i>  Repository for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>description</i>  Description for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>tags</i>  Tag for Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>name</i>  Name for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>appArn</i>  ARN for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>appId</i>  Unique Id for the Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>branchName</i>  Branch Name for Production Branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>thumbnailUrl</i>  Thumbnail URL for Production Branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>status</i>  Status of Production Branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>lastDeployTime</i>  Last Deploy Time of Production Branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>pullRequestEnvironmentName</i>  The Amplify Environment name for the pull request. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>enablePullRequestPreview</i>  Enables Pull Request Preview for auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>buildSpec</i>  BuildSpec for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>enableBasicAuth</i>  Enables Basic Auth for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>basicAuthCredentials</i>  Basic Authorization credentials for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>environmentVariables</i>  Environment Variables for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>enableAutoBuild</i>  Enables auto building for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>framework</i>  Framework for the auto created branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>stage</i>  Stage for the auto created branch. <br/>        \"\"\"\n        pass\n\n    def update_branch(self, branchName: str, appId: str, description: str=None, framework: str=None, stage: str=None, enableNotification: EnableNotification=None, enableAutoBuild: EnableAutoBuild=None, environmentVariables: EnvironmentVariables=None, basicAuthCredentials: str=None, enableBasicAuth: EnableBasicAuth=None, buildSpec: str=None, ttl: str=None, displayName: str=None, enablePullRequestPreview: EnablePullRequestPreview=None, pullRequestEnvironmentName: str=None, backendEnvironmentArn: str=None) -> UpdateBranchResult:\n        r\"\"\" Updates a branch for an Amplify App. \n\n        :param self:\n        :param backendEnvironmentArn:   ARN for a Backend Environment, part of an Amplify App. <br/>pullRequestEnvironmentName:   The Amplify Environment name for the pull request. <br/>enablePullRequestPreview:   Enables Pull Request Preview for this branch. <br/>displayName:   Display name for a branch, will use as the default domain prefix. <br/>ttl:   The content TTL for the website in seconds. <br/>buildSpec:   BuildSpec for the branch. <br/>enableBasicAuth:   Enables Basic Auth for the branch. <br/>basicAuthCredentials:   Basic Authorization credentials for the branch. <br/>environmentVariables:   Environment Variables for the branch. <br/>enableAutoBuild:   Enables auto building for the branch. <br/>enableNotification:   Enables notifications for the branch. <br/>stage:   Stage for the branch. <br/>framework:   Framework for the branch. <br/>description:   Description for the branch. <br/>branchName:   Name for the branch. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: branch:   Branch structure for an Amplify App. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>backendEnvironmentArn</i>  ARN for a Backend Environment, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>sourceBranch</i>  The source branch if the branch is a pull request branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>destinationBranch</i>  The destination branch if the branch is a pull request branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>pullRequestEnvironmentName</i>  The Amplify Environment name for the pull request. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enablePullRequestPreview</i>  Enables Pull Request Preview for this branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>associatedResources</i>  List of custom resources that are linked to this branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>ttl</i>  The content TTL for the website in seconds. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>buildSpec</i>  BuildSpec content for branch for Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>basicAuthCredentials</i>  Basic Authorization credentials for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>thumbnailUrl</i>  Thumbnail URL for the branch. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableBasicAuth</i>  Enables Basic Authorization for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>totalNumberOfJobs</i>  Total number of Jobs part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>activeJobId</i>  Id of the active job for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>framework</i>  Framework for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>customDomains</i>  Custom domains for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableAutoBuild</i>  Enables auto-building on push for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>environmentVariables</i>  Environment Variables specific to a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>updateTime</i>  Last updated date and time for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>createTime</i>  Creation date and time for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableNotification</i>  Enables notifications for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>displayName</i>  Display name for a branch, will use as the default domain prefix. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>stage</i>  Stage for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>tags</i>  Tag for branch for Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>description</i>  Description for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>branchName</i>  Name for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>branchArn</i>  ARN for a branch, part of an Amplify App. <br/>        \"\"\"\n        pass\n\n    def update_domain_association(self, subDomainSettings: List[SubDomainSetting], domainName: str, appId: str, enableAutoSubDomain: EnableAutoSubDomain=None) -> UpdateDomainAssociationResult:\n        r\"\"\" Create a new DomainAssociation on an App \n\n        :param self:\n        :param subDomainSettings:   Setting structure for the Subdomain. <br/>enableAutoSubDomain:   Enables automated creation of Subdomains for branches. (Currently not supported) <br/>domainName:   Name of the domain. <br/>appId:   Unique Id for an Amplify App. <br/>\n        :return: domainAssociation:   Domain Association structure. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>subDomains</i>  Subdomains for the Domain Association. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>certificateVerificationDNSRecord</i>  DNS Record for certificate verification. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>statusReason</i>  Reason for the current status of the Domain Association. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>domainStatus</i>  Status fo the Domain Association. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>enableAutoSubDomain</i>  Enables automated creation of Subdomains for branches. (Currently not supported) <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>domainName</i>  Name of the domain. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>domainAssociationArn</i>  ARN for the Domain Association. <br/>        \"\"\"\n        pass\n\n    def update_webhook(self, webhookId: str, branchName: str=None, description: str=None) -> UpdateWebhookResult:\n        r\"\"\" Update a webhook. \n\n        :param self:\n        :param description:   Description for a webhook. <br/>branchName:   Name for a branch, part of an Amplify App. <br/>webhookId:   Unique Id for a webhook. <br/>\n        :return: webhook:   Webhook structure. :<br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>updateTime</i>  Update date / time for a webhook. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>createTime</i>  Create date / time for a webhook. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>description</i>  Description for a webhook. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>branchName</i>  Name for a branch, part of an Amplify App. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>webhookUrl</i>  Url of the webhook. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>webhookId</i>  Id of the webhook. <br/>&nbsp;&nbsp;&nbsp;&nbsp; <i>webhookArn</i>  ARN for the webhook. <br/>        \"\"\"\n        pass\n\n\n"
    }
  ]
}